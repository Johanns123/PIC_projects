

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Sep 21 19:58:48 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4520 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	idataCOMRAM
    52  007F69                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _contadorH
    56  007F69  0F                 	db	15
    57  0000                     _LATD	set	3980
    58  0000                     _TRISD	set	3989
    59  0000                     _ADCON1	set	4033
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  007F82                     __pcinit:
    65                           	opt stack 0
    66  007F82                     start_initialization:
    67                           	opt stack 0
    68  007F82                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Initialize objects allocated to COMRAM (1 bytes)
    72                           ; load TBLPTR registers with __pidataCOMRAM
    73  007F82  0E69               	movlw	low __pidataCOMRAM
    74  007F84  6EF6               	movwf	tblptrl,c
    75  007F86  0E7F               	movlw	high __pidataCOMRAM
    76  007F88  6EF7               	movwf	tblptrh,c
    77  007F8A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    78  007F8C  6EF8               	movwf	tblptru,c
    79  007F8E  0009               	tblrd		*+	;fetch initializer
    80  007F90  CFF5 F006          	movff	tablat,__pdataCOMRAM
    81                           
    82                           ; Clear objects allocated to COMRAM (5 bytes)
    83  007F94  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
    84  007F96  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    85  007F98  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    86  007F9A  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    87  007F9C  6A01               	clrf	__pbssCOMRAM& (0+255),c
    88  007F9E                     end_of_initialization:
    89                           	opt stack 0
    90  007F9E                     __end_of__initialization:
    91                           	opt stack 0
    92  007F9E  0100               	movlb	0
    93  007FA0  EFB5  F03F         	goto	_main	;jump to C main() function
    94                           tblptru	equ	0xFF8
    95                           tblptrh	equ	0xFF7
    96                           tblptrl	equ	0xFF6
    97                           tablat	equ	0xFF5
    98                           
    99                           	psect	bssCOMRAM
   100  000001                     __pbssCOMRAM:
   101                           	opt stack 0
   102  000001                     _estadoL:
   103                           	opt stack 0
   104  000001                     	ds	2
   105  000003                     _estadoH:
   106                           	opt stack 0
   107  000003                     	ds	2
   108  000005                     _contadorL:
   109                           	opt stack 0
   110  000005                     	ds	1
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           
   116                           	psect	dataCOMRAM
   117  000006                     __pdataCOMRAM:
   118                           	opt stack 0
   119  000006                     _contadorH:
   120                           	opt stack 0
   121  000006                     	ds	1
   122                           tblptru	equ	0xFF8
   123                           tblptrh	equ	0xFF7
   124                           tblptrl	equ	0xFF6
   125                           tablat	equ	0xFF5
   126                           
   127                           	psect	cstackCOMRAM
   128  000000                     __pcstackCOMRAM:
   129                           	opt stack 0
   130  000000                     tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           
   135                           ; 2 bytes @ 0x0
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 26 in file "main.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  2   24[None  ] int 
   148 ;; Registers used:
   149 ;;		wreg, status,2, status,0, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : 0/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   155 ;;      Params:         0       0       0       0       0       0       0
   156 ;;      Locals:         0       0       0       0       0       0       0
   157 ;;      Temps:          0       0       0       0       0       0       0
   158 ;;      Totals:         0       0       0       0       0       0       0
   159 ;;Total ram usage:        0 bytes
   160 ;; Hardware stack levels required when called:    1
   161 ;; This function calls:
   162 ;;		_loop
   163 ;;		_setup
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170  007F6A                     __ptext0:
   171                           	opt stack 0
   172  007F6A                     _main:
   173                           	opt stack 30
   174                           
   175                           ;main.c: 28: setup();
   176                           
   177                           ;incstack = 0
   178  007F6A  ECBA  F03F         	call	_setup	;wreg free
   179  007F6E  ECD2  F03F         	call	_loop	;wreg free
   180  007F72  D7FD               	goto	l25
   181  007F74                     __end_of_main:
   182                           	opt stack 0
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           
   188 ;; *************** function _setup *****************
   189 ;; Defined at:
   190 ;;		line 33 in file "main.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;		None
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, status,2
   199 ;; Tracked objects:
   200 ;;		On entry : 0/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   204 ;;      Params:         0       0       0       0       0       0       0
   205 ;;      Locals:         0       0       0       0       0       0       0
   206 ;;      Temps:          0       0       0       0       0       0       0
   207 ;;      Totals:         0       0       0       0       0       0       0
   208 ;;Total ram usage:        0 bytes
   209 ;; Hardware stack levels used:    1
   210 ;; This function calls:
   211 ;;		Nothing
   212 ;; This function is called by:
   213 ;;		_main
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text1
   218  007F74                     __ptext1:
   219                           	opt stack 0
   220  007F74                     _setup:
   221                           	opt stack 30
   222                           
   223                           ;main.c: 35: ADCON1 = 0x0f;
   224                           
   225                           ;incstack = 0
   226  007F74  0E0F               	movlw	15
   227  007F76  6EC1               	movwf	4033,c	;volatile
   228                           
   229                           ;main.c: 36: TRISD = 0x00;
   230  007F78  0E00               	movlw	0
   231  007F7A  6E95               	movwf	3989,c	;volatile
   232                           
   233                           ;main.c: 37: LATD = 0x00;
   234  007F7C  0E00               	movlw	0
   235  007F7E  6E8C               	movwf	3980,c	;volatile
   236  007F80  0012               	return		;funcret
   237  007F82                     __end_of_setup:
   238                           	opt stack 0
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           
   244 ;; *************** function _loop *****************
   245 ;; Defined at:
   246 ;;		line 41 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   260 ;;      Params:         0       0       0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels used:    1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text2
   274  007FA4                     __ptext2:
   275                           	opt stack 0
   276  007FA4                     _loop:
   277                           	opt stack 30
   278                           
   279                           ;main.c: 44: if(estadoH < 500)
   280                           
   281                           ;incstack = 0
   282  007FA4  0EF4               	movlw	244
   283  007FA6  5C03               	subwf	_estadoH,w,c
   284  007FA8  0E01               	movlw	1
   285  007FAA  5804               	subwfb	_estadoH+1,w,c
   286  007FAC  B0D8               	btfsc	status,0,c
   287  007FAE  D003               	goto	l34
   288                           
   289                           ;main.c: 45: {
   290                           ;main.c: 46: estadoH++;
   291  007FB0  4A03               	infsnz	_estadoH,f,c
   292  007FB2  2A04               	incf	_estadoH+1,f,c
   293                           
   294                           ;main.c: 47: }
   295  007FB4  D009               	goto	l35
   296  007FB6                     l34:
   297                           
   298                           ;main.c: 49: else
   299                           ;main.c: 50: {
   300                           ;main.c: 51: contadorH--;
   301  007FB6  0606               	decf	_contadorH,f,c
   302                           
   303                           ;main.c: 52: LATD = (contadorH<<4) | (contadorL);
   304  007FB8  3806               	swapf	_contadorH,w,c
   305  007FBA  0BF0               	andlw	240
   306  007FBC  1005               	iorwf	_contadorL,w,c
   307  007FBE  6E8C               	movwf	3980,c	;volatile
   308                           
   309                           ;main.c: 53: estadoH = 1;
   310  007FC0  0E00               	movlw	0
   311  007FC2  6E04               	movwf	_estadoH+1,c
   312  007FC4  0E01               	movlw	1
   313  007FC6  6E03               	movwf	_estadoH,c
   314  007FC8                     l35:
   315                           
   316                           ;main.c: 54: }
   317                           ;main.c: 56: if(estadoL < 900)
   318  007FC8  0E84               	movlw	132
   319  007FCA  5C01               	subwf	_estadoL,w,c
   320  007FCC  0E03               	movlw	3
   321  007FCE  5802               	subwfb	_estadoL+1,w,c
   322  007FD0  B0D8               	btfsc	status,0,c
   323  007FD2  D003               	goto	l36
   324                           
   325                           ;main.c: 57: {
   326                           ;main.c: 58: estadoL++;
   327  007FD4  4A01               	infsnz	_estadoL,f,c
   328  007FD6  2A02               	incf	_estadoL+1,f,c
   329                           
   330                           ;main.c: 59: }
   331  007FD8  D009               	goto	l38
   332  007FDA                     l36:
   333                           
   334                           ;main.c: 61: else
   335                           ;main.c: 62: {
   336                           ;main.c: 63: contadorL++;
   337  007FDA  2A05               	incf	_contadorL,f,c
   338                           
   339                           ;main.c: 64: LATD = (contadorH<<4) | (contadorL);
   340  007FDC  3806               	swapf	_contadorH,w,c
   341  007FDE  0BF0               	andlw	240
   342  007FE0  1005               	iorwf	_contadorL,w,c
   343  007FE2  6E8C               	movwf	3980,c	;volatile
   344                           
   345                           ;main.c: 65: estadoL = 1;
   346  007FE4  0E00               	movlw	0
   347  007FE6  6E02               	movwf	_estadoL+1,c
   348  007FE8  0E01               	movlw	1
   349  007FEA  6E01               	movwf	_estadoL,c
   350  007FEC                     l38:
   351                           
   352                           ;main.c: 71: if(contadorL > 15)
   353  007FEC  0E0F               	movlw	15
   354  007FEE  6405               	cpfsgt	_contadorL,c
   355  007FF0  D002               	goto	l39
   356                           
   357                           ;main.c: 72: contadorL = 0;
   358  007FF2  0E00               	movlw	0
   359  007FF4  6E05               	movwf	_contadorL,c
   360  007FF6                     l39:
   361                           
   362                           ;main.c: 73: _delay((unsigned long)((1)*(4000000UL/4000.0)));
   363  007FF6  0EC8               	movlw	200
   364  007FF8                     u47:
   365  007FF8  D000               	nop2	
   366  007FFA  2EE8               	decfsz	wreg,f,c
   367  007FFC  D7FD               	bra	u47
   368  007FFE  0012               	return		;funcret
   369  008000                     __end_of_loop:
   370                           	opt stack 0
   371  0000                     tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           wreg	equ	0xFE8
   376                           status	equ	0xFD8
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           wreg	equ	0xFE8
   382                           status	equ	0xFD8
   383                           
   384                           	psect	rparam
   385  0000                     tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           wreg	equ	0xFE8
   390                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      0       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      0       6       1        4.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      15        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Sep 21 19:58:48 2022

                     l25 7F6E                       l34 7FB6                       l35 7FC8  
                     l36 7FDA                       l38 7FEC                       l39 7FF6  
                     u47 7FF8              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _LATD 000F8C                     _main 7F6A                     _loop 7FA4  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0000                    ?_loop 0000  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _setup 7F74                    tablat 000FF5                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization 7F82             __end_of_main 7F74  
           __end_of_loop 8000                   ??_main 0000                   ??_loop 0000  
          __activetblptr 000000                   _ADCON1 000FC1                   ?_setup 0000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000             __pdataCOMRAM 0006  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 7F9E            ___rparam_used 000001  
         __pcstackCOMRAM 0000            __end_of_setup 7F82                  ??_setup 0000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F82  
                __ramtop 0600                  __ptext0 7F6A                  __ptext1 7F74  
                __ptext2 7FA4                  _estadoH 0003                  _estadoL 0001  
   end_of_initialization 7F9E            __pidataCOMRAM 7F69      start_initialization 7F82  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001        __CFG_CCP2MX$PORTC 000000  
              _contadorH 0006                _contadorL 0005           __size_of_setup 000E  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000            __size_of_main 000A            __size_of_loop 005C  
