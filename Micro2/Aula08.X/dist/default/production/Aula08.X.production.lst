

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 22 20:30:07 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4520 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     
    74                           	psect	idataCOMRAM
    75   000540                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _linha2
    79   000540  41                 	db	65
    80   000541  42                 	db	66
    81   000542  43                 	db	67
    82   000543  44                 	db	68
    83   000544  45                 	db	69
    84   000545  46                 	db	70
    85   000546  47                 	db	71
    86   000547  48                 	db	72
    87   000548  49                 	db	73
    88   000549  4A                 	db	74
    89   00054A  00                 	db	0
    90   00054B  00                 	db	0
    91   00054C  00                 	db	0
    92   00054D  00                 	db	0
    93   00054E  00                 	db	0
    94   00054F  00                 	db	0
    95   000550  00                 	db	0
    96                           
    97                           ;initializer for _conv7seg
    98   000551  3F                 	db	63
    99   000552  06                 	db	6
   100   000553  5B                 	db	91
   101   000554  4F                 	db	79
   102   000555  66                 	db	102
   103   000556  6D                 	db	109
   104   000557  7D                 	db	125
   105   000558  07                 	db	7
   106   000559  7F                 	db	127
   107   00055A  6F                 	db	111
   108   00055B  77                 	db	119
   109   00055C  7C                 	db	124
   110   00055D  39                 	db	57
   111   00055E  5E                 	db	94
   112   00055F  79                 	db	121
   113   000560  71                 	db	113
   114   000561  00                 	db	0
   115                           
   116                           ;initializer for loop2@mind1
   117   000562  09                 	db	9
   118                           
   119                           ;initializer for ContDisplay7seg@estado
   120   000563  01                 	db	1
   121                           
   122                           ;initializer for _num4
   123   000564  04                 	db	4
   124                           
   125                           ;initializer for _num3
   126   000565  03                 	db	3
   127                           
   128                           ;initializer for _num2
   129   000566  02                 	db	2
   130                           
   131                           ;initializer for _num1
   132   000567  01                 	db	1
   133                           
   134                           ;initializer for _linha1
   135   000568  41                 	db	65
   136   000569  42                 	db	66
   137   00056A  43                 	db	67
   138   00056B  44                 	db	68
   139   00056C  45                 	db	69
   140   00056D  46                 	db	70
   141   00056E  47                 	db	71
   142   00056F  48                 	db	72
   143   000570  49                 	db	73
   144   000571  4A                 	db	74
   145   000572  00                 	db	0
   146   000573  00                 	db	0
   147   000574  00                 	db	0
   148   000575  00                 	db	0
   149   000576  00                 	db	0
   150   000577  00                 	db	0
   151   000578  00                 	db	0
   152   000000                     _INTCON2	set	4081
   153   000000                     _INTCON3	set	4080
   154   000000                     _INTCON	set	4082
   155   000000                     _LATA	set	3977
   156   000000                     _PEIE	set	32662
   157   000000                     _GIE	set	32663
   158   000000                     _LATA4	set	31820
   159   000000                     _LATA3	set	31819
   160   000000                     _LATA2	set	31818
   161   000000                     _INT2IE	set	32644
   162   000000                     _INT2IF	set	32641
   163   000000                     _INT1IE	set	32643
   164   000000                     _INT0IE	set	32660
   165   000000                     _INT0IF	set	32657
   166   000000                     _TMR0IF	set	32658
   167   000000                     _PORTD	set	3971
   168   000000                     _TMR0L	set	4054
   169   000000                     _LATA5	set	31821
   170   000000                     _TMR0IE	set	32661
   171   000000                     _INT1IF	set	32640
   172   000000                     _LATB	set	3978
   173   000000                     _LATD	set	3980
   174   000000                     _TRISA	set	3986
   175   000000                     _ADCON1	set	4033
   176   000000                     _IPEN	set	32391
   177   000000                     _T0CON	set	4053
   178   000000                     _ADCON0	set	4034
   179   000000                     _T2CON	set	4042
   180   000000                     _CCP1CON	set	4029
   181   000000                     _TRISE	set	3990
   182   000000                     _TRISD	set	3989
   183   000000                     _TRISC	set	3988
   184   000000                     _TRISB	set	3987
   185   000000                     _PR2	set	4043
   186   000000                     _CCPR1L	set	4030
   187   000000                     _ADCON2	set	4032
   188   000000                     _PORTEbits	set	3972
   189                           
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193   0004CC                     __pcinit:
   194                           	callstack 0
   195   0004CC                     start_initialization:
   196                           	callstack 0
   197   0004CC                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Initialize objects allocated to COMRAM (57 bytes)
   201                           ; load TBLPTR registers with __pidataCOMRAM
   202   0004CC  0E40               	movlw	low __pidataCOMRAM
   203   0004CE  6EF6               	movwf	tblptrl,c
   204   0004D0  0E05               	movlw	high __pidataCOMRAM
   205   0004D2  6EF7               	movwf	tblptrh,c
   206   0004D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   207   0004D6  6EF8               	movwf	tblptru,c
   208   0004D8  EE00  F001         	lfsr	0,__pdataCOMRAM
   209   0004DC  EE10 F039          	lfsr	1,57
   210   0004E0                     copy_data0:
   211   0004E0  0009               	tblrd		*+
   212   0004E2  CFF5 FFEE          	movff	tablat,postinc0
   213   0004E6  50E5               	movf	postdec1,w,c
   214   0004E8  50E1               	movf	fsr1l,w,c
   215   0004EA  E1FA               	bnz	copy_data0
   216                           
   217                           ; Clear objects allocated to COMRAM (13 bytes)
   218   0004EC  EE00  F04B         	lfsr	0,__pbssCOMRAM
   219   0004F0  0E0D               	movlw	13
   220   0004F2                     clear_0:
   221   0004F2  6AEE               	clrf	postinc0,c
   222   0004F4  06E8               	decf	wreg,f,c
   223   0004F6  E1FD               	bnz	clear_0
   224   0004F8                     end_of_initialization:
   225                           	callstack 0
   226   0004F8                     __end_of__initialization:
   227                           	callstack 0
   228   0004F8  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229   0004FA  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230   0004FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   231   0004FE  6EF8               	movwf	tblptru,c
   232   000500  0100               	movlb	0
   233   000502  EF1B  F003         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMRAM
   236   00004B                     __pbssCOMRAM:
   237                           	callstack 0
   238   00004B                     f_timer0@tempo3:
   239                           	callstack 0
   240   00004B                     	ds	2
   241   00004D                     f_timer0@tempo2:
   242                           	callstack 0
   243   00004D                     	ds	2
   244   00004F                     f_timer0@tempo:
   245                           	callstack 0
   246   00004F                     	ds	2
   247   000051                     loop3@dado:
   248                           	callstack 0
   249   000051                     	ds	1
   250   000052                     loop2@ind1:
   251                           	callstack 0
   252   000052                     	ds	1
   253   000053                     _saida:
   254                           	callstack 0
   255   000053                     	ds	1
   256   000054                     _sel:
   257                           	callstack 0
   258   000054                     	ds	1
   259   000055                     _led2:
   260                           	callstack 0
   261   000055                     	ds	1
   262   000056                     _led1:
   263                           	callstack 0
   264   000056                     	ds	1
   265   000057                     _estado:
   266                           	callstack 0
   267   000057                     	ds	1
   268                           
   269                           	psect	dataCOMRAM
   270   000001                     __pdataCOMRAM:
   271                           	callstack 0
   272   000001                     _linha2:
   273                           	callstack 0
   274   000001                     	ds	17
   275   000012                     _conv7seg:
   276                           	callstack 0
   277   000012                     	ds	17
   278   000023                     loop2@mind1:
   279                           	callstack 0
   280   000023                     	ds	1
   281   000024                     ContDisplay7seg@estado:
   282                           	callstack 0
   283   000024                     	ds	1
   284   000025                     _num4:
   285                           	callstack 0
   286   000025                     	ds	1
   287   000026                     _num3:
   288                           	callstack 0
   289   000026                     	ds	1
   290   000027                     _num2:
   291                           	callstack 0
   292   000027                     	ds	1
   293   000028                     _num1:
   294                           	callstack 0
   295   000028                     	ds	1
   296   000029                     _linha1:
   297                           	callstack 0
   298   000029                     	ds	17
   299                           
   300                           	psect	cstackCOMRAM
   301   00003A                     __pcstackCOMRAM:
   302                           	callstack 0
   303   00003A                     ??_ContDisplay7seg:
   304   00003A                     i2lcd_wr@val:
   305                           	callstack 0
   306   00003A                     ler_teclado@i:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x0
   310   00003A                     	ds	1
   311   00003B                     lcd_dat@val:
   312                           	callstack 0
   313   00003B                     i2lcd_cmd@val:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x1
   317   00003B                     	ds	1
   318   00003C                     ler_teclado@i_152:
   319                           	callstack 0
   320   00003C                     lcd_str@str:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x2
   324   00003C                     	ds	2
   325   00003E                     lcd_str@i:
   326                           	callstack 0
   327   00003E                     ler_teclado@i_153:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x4
   331   00003E                     	ds	1
   332   00003F                     
   333                           ; 1 bytes @ 0x5
   334   00003F                     	ds	1
   335   000040                     ler_teclado@saida:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x6
   339   000040                     	ds	1
   340   000041                     ler_teclado@entrada:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x7
   344   000041                     	ds	1
   345   000042                     ??_f_interrupt_high:
   346                           
   347                           ; 1 bytes @ 0x8
   348   000042                     	ds	4
   349   000046                     ??_f_interrupt_low:
   350                           
   351                           ; 1 bytes @ 0xC
   352   000046                     	ds	1
   353   000047                     lcd_wr@val:
   354                           	callstack 0
   355   000047                     f_pwm@duty:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xD
   359   000047                     	ds	1
   360   000048                     lcd_cmd@val:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xE
   364   000048                     	ds	1
   365   000049                     ??_lcd_init:
   366   000049                     ??_f_pwm:
   367                           
   368                           ; 1 bytes @ 0xF
   369   000049                     	ds	2
   370   00004B                     
   371                           ; 1 bytes @ 0x11
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 299 in file "aula_20221116.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   391 ;;      Params:         0       0       0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels required when called: 11
   397 ;; This function calls:
   398 ;;		_loop
   399 ;;		_setup
   400 ;; This function is called by:
   401 ;;		Startup code after reset
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text0
   406   000636                     __ptext0:
   407                           	callstack 0
   408   000636                     _main:
   409                           	callstack 20
   410   000636                     
   411                           ;aula_20221116.c: 301:    setup();
   412   000636  ECD0  F001         	call	_setup	;wreg free
   413   00063A                     l1493:
   414   00063A  EC2B  F003         	call	_loop	;wreg free
   415   00063E  EF1D  F003         	goto	l1493
   416   000642  EF13  F000         	goto	start
   417   000646                     __end_of_main:
   418                           	callstack 0
   419                           
   420 ;; *************** function _setup *****************
   421 ;; Defined at:
   422 ;;		line 167 in file "aula_20221116.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   436 ;;      Params:         0       0       0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; Hardware stack levels required when called: 10
   443 ;; This function calls:
   444 ;;		_f_pwm
   445 ;;		_lcd_init
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text1
   452   0003A0                     __ptext1:
   453                           	callstack 0
   454   0003A0                     _setup:
   455                           	callstack 20
   456   0003A0                     
   457                           ;aula_20221116.c: 169:     IPEN = 0;
   458   0003A0  9ED0               	bcf	4048,7,c	;volatile
   459                           
   460                           ;aula_20221116.c: 170:     GIE = 0;
   461   0003A2  9EF2               	bcf	4082,7,c	;volatile
   462                           
   463                           ;aula_20221116.c: 171:     PEIE = 0;
   464   0003A4  9CF2               	bcf	4082,6,c	;volatile
   465   0003A6                     
   466                           ;aula_20221116.c: 173:     ADCON1 = 0b00001111;
   467   0003A6  0E0F               	movlw	15
   468   0003A8  6EC1               	movwf	193,c	;volatile
   469                           
   470                           ;aula_20221116.c: 176:     TRISA = 0b11000011;
   471   0003AA  0EC3               	movlw	195
   472   0003AC  6E92               	movwf	146,c	;volatile
   473                           
   474                           ;aula_20221116.c: 177:     TRISB = 0b00111111;
   475   0003AE  0E3F               	movlw	63
   476   0003B0  6E93               	movwf	147,c	;volatile
   477                           
   478                           ;aula_20221116.c: 178:     TRISC = 0b11111011;
   479   0003B2  0EFB               	movlw	251
   480   0003B4  6E94               	movwf	148,c	;volatile
   481                           
   482                           ;aula_20221116.c: 179:     TRISD = 0b00000000;
   483   0003B6  0E00               	movlw	0
   484   0003B8  6E95               	movwf	149,c	;volatile
   485                           
   486                           ;aula_20221116.c: 180:     TRISE = 0b11111001;
   487   0003BA  0EF9               	movlw	249
   488   0003BC  6E96               	movwf	150,c	;volatile
   489                           
   490                           ;aula_20221116.c: 182:     LATA = 0b00000000;
   491   0003BE  0E00               	movlw	0
   492   0003C0  6E89               	movwf	137,c	;volatile
   493                           
   494                           ;aula_20221116.c: 183:     LATB = 0b00000000;
   495   0003C2  0E00               	movlw	0
   496   0003C4  6E8A               	movwf	138,c	;volatile
   497                           
   498                           ;aula_20221116.c: 184:     LATD = 0b00000000;
   499   0003C6  0E00               	movlw	0
   500   0003C8  6E8C               	movwf	140,c	;volatile
   501                           
   502                           ;aula_20221116.c: 187:     INTCON = 0b00110000;
   503   0003CA  0E30               	movlw	48
   504   0003CC  6EF2               	movwf	242,c	;volatile
   505                           
   506                           ;aula_20221116.c: 188:     INTCON2 = 0b10000101;
   507   0003CE  0E85               	movlw	133
   508   0003D0  6EF1               	movwf	241,c	;volatile
   509                           
   510                           ;aula_20221116.c: 189:     INTCON3 = 0b11011000;
   511   0003D2  0ED8               	movlw	216
   512   0003D4  6EF0               	movwf	240,c	;volatile
   513                           
   514                           ;aula_20221116.c: 193:     T0CON = 0b11010001;
   515   0003D6  0ED1               	movlw	209
   516   0003D8  6ED5               	movwf	213,c	;volatile
   517                           
   518                           ;aula_20221116.c: 194:     TMR0L = 6;
   519   0003DA  0E06               	movlw	6
   520   0003DC  6ED6               	movwf	214,c	;volatile
   521                           
   522                           ;aula_20221116.c: 196:     T2CON = 0b00000101;
   523   0003DE  0E05               	movlw	5
   524   0003E0  6ECA               	movwf	202,c	;volatile
   525   0003E2                     
   526                           ;aula_20221116.c: 197:     PR2 = 255;
   527   0003E2  68CB               	setf	203,c	;volatile
   528                           
   529                           ;aula_20221116.c: 198:     CCP1CON = 0b00001100;
   530   0003E4  0E0C               	movlw	12
   531   0003E6  6EBD               	movwf	189,c	;volatile
   532                           
   533                           ;aula_20221116.c: 200:     ADCON0 = 0b00000001;
   534   0003E8  0E01               	movlw	1
   535   0003EA  6EC2               	movwf	194,c	;volatile
   536                           
   537                           ;aula_20221116.c: 201:     ADCON1 = 0b00001101;
   538   0003EC  0E0D               	movlw	13
   539   0003EE  6EC1               	movwf	193,c	;volatile
   540                           
   541                           ;aula_20221116.c: 202:     ADCON2 = 0b00010100;
   542   0003F0  0E14               	movlw	20
   543   0003F2  6EC0               	movwf	192,c	;volatile
   544   0003F4                     
   545                           ;aula_20221116.c: 204:     lcd_init();
   546   0003F4  EC04  F002         	call	_lcd_init	;wreg free
   547   0003F8                     
   548                           ;aula_20221116.c: 206:     f_pwm(300);
   549   0003F8  0E01               	movlw	1
   550   0003FA  6E48               	movwf	(f_pwm@duty+1)^0,c
   551   0003FC  0E2C               	movlw	44
   552   0003FE  6E47               	movwf	f_pwm@duty^0,c
   553   000400  ECBD  F002         	call	_f_pwm	;wreg free
   554   000404                     
   555                           ;aula_20221116.c: 209:     GIE = 1;
   556   000404  8EF2               	bsf	4082,7,c	;volatile
   557   000406  0012               	return		;funcret
   558   000408                     __end_of_setup:
   559                           	callstack 0
   560                           
   561 ;; *************** function _lcd_init *****************
   562 ;; Defined at:
   563 ;;		line 56 in file "lcd.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         0       0       0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0
   579 ;;      Temps:          1       0       0       0       0       0       0
   580 ;;      Totals:         1       0       0       0       0       0       0
   581 ;;Total ram usage:        1 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 9
   584 ;; This function calls:
   585 ;;		_lcd_cmd
   586 ;; This function is called by:
   587 ;;		_setup
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text2
   592   000408                     __ptext2:
   593                           	callstack 0
   594   000408                     _lcd_init:
   595                           	callstack 20
   596   000408                     
   597                           ;lcd.c: 58:  PORTEbits.RE1=0;
   598   000408  9284               	bcf	132,1,c	;volatile
   599                           
   600                           ;lcd.c: 59:  PORTEbits.RE2=0;
   601   00040A  9484               	bcf	132,2,c	;volatile
   602   00040C                     
   603                           ;lcd.c: 60:     _delay((unsigned long)((20)*(4000000/4000.0)));
   604   00040C  0E1A               	movlw	26
   605   00040E  6E49               	movwf	??_lcd_init^0,c
   606   000410  0EF8               	movlw	248
   607   000412                     u607:
   608   000412  2EE8               	decfsz	wreg,f,c
   609   000414  D7FE               	bra	u607
   610   000416  2E49               	decfsz	??_lcd_init^0,f,c
   611   000418  D7FC               	bra	u607
   612   00041A  D000               	nop2	
   613   00041C                     
   614                           ;lcd.c: 61:  PORTEbits.RE1=1;
   615   00041C  8284               	bsf	132,1,c	;volatile
   616   00041E                     
   617                           ;lcd.c: 63:  lcd_cmd(0x38);
   618   00041E  0E38               	movlw	56
   619   000420  ECE8  F002         	call	_lcd_cmd
   620   000424                     
   621                           ;lcd.c: 64:  _delay((unsigned long)((5)*(4000000/4000.0)));
   622   000424  0E07               	movlw	7
   623   000426  6E49               	movwf	??_lcd_init^0,c
   624   000428  0E7D               	movlw	125
   625   00042A                     u617:
   626   00042A  2EE8               	decfsz	wreg,f,c
   627   00042C  D7FE               	bra	u617
   628   00042E  2E49               	decfsz	??_lcd_init^0,f,c
   629   000430  D7FC               	bra	u617
   630   000432  F000               	nop	
   631                           
   632                           ;lcd.c: 65:  lcd_cmd(0x38);
   633   000434  0E38               	movlw	56
   634   000436  ECE8  F002         	call	_lcd_cmd
   635   00043A                     
   636                           ;lcd.c: 66:     _delay((unsigned long)((1)*(4000000/4000.0)));
   637   00043A  0EC8               	movlw	200
   638   00043C                     u627:
   639   00043C  D000               	nop2	
   640   00043E  2EE8               	decfsz	wreg,f,c
   641   000440  D7FD               	bra	u627
   642   000442                     
   643                           ;lcd.c: 67:  lcd_cmd(0x38);
   644   000442  0E38               	movlw	56
   645   000444  ECE8  F002         	call	_lcd_cmd
   646   000448                     
   647                           ;lcd.c: 68:  lcd_cmd(0x08);
   648   000448  0E08               	movlw	8
   649   00044A  ECE8  F002         	call	_lcd_cmd
   650   00044E                     
   651                           ;lcd.c: 69:  lcd_cmd(0x0F);
   652   00044E  0E0F               	movlw	15
   653   000450  ECE8  F002         	call	_lcd_cmd
   654   000454                     
   655                           ;lcd.c: 70:  lcd_cmd(0x01);
   656   000454  0E01               	movlw	1
   657   000456  ECE8  F002         	call	_lcd_cmd
   658   00045A                     
   659                           ;lcd.c: 71:  lcd_cmd(0x38);
   660   00045A  0E38               	movlw	56
   661   00045C  ECE8  F002         	call	_lcd_cmd
   662   000460                     
   663                           ;lcd.c: 72:     lcd_cmd(0x80);
   664   000460  0E80               	movlw	128
   665   000462  ECE8  F002         	call	_lcd_cmd
   666   000466                     
   667                           ;lcd.c: 73:     lcd_cmd(0x0C);
   668   000466  0E0C               	movlw	12
   669   000468  ECE8  F002         	call	_lcd_cmd
   670   00046C  0012               	return		;funcret
   671   00046E                     __end_of_lcd_init:
   672                           	callstack 0
   673                           
   674 ;; *************** function _lcd_cmd *****************
   675 ;; Defined at:
   676 ;;		line 34 in file "lcd.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  val             1    wreg     unsigned char 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  val             1   14[COMRAM] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   690 ;;      Params:         0       0       0       0       0       0       0
   691 ;;      Locals:         1       0       0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0
   693 ;;      Totals:         1       0       0       0       0       0       0
   694 ;;Total ram usage:        1 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 8
   697 ;; This function calls:
   698 ;;		_lcd_wr
   699 ;; This function is called by:
   700 ;;		_lcd_init
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text3
   705   0005D0                     __ptext3:
   706                           	callstack 0
   707   0005D0                     _lcd_cmd:
   708                           	callstack 20
   709                           
   710                           ;incstack = 0
   711                           ;lcd_cmd@val stored from wreg
   712   0005D0  6E48               	movwf	lcd_cmd@val^0,c
   713   0005D2                     
   714                           ;lcd.c: 34: void lcd_cmd(unsigned char val);lcd.c: 35: {;lcd.c: 36:  PORTEbits.RE1=1;
   715   0005D2  8284               	bsf	132,1,c	;volatile
   716   0005D4                     
   717                           ;lcd.c: 37:         lcd_wr(val);
   718   0005D4  5048               	movf	lcd_cmd@val^0,w,c
   719   0005D6  EC23  F003         	call	_lcd_wr
   720   0005DA                     
   721                           ;lcd.c: 38:         PORTEbits.RE2=0;
   722   0005DA  9484               	bcf	132,2,c	;volatile
   723   0005DC                     
   724                           ;lcd.c: 39:         _delay((unsigned long)((40)*(4000000/4000000.0)));
   725   0005DC  0E0D               	movlw	13
   726   0005DE                     u637:
   727   0005DE  2EE8               	decfsz	wreg,f,c
   728   0005E0  D7FE               	bra	u637
   729   0005E2  F000               	nop	
   730   0005E4                     
   731                           ;lcd.c: 40:         PORTEbits.RE1=0;
   732   0005E4  9284               	bcf	132,1,c	;volatile
   733   0005E6                     
   734                           ;lcd.c: 41:         _delay((unsigned long)((40)*(4000000/4000000.0)));
   735   0005E6  0E0D               	movlw	13
   736   0005E8                     u647:
   737   0005E8  2EE8               	decfsz	wreg,f,c
   738   0005EA  D7FE               	bra	u647
   739   0005EC  F000               	nop	
   740   0005EE                     
   741                           ;lcd.c: 42:  PORTEbits.RE1=1;
   742   0005EE  8284               	bsf	132,1,c	;volatile
   743   0005F0  0012               	return		;funcret
   744   0005F2                     __end_of_lcd_cmd:
   745                           	callstack 0
   746                           
   747 ;; *************** function _lcd_wr *****************
   748 ;; Defined at:
   749 ;;		line 29 in file "lcd.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  val             1    wreg     unsigned char 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  val             1   13[COMRAM] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   763 ;;      Params:         0       0       0       0       0       0       0
   764 ;;      Locals:         1       0       0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0
   766 ;;      Totals:         1       0       0       0       0       0       0
   767 ;;Total ram usage:        1 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 7
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_lcd_cmd
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text4
   778   000646                     __ptext4:
   779                           	callstack 0
   780   000646                     _lcd_wr:
   781                           	callstack 20
   782                           
   783                           ;incstack = 0
   784                           ;lcd_wr@val stored from wreg
   785   000646  6E47               	movwf	lcd_wr@val^0,c
   786   000648                     
   787                           ;lcd.c: 29: void lcd_wr(unsigned char val);lcd.c: 30: {;lcd.c: 31:   PORTD=val;
   788   000648  C047  FF83         	movff	lcd_wr@val,3971	;volatile
   789   00064C  0012               	return		;funcret
   790   00064E                     __end_of_lcd_wr:
   791                           	callstack 0
   792                           
   793 ;; *************** function _f_pwm *****************
   794 ;; Defined at:
   795 ;;		line 336 in file "aula_20221116.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  duty            2   13[COMRAM] unsigned int 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   809 ;;      Params:         2       0       0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0       0       0
   811 ;;      Temps:          2       0       0       0       0       0       0
   812 ;;      Totals:         4       0       0       0       0       0       0
   813 ;;Total ram usage:        4 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; Hardware stack levels required when called: 7
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_setup
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text5
   824   00057A                     __ptext5:
   825                           	callstack 0
   826   00057A                     _f_pwm:
   827                           	callstack 22
   828   00057A                     
   829                           ;aula_20221116.c: 336: void f_pwm(unsigned int duty);aula_20221116.c: 337: {;aula_202211
      +                          16.c: 338:     CCP1CON &= 0b11001111;
   830   00057A  0ECF               	movlw	207
   831   00057C  16BD               	andwf	189,f,c	;volatile
   832                           
   833                           ;aula_20221116.c: 339:     CCP1CON |= ((duty & 0b11) << 4);
   834   00057E  C047  F049         	movff	f_pwm@duty,??_f_pwm	;volatile
   835   000582  0E03               	movlw	3
   836   000584  1649               	andwf	??_f_pwm^0,f,c
   837   000586  3849               	swapf	??_f_pwm^0,w,c
   838   000588  0BF0               	andlw	240
   839   00058A  12BD               	iorwf	189,f,c	;volatile
   840                           
   841                           ;aula_20221116.c: 340:     CCPR1L = duty >> 2;
   842   00058C  C047  F049         	movff	f_pwm@duty,??_f_pwm
   843   000590  C048  F04A         	movff	f_pwm@duty+1,??_f_pwm+1
   844   000594  90D8               	bcf	status,0,c
   845   000596  324A               	rrcf	(??_f_pwm+1)^0,f,c
   846   000598  3249               	rrcf	??_f_pwm^0,f,c
   847   00059A  90D8               	bcf	status,0,c
   848   00059C  324A               	rrcf	(??_f_pwm+1)^0,f,c
   849   00059E  3249               	rrcf	??_f_pwm^0,f,c
   850   0005A0  5049               	movf	??_f_pwm^0,w,c
   851   0005A2  6EBE               	movwf	190,c	;volatile
   852   0005A4  0012               	return		;funcret
   853   0005A6                     __end_of_f_pwm:
   854                           	callstack 0
   855                           
   856 ;; *************** function _loop *****************
   857 ;; Defined at:
   858 ;;		line 262 in file "aula_20221116.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		None
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   872 ;;      Params:         0       0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0
   875 ;;      Totals:         0       0       0       0       0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; Hardware stack levels required when called: 7
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text6
   887   000656                     __ptext6:
   888                           	callstack 0
   889   000656                     _loop:
   890                           	callstack 23
   891   000656  0012               	return		;funcret
   892   000658                     __end_of_loop:
   893                           	callstack 0
   894                           
   895 ;; *************** function _f_interrupt_low *****************
   896 ;; Defined at:
   897 ;;		line 84 in file "aula_20221116.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		None
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   911 ;;      Params:         0       0       0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0
   913 ;;      Temps:          1       0       0       0       0       0       0
   914 ;;      Totals:         1       0       0       0       0       0       0
   915 ;;Total ram usage:        1 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 6
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		Interrupt level 1
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	intcodelo
   926   000018                     __pintcodelo:
   927                           	callstack 0
   928   000018                     _f_interrupt_low:
   929                           	callstack 20
   930                           
   931                           ;incstack = 0
   932   000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   933   00001A  CFE0 F046          	movff	bsr,??_f_interrupt_low
   934   00001E  C046  FFE0         	movff	??_f_interrupt_low,bsr
   935   000022  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   936   000024  0010               	retfie	
   937   000026                     __end_of_f_interrupt_low:
   938                           	callstack 0
   939                           
   940 ;; *************** function _f_interrupt_high *****************
   941 ;; Defined at:
   942 ;;		line 58 in file "aula_20221116.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   956 ;;      Params:         0       0       0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0       0       0
   958 ;;      Temps:          4       0       0       0       0       0       0
   959 ;;      Totals:         4       0       0       0       0       0       0
   960 ;;Total ram usage:        4 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 5
   963 ;; This function calls:
   964 ;;		_f_int0
   965 ;;		_f_int1
   966 ;;		_f_int2
   967 ;;		_f_timer0
   968 ;; This function is called by:
   969 ;;		Interrupt level 2
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	intcode
   974   000008                     __pintcode:
   975                           	callstack 0
   976   000008                     _f_interrupt_high:
   977                           	callstack 20
   978                           
   979                           ;incstack = 0
   980   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   981   00000A  ED37  F001         	call	int_func,f	;refresh shadow registers
   982                           
   983                           	psect	intcode_body
   984   00026E                     __pintcode_body:
   985                           	callstack 20
   986   00026E                     int_func:
   987                           	callstack 20
   988   00026E  0006               	pop		; remove dummy address from shadow register refresh
   989   000270  CFE1 F042          	movff	fsr1l,??_f_interrupt_high
   990   000274  CFE2 F043          	movff	fsr1h,??_f_interrupt_high+1
   991   000278  CFD9 F044          	movff	fsr2l,??_f_interrupt_high+2
   992   00027C  CFDA F045          	movff	fsr2h,??_f_interrupt_high+3
   993   000280                     
   994                           ;aula_20221116.c: 60:     if (TMR0IE && TMR0IF) {
   995   000280  AAF2               	btfss	4082,5,c	;volatile
   996   000282  EF45  F001         	goto	i2u52_41
   997   000286  EF47  F001         	goto	i2u52_40
   998   00028A                     i2u52_41:
   999   00028A  EF53  F001         	goto	i2l1467
  1000   00028E                     i2u52_40:
  1001   00028E  A4F2               	btfss	4082,2,c	;volatile
  1002   000290  EF4C  F001         	goto	i2u53_41
  1003   000294  EF4E  F001         	goto	i2u53_40
  1004   000298                     i2u53_41:
  1005   000298  EF53  F001         	goto	i2l1467
  1006   00029C                     i2u53_40:
  1007   00029C                     
  1008                           ;aula_20221116.c: 61:         TMR0L += 6;
  1009   00029C  0E06               	movlw	6
  1010   00029E  26D6               	addwf	214,f,c	;volatile
  1011   0002A0                     
  1012                           ;aula_20221116.c: 62:         f_timer0();
  1013   0002A0  EC90  F001         	call	_f_timer0	;wreg free
  1014   0002A4                     
  1015                           ;aula_20221116.c: 63:         TMR0IF = 0;
  1016   0002A4  94F2               	bcf	4082,2,c	;volatile
  1017   0002A6                     i2l1467:
  1018                           
  1019                           ;aula_20221116.c: 66:     if (INT0IF && INT0IE) {
  1020   0002A6  A2F2               	btfss	4082,1,c	;volatile
  1021   0002A8  EF58  F001         	goto	i2u54_41
  1022   0002AC  EF5A  F001         	goto	i2u54_40
  1023   0002B0                     i2u54_41:
  1024   0002B0  EF64  F001         	goto	i2l1475
  1025   0002B4                     i2u54_40:
  1026   0002B4  A8F2               	btfss	4082,4,c	;volatile
  1027   0002B6  EF5F  F001         	goto	i2u55_41
  1028   0002BA  EF61  F001         	goto	i2u55_40
  1029   0002BE                     i2u55_41:
  1030   0002BE  EF64  F001         	goto	i2l1475
  1031   0002C2                     i2u55_40:
  1032   0002C2                     
  1033                           ;aula_20221116.c: 67:         f_int0();
  1034   0002C2  EC2E  F003         	call	_f_int0	;wreg free
  1035   0002C6                     
  1036                           ;aula_20221116.c: 68:         INT0IF = 0;
  1037   0002C6  92F2               	bcf	4082,1,c	;volatile
  1038   0002C8                     i2l1475:
  1039                           
  1040                           ;aula_20221116.c: 71:     if (INT1IF && INT1IE) {
  1041   0002C8  A0F0               	btfss	4080,0,c	;volatile
  1042   0002CA  EF69  F001         	goto	i2u56_41
  1043   0002CE  EF6B  F001         	goto	i2u56_40
  1044   0002D2                     i2u56_41:
  1045   0002D2  EF75  F001         	goto	i2l1483
  1046   0002D6                     i2u56_40:
  1047   0002D6  A6F0               	btfss	4080,3,c	;volatile
  1048   0002D8  EF70  F001         	goto	i2u57_41
  1049   0002DC  EF72  F001         	goto	i2u57_40
  1050   0002E0                     i2u57_41:
  1051   0002E0  EF75  F001         	goto	i2l1483
  1052   0002E4                     i2u57_40:
  1053   0002E4                     
  1054                           ;aula_20221116.c: 72:         f_int1();
  1055   0002E4  EC2D  F003         	call	_f_int1	;wreg free
  1056   0002E8                     
  1057                           ;aula_20221116.c: 73:         INT1IF = 0;
  1058   0002E8  90F0               	bcf	4080,0,c	;volatile
  1059   0002EA                     i2l1483:
  1060                           
  1061                           ;aula_20221116.c: 76:     if (INT2IF && INT2IE) {
  1062   0002EA  A2F0               	btfss	4080,1,c	;volatile
  1063   0002EC  EF7A  F001         	goto	i2u58_41
  1064   0002F0  EF7C  F001         	goto	i2u58_40
  1065   0002F4                     i2u58_41:
  1066   0002F4  EF86  F001         	goto	i2l135
  1067   0002F8                     i2u58_40:
  1068   0002F8  A8F0               	btfss	4080,4,c	;volatile
  1069   0002FA  EF81  F001         	goto	i2u59_41
  1070   0002FE  EF83  F001         	goto	i2u59_40
  1071   000302                     i2u59_41:
  1072   000302  EF86  F001         	goto	i2l135
  1073   000306                     i2u59_40:
  1074   000306                     
  1075                           ;aula_20221116.c: 77:         f_int2();
  1076   000306  EC2C  F003         	call	_f_int2	;wreg free
  1077   00030A                     
  1078                           ;aula_20221116.c: 78:         INT2IF = 0;
  1079   00030A  92F0               	bcf	4080,1,c	;volatile
  1080   00030C                     i2l135:
  1081   00030C  C045  FFDA         	movff	??_f_interrupt_high+3,fsr2h
  1082   000310  C044  FFD9         	movff	??_f_interrupt_high+2,fsr2l
  1083   000314  C043  FFE2         	movff	??_f_interrupt_high+1,fsr1h
  1084   000318  C042  FFE1         	movff	??_f_interrupt_high,fsr1l
  1085   00031C  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1086   00031E  0011               	retfie		f
  1087   000320                     __end_of_f_interrupt_high:
  1088                           	callstack 0
  1089                           
  1090 ;; *************** function _f_timer0 *****************
  1091 ;; Defined at:
  1092 ;;		line 89 in file "aula_20221116.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1106 ;;      Params:         0       0       0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 4
  1113 ;; This function calls:
  1114 ;;		_ContDisplay7seg
  1115 ;;		_loop2
  1116 ;;		_loop3
  1117 ;; This function is called by:
  1118 ;;		_f_interrupt_high
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text9
  1123   000320                     __ptext9:
  1124                           	callstack 0
  1125   000320                     _f_timer0:
  1126                           	callstack 20
  1127   000320                     
  1128                           ;aula_20221116.c: 91:     static unsigned int tempo=0, tempo2=0, tempo3=0;;aula_20221116
      +                          .c: 93:     if (tempo<4) {
  1129   000320  5050               	movf	(f_timer0@tempo+1)^0,w,c
  1130   000322  E107               	bnz	i2u49_41
  1131   000324  0E04               	movlw	4
  1132   000326  5C4F               	subwf	f_timer0@tempo^0,w,c
  1133   000328  B0D8               	btfsc	status,0,c
  1134   00032A  EF99  F001         	goto	i2u49_41
  1135   00032E  EF9B  F001         	goto	i2u49_40
  1136   000332                     i2u49_41:
  1137   000332  EF9F  F001         	goto	i2l1425
  1138   000336                     i2u49_40:
  1139   000336                     
  1140                           ;aula_20221116.c: 94:         tempo++;
  1141   000336  4A4F               	infsnz	f_timer0@tempo^0,f,c
  1142   000338  2A50               	incf	(f_timer0@tempo+1)^0,f,c
  1143                           
  1144                           ;aula_20221116.c: 95:     }
  1145   00033A  EFA5  F001         	goto	i2l1429
  1146   00033E                     i2l1425:
  1147                           
  1148                           ;aula_20221116.c: 97:         tempo = 0;
  1149   00033E  0E00               	movlw	0
  1150   000340  6E50               	movwf	(f_timer0@tempo+1)^0,c
  1151   000342  0E00               	movlw	0
  1152   000344  6E4F               	movwf	f_timer0@tempo^0,c
  1153   000346                     
  1154                           ;aula_20221116.c: 98:         ContDisplay7seg();
  1155   000346  ECD9  F000         	call	_ContDisplay7seg	;wreg free
  1156   00034A                     i2l1429:
  1157                           
  1158                           ;aula_20221116.c: 101:     if (tempo2<499) {
  1159   00034A  0EF3               	movlw	243
  1160   00034C  5C4D               	subwf	f_timer0@tempo2^0,w,c
  1161   00034E  0E01               	movlw	1
  1162   000350  584E               	subwfb	(f_timer0@tempo2+1)^0,w,c
  1163   000352  B0D8               	btfsc	status,0,c
  1164   000354  EFAE  F001         	goto	i2u50_41
  1165   000358  EFB0  F001         	goto	i2u50_40
  1166   00035C                     i2u50_41:
  1167   00035C  EFB4  F001         	goto	i2l1433
  1168   000360                     i2u50_40:
  1169   000360                     
  1170                           ;aula_20221116.c: 102:         tempo2++;
  1171   000360  4A4D               	infsnz	f_timer0@tempo2^0,f,c
  1172   000362  2A4E               	incf	(f_timer0@tempo2+1)^0,f,c
  1173                           
  1174                           ;aula_20221116.c: 103:     }
  1175   000364  EFBA  F001         	goto	i2l1437
  1176   000368                     i2l1433:
  1177                           
  1178                           ;aula_20221116.c: 105:         tempo2 = 0;
  1179   000368  0E00               	movlw	0
  1180   00036A  6E4E               	movwf	(f_timer0@tempo2+1)^0,c
  1181   00036C  0E00               	movlw	0
  1182   00036E  6E4D               	movwf	f_timer0@tempo2^0,c
  1183   000370                     
  1184                           ;aula_20221116.c: 106:         loop2();
  1185   000370  EC37  F002         	call	_loop2	;wreg free
  1186   000374                     i2l1437:
  1187                           
  1188                           ;aula_20221116.c: 109:     if (tempo3<9) {
  1189   000374  504C               	movf	(f_timer0@tempo3+1)^0,w,c
  1190   000376  E107               	bnz	i2u51_41
  1191   000378  0E09               	movlw	9
  1192   00037A  5C4B               	subwf	f_timer0@tempo3^0,w,c
  1193   00037C  B0D8               	btfsc	status,0,c
  1194   00037E  EFC3  F001         	goto	i2u51_41
  1195   000382  EFC5  F001         	goto	i2u51_40
  1196   000386                     i2u51_41:
  1197   000386  EFC9  F001         	goto	i2l1441
  1198   00038A                     i2u51_40:
  1199   00038A                     
  1200                           ;aula_20221116.c: 110:         tempo3++;
  1201   00038A  4A4B               	infsnz	f_timer0@tempo3^0,f,c
  1202   00038C  2A4C               	incf	(f_timer0@tempo3+1)^0,f,c
  1203                           
  1204                           ;aula_20221116.c: 111:     }
  1205   00038E  EFCF  F001         	goto	i2l155
  1206   000392                     i2l1441:
  1207                           
  1208                           ;aula_20221116.c: 113:         tempo3 = 0;
  1209   000392  0E00               	movlw	0
  1210   000394  6E4C               	movwf	(f_timer0@tempo3+1)^0,c
  1211   000396  0E00               	movlw	0
  1212   000398  6E4B               	movwf	f_timer0@tempo3^0,c
  1213   00039A                     
  1214                           ;aula_20221116.c: 114:         loop3();
  1215   00039A  ECD3  F002         	call	_loop3	;wreg free
  1216   00039E                     i2l155:
  1217   00039E  0012               	return		;funcret
  1218   0003A0                     __end_of_f_timer0:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _loop3 *****************
  1222 ;; Defined at:
  1223 ;;		line 286 in file "aula_20221116.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1237 ;;      Params:         0       0       0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 1
  1244 ;; This function calls:
  1245 ;;		_ler_teclado
  1246 ;; This function is called by:
  1247 ;;		_f_timer0
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text10
  1252   0005A6                     __ptext10:
  1253                           	callstack 0
  1254   0005A6                     _loop3:
  1255                           	callstack 22
  1256   0005A6                     
  1257                           ;aula_20221116.c: 288:     static unsigned char dado;;aula_20221116.c: 290:     dado = l
      +                          er_teclado();
  1258   0005A6  EC15  F000         	call	_ler_teclado	;wreg free
  1259   0005AA  6E51               	movwf	loop3@dado^0,c
  1260   0005AC                     
  1261                           ;aula_20221116.c: 292:     if (dado!=16) num1=num2=num3=num4=dado;
  1262   0005AC  0E10               	movlw	16
  1263   0005AE  1851               	xorwf	loop3@dado^0,w,c
  1264   0005B0  B4D8               	btfsc	status,2,c
  1265   0005B2  EFDD  F002         	goto	i2u48_41
  1266   0005B6  EFDF  F002         	goto	i2u48_40
  1267   0005BA                     i2u48_41:
  1268   0005BA  EFE7  F002         	goto	i2l213
  1269   0005BE                     i2u48_40:
  1270   0005BE  C051  F025         	movff	loop3@dado,_num4
  1271   0005C2  C025  F026         	movff	_num4,_num3
  1272   0005C6  C026  F027         	movff	_num3,_num2
  1273   0005CA  C027  F028         	movff	_num2,_num1
  1274   0005CE                     i2l213:
  1275   0005CE  0012               	return		;funcret
  1276   0005D0                     __end_of_loop3:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _ler_teclado *****************
  1280 ;; Defined at:
  1281 ;;		line 216 in file "aula_20221116.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  i               2    4[COMRAM] int 
  1286 ;;  i               2    2[COMRAM] int 
  1287 ;;  i               2    0[COMRAM] int 
  1288 ;;  entrada         1    7[COMRAM] unsigned char 
  1289 ;;  saida           1    6[COMRAM] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      unsigned char 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1299 ;;      Params:         0       0       0       0       0       0       0
  1300 ;;      Locals:         8       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0
  1302 ;;      Totals:         8       0       0       0       0       0       0
  1303 ;;Total ram usage:        8 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_loop3
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text11
  1313   00002A                     __ptext11:
  1314                           	callstack 0
  1315   00002A                     _ler_teclado:
  1316                           	callstack 22
  1317   00002A                     
  1318                           ;aula_20221116.c: 218:     unsigned char entrada, saida=16;
  1319   00002A  0E10               	movlw	16
  1320   00002C  6E40               	movwf	ler_teclado@saida^0,c
  1321                           
  1322                           ;aula_20221116.c: 220:     TRISB = 0b11111000;
  1323   00002E  0EF8               	movlw	248
  1324   000030  6E93               	movwf	147,c	;volatile
  1325                           
  1326                           ;aula_20221116.c: 221:     TRISD = 0b00001111;
  1327   000032  0E0F               	movlw	15
  1328   000034  6E95               	movwf	149,c	;volatile
  1329   000036                     
  1330                           ;aula_20221116.c: 223:     LATB |= 0b00000111;
  1331   000036  0E07               	movlw	7
  1332   000038  128A               	iorwf	138,f,c	;volatile
  1333   00003A                     
  1334                           ;aula_20221116.c: 225:     LATB ^= 0b00000001;
  1335   00003A  0E01               	movlw	1
  1336   00003C  1A8A               	xorwf	138,f,c	;volatile
  1337                           
  1338                           ;aula_20221116.c: 226:     for (int i=0; i<10; i++) __nop();
  1339   00003E  0E00               	movlw	0
  1340   000040  6E3B               	movwf	(ler_teclado@i+1)^0,c
  1341   000042  0E00               	movlw	0
  1342   000044  6E3A               	movwf	ler_teclado@i^0,c
  1343   000046                     i2l173:
  1344   000046  F000               	nop	
  1345   000048  4A3A               	infsnz	ler_teclado@i^0,f,c
  1346   00004A  2A3B               	incf	(ler_teclado@i+1)^0,f,c
  1347   00004C  BE3B               	btfsc	(ler_teclado@i+1)^0,7,c
  1348   00004E  EF32  F000         	goto	i2u31_41
  1349   000052  503B               	movf	(ler_teclado@i+1)^0,w,c
  1350   000054  E109               	bnz	i2u31_40
  1351   000056  0E0A               	movlw	10
  1352   000058  5C3A               	subwf	ler_teclado@i^0,w,c
  1353   00005A  A0D8               	btfss	status,0,c
  1354   00005C  EF32  F000         	goto	i2u31_41
  1355   000060  EF34  F000         	goto	i2u31_40
  1356   000064                     i2u31_41:
  1357   000064  EF23  F000         	goto	i2l173
  1358   000068                     i2u31_40:
  1359   000068                     
  1360                           ;aula_20221116.c: 227:     entrada = PORTD;
  1361   000068  CF83 F041          	movff	3971,ler_teclado@entrada	;volatile
  1362                           
  1363                           ;aula_20221116.c: 229:     if ((entrada & 1) == 0) saida=10;
  1364   00006C  B041               	btfsc	ler_teclado@entrada^0,0,c
  1365   00006E  EF3B  F000         	goto	i2u32_41
  1366   000072  EF3D  F000         	goto	i2u32_40
  1367   000076                     i2u32_41:
  1368   000076  EF3F  F000         	goto	i2l1275
  1369   00007A                     i2u32_40:
  1370   00007A  0E0A               	movlw	10
  1371   00007C  6E40               	movwf	ler_teclado@saida^0,c
  1372   00007E                     i2l1275:
  1373                           
  1374                           ;aula_20221116.c: 230:     if ((entrada & 2) == 0) saida=7;
  1375   00007E  B241               	btfsc	ler_teclado@entrada^0,1,c
  1376   000080  EF44  F000         	goto	i2u33_41
  1377   000084  EF46  F000         	goto	i2u33_40
  1378   000088                     i2u33_41:
  1379   000088  EF48  F000         	goto	i2l1279
  1380   00008C                     i2u33_40:
  1381   00008C  0E07               	movlw	7
  1382   00008E  6E40               	movwf	ler_teclado@saida^0,c
  1383   000090                     i2l1279:
  1384                           
  1385                           ;aula_20221116.c: 231:     if ((entrada & 4) == 0) saida=4;
  1386   000090  B441               	btfsc	ler_teclado@entrada^0,2,c
  1387   000092  EF4D  F000         	goto	i2u34_41
  1388   000096  EF4F  F000         	goto	i2u34_40
  1389   00009A                     i2u34_41:
  1390   00009A  EF51  F000         	goto	i2l1283
  1391   00009E                     i2u34_40:
  1392   00009E  0E04               	movlw	4
  1393   0000A0  6E40               	movwf	ler_teclado@saida^0,c
  1394   0000A2                     i2l1283:
  1395                           
  1396                           ;aula_20221116.c: 232:     if ((entrada & 8) == 0) saida=1;
  1397   0000A2  B641               	btfsc	ler_teclado@entrada^0,3,c
  1398   0000A4  EF56  F000         	goto	i2u35_41
  1399   0000A8  EF58  F000         	goto	i2u35_40
  1400   0000AC                     i2u35_41:
  1401   0000AC  EF5A  F000         	goto	i2l1287
  1402   0000B0                     i2u35_40:
  1403   0000B0  0E01               	movlw	1
  1404   0000B2  6E40               	movwf	ler_teclado@saida^0,c
  1405   0000B4                     i2l1287:
  1406                           
  1407                           ;aula_20221116.c: 234:     LATB ^= 0b00000011;
  1408   0000B4  0E03               	movlw	3
  1409   0000B6  1A8A               	xorwf	138,f,c	;volatile
  1410   0000B8                     
  1411                           ;aula_20221116.c: 235:     for (int i=0; i<10; i++) __nop();
  1412   0000B8  0E00               	movlw	0
  1413   0000BA  6E3D               	movwf	(ler_teclado@i_152+1)^0,c
  1414   0000BC  0E00               	movlw	0
  1415   0000BE  6E3C               	movwf	ler_teclado@i_152^0,c
  1416   0000C0                     i2l179:
  1417   0000C0  F000               	nop	
  1418   0000C2  4A3C               	infsnz	ler_teclado@i_152^0,f,c
  1419   0000C4  2A3D               	incf	(ler_teclado@i_152+1)^0,f,c
  1420   0000C6  BE3D               	btfsc	(ler_teclado@i_152+1)^0,7,c
  1421   0000C8  EF6F  F000         	goto	i2u36_41
  1422   0000CC  503D               	movf	(ler_teclado@i_152+1)^0,w,c
  1423   0000CE  E109               	bnz	i2u36_40
  1424   0000D0  0E0A               	movlw	10
  1425   0000D2  5C3C               	subwf	ler_teclado@i_152^0,w,c
  1426   0000D4  A0D8               	btfss	status,0,c
  1427   0000D6  EF6F  F000         	goto	i2u36_41
  1428   0000DA  EF71  F000         	goto	i2u36_40
  1429   0000DE                     i2u36_41:
  1430   0000DE  EF60  F000         	goto	i2l179
  1431   0000E2                     i2u36_40:
  1432   0000E2                     
  1433                           ;aula_20221116.c: 236:     entrada = PORTD;
  1434   0000E2  CF83 F041          	movff	3971,ler_teclado@entrada	;volatile
  1435                           
  1436                           ;aula_20221116.c: 238:     if ((entrada & 1) == 0) saida=0;
  1437   0000E6  B041               	btfsc	ler_teclado@entrada^0,0,c
  1438   0000E8  EF78  F000         	goto	i2u37_41
  1439   0000EC  EF7A  F000         	goto	i2u37_40
  1440   0000F0                     i2u37_41:
  1441   0000F0  EF7C  F000         	goto	i2l1299
  1442   0000F4                     i2u37_40:
  1443   0000F4  0E00               	movlw	0
  1444   0000F6  6E40               	movwf	ler_teclado@saida^0,c
  1445   0000F8                     i2l1299:
  1446                           
  1447                           ;aula_20221116.c: 239:     if ((entrada & 2) == 0) saida=8;
  1448   0000F8  B241               	btfsc	ler_teclado@entrada^0,1,c
  1449   0000FA  EF81  F000         	goto	i2u38_41
  1450   0000FE  EF83  F000         	goto	i2u38_40
  1451   000102                     i2u38_41:
  1452   000102  EF85  F000         	goto	i2l1303
  1453   000106                     i2u38_40:
  1454   000106  0E08               	movlw	8
  1455   000108  6E40               	movwf	ler_teclado@saida^0,c
  1456   00010A                     i2l1303:
  1457                           
  1458                           ;aula_20221116.c: 240:     if ((entrada & 4) == 0) saida=5;
  1459   00010A  B441               	btfsc	ler_teclado@entrada^0,2,c
  1460   00010C  EF8A  F000         	goto	i2u39_41
  1461   000110  EF8C  F000         	goto	i2u39_40
  1462   000114                     i2u39_41:
  1463   000114  EF8E  F000         	goto	i2l1307
  1464   000118                     i2u39_40:
  1465   000118  0E05               	movlw	5
  1466   00011A  6E40               	movwf	ler_teclado@saida^0,c
  1467   00011C                     i2l1307:
  1468                           
  1469                           ;aula_20221116.c: 241:     if ((entrada & 8) == 0) saida=2;
  1470   00011C  B641               	btfsc	ler_teclado@entrada^0,3,c
  1471   00011E  EF93  F000         	goto	i2u40_41
  1472   000122  EF95  F000         	goto	i2u40_40
  1473   000126                     i2u40_41:
  1474   000126  EF97  F000         	goto	i2l1311
  1475   00012A                     i2u40_40:
  1476   00012A  0E02               	movlw	2
  1477   00012C  6E40               	movwf	ler_teclado@saida^0,c
  1478   00012E                     i2l1311:
  1479                           
  1480                           ;aula_20221116.c: 243:     LATB ^= 0b00000110;
  1481   00012E  0E06               	movlw	6
  1482   000130  1A8A               	xorwf	138,f,c	;volatile
  1483   000132                     
  1484                           ;aula_20221116.c: 244:     for (int i=0; i<10; i++) __nop();
  1485   000132  0E00               	movlw	0
  1486   000134  6E3F               	movwf	(ler_teclado@i_153+1)^0,c
  1487   000136  0E00               	movlw	0
  1488   000138  6E3E               	movwf	ler_teclado@i_153^0,c
  1489   00013A                     i2l185:
  1490   00013A  F000               	nop	
  1491   00013C  4A3E               	infsnz	ler_teclado@i_153^0,f,c
  1492   00013E  2A3F               	incf	(ler_teclado@i_153+1)^0,f,c
  1493   000140  BE3F               	btfsc	(ler_teclado@i_153+1)^0,7,c
  1494   000142  EFAC  F000         	goto	i2u41_41
  1495   000146  503F               	movf	(ler_teclado@i_153+1)^0,w,c
  1496   000148  E109               	bnz	i2u41_40
  1497   00014A  0E0A               	movlw	10
  1498   00014C  5C3E               	subwf	ler_teclado@i_153^0,w,c
  1499   00014E  A0D8               	btfss	status,0,c
  1500   000150  EFAC  F000         	goto	i2u41_41
  1501   000154  EFAE  F000         	goto	i2u41_40
  1502   000158                     i2u41_41:
  1503   000158  EF9D  F000         	goto	i2l185
  1504   00015C                     i2u41_40:
  1505   00015C                     
  1506                           ;aula_20221116.c: 245:     entrada = PORTD;
  1507   00015C  CF83 F041          	movff	3971,ler_teclado@entrada	;volatile
  1508                           
  1509                           ;aula_20221116.c: 247:     if ((entrada & 1) == 0) saida=11;
  1510   000160  B041               	btfsc	ler_teclado@entrada^0,0,c
  1511   000162  EFB5  F000         	goto	i2u42_41
  1512   000166  EFB7  F000         	goto	i2u42_40
  1513   00016A                     i2u42_41:
  1514   00016A  EFB9  F000         	goto	i2l1323
  1515   00016E                     i2u42_40:
  1516   00016E  0E0B               	movlw	11
  1517   000170  6E40               	movwf	ler_teclado@saida^0,c
  1518   000172                     i2l1323:
  1519                           
  1520                           ;aula_20221116.c: 248:     if ((entrada & 2) == 0) saida=9;
  1521   000172  B241               	btfsc	ler_teclado@entrada^0,1,c
  1522   000174  EFBE  F000         	goto	i2u43_41
  1523   000178  EFC0  F000         	goto	i2u43_40
  1524   00017C                     i2u43_41:
  1525   00017C  EFC2  F000         	goto	i2l1327
  1526   000180                     i2u43_40:
  1527   000180  0E09               	movlw	9
  1528   000182  6E40               	movwf	ler_teclado@saida^0,c
  1529   000184                     i2l1327:
  1530                           
  1531                           ;aula_20221116.c: 249:     if ((entrada & 4) == 0) saida=6;
  1532   000184  B441               	btfsc	ler_teclado@entrada^0,2,c
  1533   000186  EFC7  F000         	goto	i2u44_41
  1534   00018A  EFC9  F000         	goto	i2u44_40
  1535   00018E                     i2u44_41:
  1536   00018E  EFCB  F000         	goto	i2l1331
  1537   000192                     i2u44_40:
  1538   000192  0E06               	movlw	6
  1539   000194  6E40               	movwf	ler_teclado@saida^0,c
  1540   000196                     i2l1331:
  1541                           
  1542                           ;aula_20221116.c: 250:     if ((entrada & 8) == 0) saida=3;
  1543   000196  B641               	btfsc	ler_teclado@entrada^0,3,c
  1544   000198  EFD0  F000         	goto	i2u45_41
  1545   00019C  EFD2  F000         	goto	i2u45_40
  1546   0001A0                     i2u45_41:
  1547   0001A0  EFD4  F000         	goto	i2l1335
  1548   0001A4                     i2u45_40:
  1549   0001A4  0E03               	movlw	3
  1550   0001A6  6E40               	movwf	ler_teclado@saida^0,c
  1551   0001A8                     i2l1335:
  1552                           
  1553                           ;aula_20221116.c: 252:     TRISB = 0b11111111;
  1554   0001A8  6893               	setf	147,c	;volatile
  1555                           
  1556                           ;aula_20221116.c: 253:     TRISD = 0b00000000;
  1557   0001AA  0E00               	movlw	0
  1558   0001AC  6E95               	movwf	149,c	;volatile
  1559                           
  1560                           ;aula_20221116.c: 255:     return saida;
  1561   0001AE  5040               	movf	ler_teclado@saida^0,w,c
  1562   0001B0  0012               	return		;funcret
  1563   0001B2                     __end_of_ler_teclado:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _loop2 *****************
  1567 ;; Defined at:
  1568 ;;		line 270 in file "aula_20221116.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1582 ;;      Params:         0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 3
  1589 ;; This function calls:
  1590 ;;		_lcd_str
  1591 ;;		i2_lcd_cmd
  1592 ;; This function is called by:
  1593 ;;		_f_timer0
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text12
  1598   00046E                     __ptext12:
  1599                           	callstack 0
  1600   00046E                     _loop2:
  1601                           	callstack 20
  1602   00046E                     
  1603                           ;aula_20221116.c: 272:     static unsigned char ind1=0, mind1=9;;aula_20221116.c: 274:  
      +                             lcd_cmd(0x80);
  1604   00046E  0E80               	movlw	128
  1605   000470  ECF9  F002         	call	i2_lcd_cmd
  1606   000474                     
  1607                           ;aula_20221116.c: 275:     linha1[mind1]=linha2[mind1];
  1608   000474  0E01               	movlw	low _linha2
  1609   000476  2423               	addwf	loop2@mind1^0,w,c
  1610   000478  6ED9               	movwf	fsr2l,c
  1611   00047A  6ADA               	clrf	fsr2h,c
  1612   00047C  0E00               	movlw	high _linha2
  1613   00047E  22DA               	addwfc	fsr2h,f,c
  1614   000480  0E29               	movlw	low _linha1
  1615   000482  2423               	addwf	loop2@mind1^0,w,c
  1616   000484  6EE1               	movwf	fsr1l,c
  1617   000486  6AE2               	clrf	fsr1h,c
  1618   000488  0E00               	movlw	high _linha1
  1619   00048A  22E2               	addwfc	fsr1h,f,c
  1620   00048C  CFDF FFE7          	movff	indf2,indf1
  1621   000490                     
  1622                           ;aula_20221116.c: 276:     linha1[ind1]=32;
  1623   000490  0E29               	movlw	low _linha1
  1624   000492  2452               	addwf	loop2@ind1^0,w,c
  1625   000494  6ED9               	movwf	fsr2l,c
  1626   000496  6ADA               	clrf	fsr2h,c
  1627   000498  0E00               	movlw	high _linha1
  1628   00049A  22DA               	addwfc	fsr2h,f,c
  1629   00049C  0E20               	movlw	32
  1630   00049E  6EDF               	movwf	indf2,c
  1631   0004A0                     
  1632                           ;aula_20221116.c: 277:     lcd_str(linha1);
  1633   0004A0  0E29               	movlw	low _linha1
  1634   0004A2  6E3C               	movwf	lcd_str@str^0,c
  1635   0004A4  0E00               	movlw	high _linha1
  1636   0004A6  6E3D               	movwf	(lcd_str@str+1)^0,c
  1637   0004A8  EC83  F002         	call	_lcd_str	;wreg free
  1638   0004AC                     
  1639                           ;aula_20221116.c: 278:     mind1 = ind1;
  1640   0004AC  C052  F023         	movff	loop2@ind1,loop2@mind1
  1641   0004B0                     
  1642                           ;aula_20221116.c: 281:     if (ind1<9) ind1++; else ind1=0;
  1643   0004B0  0E09               	movlw	9
  1644   0004B2  6052               	cpfslt	loop2@ind1^0,c
  1645   0004B4  EF5E  F002         	goto	i2u47_41
  1646   0004B8  EF60  F002         	goto	i2u47_40
  1647   0004BC                     i2u47_41:
  1648   0004BC  EF63  F002         	goto	i2l1411
  1649   0004C0                     i2u47_40:
  1650   0004C0  2A52               	incf	loop2@ind1^0,f,c
  1651   0004C2  EF65  F002         	goto	i2l207
  1652   0004C6                     i2l1411:
  1653   0004C6  0E00               	movlw	0
  1654   0004C8  6E52               	movwf	loop2@ind1^0,c
  1655   0004CA                     i2l207:
  1656   0004CA  0012               	return		;funcret
  1657   0004CC                     __end_of_loop2:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function i2_lcd_cmd *****************
  1661 ;; Defined at:
  1662 ;;		line 34 in file "lcd.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  val             1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  val             1    1[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1676 ;;      Params:         0       0       0       0       0       0       0
  1677 ;;      Locals:         1       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0
  1679 ;;      Totals:         1       0       0       0       0       0       0
  1680 ;;Total ram usage:        1 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 1
  1683 ;; This function calls:
  1684 ;;		i2_lcd_wr
  1685 ;; This function is called by:
  1686 ;;		_loop2
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text13
  1691   0005F2                     __ptext13:
  1692                           	callstack 0
  1693   0005F2                     i2_lcd_cmd:
  1694                           	callstack 21
  1695                           
  1696                           ;incstack = 0
  1697                           ;i2lcd_cmd@val stored from wreg
  1698   0005F2  6E3B               	movwf	i2lcd_cmd@val^0,c
  1699   0005F4                     
  1700                           ;lcd.c: 34: void lcd_cmd(unsigned char val);lcd.c: 35: {;lcd.c: 36:  PORTEbits.RE1=1;
  1701   0005F4  8284               	bsf	132,1,c	;volatile
  1702   0005F6                     
  1703                           ;lcd.c: 37:         lcd_wr(val);
  1704   0005F6  503B               	movf	i2lcd_cmd@val^0,w,c
  1705   0005F8  EC27  F003         	call	i2_lcd_wr
  1706   0005FC                     
  1707                           ;lcd.c: 38:         PORTEbits.RE2=0;
  1708   0005FC  9484               	bcf	132,2,c	;volatile
  1709   0005FE                     
  1710                           ;lcd.c: 39:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1711   0005FE  0E0D               	movlw	13
  1712   000600                     i2u65_47:
  1713   000600  2EE8               	decfsz	wreg,f,c
  1714   000602  D7FE               	bra	i2u65_47
  1715   000604  F000               	nop	
  1716   000606                     
  1717                           ;lcd.c: 40:         PORTEbits.RE1=0;
  1718   000606  9284               	bcf	132,1,c	;volatile
  1719   000608                     
  1720                           ;lcd.c: 41:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1721   000608  0E0D               	movlw	13
  1722   00060A                     i2u66_47:
  1723   00060A  2EE8               	decfsz	wreg,f,c
  1724   00060C  D7FE               	bra	i2u66_47
  1725   00060E  F000               	nop	
  1726   000610                     
  1727                           ;lcd.c: 42:  PORTEbits.RE1=1;
  1728   000610  8284               	bsf	132,1,c	;volatile
  1729   000612  0012               	return		;funcret
  1730   000614                     __end_ofi2_lcd_cmd:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _lcd_str *****************
  1734 ;; Defined at:
  1735 ;;		line 76 in file "lcd.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  str             2    2[COMRAM] PTR const unsigned char 
  1738 ;;		 -> linha1(17), 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  i               1    4[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1750 ;;      Params:         2       0       0       0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0
  1753 ;;      Totals:         3       0       0       0       0       0       0
  1754 ;;Total ram usage:        3 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 2
  1757 ;; This function calls:
  1758 ;;		_lcd_dat
  1759 ;; This function is called by:
  1760 ;;		_loop2
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text14
  1765   000506                     __ptext14:
  1766                           	callstack 0
  1767   000506                     _lcd_str:
  1768                           	callstack 20
  1769   000506                     
  1770                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  1771   000506  0E00               	movlw	0
  1772   000508  6E3E               	movwf	lcd_str@i^0,c
  1773                           
  1774                           ;lcd.c: 80:  while(str[i] != 0 )
  1775   00050A  EF91  F002         	goto	i2l1345
  1776   00050E                     i2l1341:
  1777                           
  1778                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  1779   00050E  503E               	movf	lcd_str@i^0,w,c
  1780   000510  243C               	addwf	lcd_str@str^0,w,c
  1781   000512  6ED9               	movwf	fsr2l,c
  1782   000514  0E00               	movlw	0
  1783   000516  203D               	addwfc	(lcd_str@str+1)^0,w,c
  1784   000518  6EDA               	movwf	fsr2h,c
  1785   00051A  50DF               	movf	indf2,w,c
  1786   00051C  EC0A  F003         	call	_lcd_dat
  1787   000520                     
  1788                           ;lcd.c: 83:    i++;
  1789   000520  2A3E               	incf	lcd_str@i^0,f,c
  1790   000522                     i2l1345:
  1791                           
  1792                           ;lcd.c: 80:  while(str[i] != 0 )
  1793   000522  503E               	movf	lcd_str@i^0,w,c
  1794   000524  243C               	addwf	lcd_str@str^0,w,c
  1795   000526  6ED9               	movwf	fsr2l,c
  1796   000528  0E00               	movlw	0
  1797   00052A  203D               	addwfc	(lcd_str@str+1)^0,w,c
  1798   00052C  6EDA               	movwf	fsr2h,c
  1799   00052E  50DF               	movf	indf2,w,c
  1800   000530  A4D8               	btfss	status,2,c
  1801   000532  EF9D  F002         	goto	i2u46_41
  1802   000536  EF9F  F002         	goto	i2u46_40
  1803   00053A                     i2u46_41:
  1804   00053A  EF87  F002         	goto	i2l1341
  1805   00053E                     i2u46_40:
  1806   00053E  0012               	return		;funcret
  1807   000540                     __end_of_lcd_str:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _lcd_dat *****************
  1811 ;; Defined at:
  1812 ;;		line 45 in file "lcd.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  val             1    wreg     unsigned char 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  val             1    1[COMRAM] unsigned char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1826 ;;      Params:         0       0       0       0       0       0       0
  1827 ;;      Locals:         1       0       0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0
  1829 ;;      Totals:         1       0       0       0       0       0       0
  1830 ;;Total ram usage:        1 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 1
  1833 ;; This function calls:
  1834 ;;		i2_lcd_wr
  1835 ;; This function is called by:
  1836 ;;		_lcd_str
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text15
  1841   000614                     __ptext15:
  1842                           	callstack 0
  1843   000614                     _lcd_dat:
  1844                           	callstack 20
  1845                           
  1846                           ;incstack = 0
  1847                           ;lcd_dat@val stored from wreg
  1848   000614  6E3B               	movwf	lcd_dat@val^0,c
  1849   000616                     
  1850                           ;lcd.c: 45: void lcd_dat(unsigned char val);lcd.c: 46: {;lcd.c: 47:  PORTEbits.RE1=1;
  1851   000616  8284               	bsf	132,1,c	;volatile
  1852   000618                     
  1853                           ;lcd.c: 48:         lcd_wr(val);
  1854   000618  503B               	movf	lcd_dat@val^0,w,c
  1855   00061A  EC27  F003         	call	i2_lcd_wr
  1856   00061E                     
  1857                           ;lcd.c: 49:         PORTEbits.RE2=1;
  1858   00061E  8484               	bsf	132,2,c	;volatile
  1859   000620                     
  1860                           ;lcd.c: 50:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1861   000620  0E0D               	movlw	13
  1862   000622                     i2u67_47:
  1863   000622  2EE8               	decfsz	wreg,f,c
  1864   000624  D7FE               	bra	i2u67_47
  1865   000626  F000               	nop	
  1866   000628                     
  1867                           ;lcd.c: 51:         PORTEbits.RE1=0;
  1868   000628  9284               	bcf	132,1,c	;volatile
  1869   00062A                     
  1870                           ;lcd.c: 52:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1871   00062A  0E0D               	movlw	13
  1872   00062C                     i2u68_47:
  1873   00062C  2EE8               	decfsz	wreg,f,c
  1874   00062E  D7FE               	bra	i2u68_47
  1875   000630  F000               	nop	
  1876   000632                     
  1877                           ;lcd.c: 53:  PORTEbits.RE1=1;
  1878   000632  8284               	bsf	132,1,c	;volatile
  1879   000634  0012               	return		;funcret
  1880   000636                     __end_of_lcd_dat:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function i2_lcd_wr *****************
  1884 ;; Defined at:
  1885 ;;		line 29 in file "lcd.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  val             1    wreg     unsigned char 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  val             1    0[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         0       0       0       0       0       0       0
  1900 ;;      Locals:         1       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         1       0       0       0       0       0       0
  1903 ;;Total ram usage:        1 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_lcd_dat
  1909 ;;		i2_lcd_cmd
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text16
  1914   00064E                     __ptext16:
  1915                           	callstack 0
  1916   00064E                     i2_lcd_wr:
  1917                           	callstack 21
  1918                           
  1919                           ;incstack = 0
  1920                           ;i2lcd_wr@val stored from wreg
  1921   00064E  6E3A               	movwf	i2lcd_wr@val^0,c
  1922   000650                     
  1923                           ;lcd.c: 29: void lcd_wr(unsigned char val);lcd.c: 30: {;lcd.c: 31:   PORTD=val;
  1924   000650  C03A  FF83         	movff	i2lcd_wr@val,3971	;volatile
  1925   000654  0012               	return		;funcret
  1926   000656                     __end_ofi2_lcd_wr:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _ContDisplay7seg *****************
  1930 ;; Defined at:
  1931 ;;		line 118 in file "aula_20221116.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1945 ;;      Params:         0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0
  1947 ;;      Temps:          2       0       0       0       0       0       0
  1948 ;;      Totals:         2       0       0       0       0       0       0
  1949 ;;Total ram usage:        2 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_f_timer0
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text17
  1959   0001B2                     __ptext17:
  1960                           	callstack 0
  1961   0001B2                     _ContDisplay7seg:
  1962                           	callstack 23
  1963   0001B2                     
  1964                           ;aula_20221116.c: 122:     static unsigned char estado=1;;aula_20221116.c: 124:     swit
      +                          ch (estado) {
  1965   0001B2  EF19  F001         	goto	i2l1391
  1966   0001B6                     i2l161:
  1967                           
  1968                           ;aula_20221116.c: 127:             LATA5 = 0;
  1969   0001B6  9A89               	bcf	3977,5,c	;volatile
  1970   0001B8                     
  1971                           ;aula_20221116.c: 128:             LATD = conv7seg[num1];
  1972   0001B8  0E12               	movlw	low _conv7seg
  1973   0001BA  2428               	addwf	_num1^0,w,c
  1974   0001BC  6ED9               	movwf	fsr2l,c
  1975   0001BE  6ADA               	clrf	fsr2h,c
  1976   0001C0  0E00               	movlw	high _conv7seg
  1977   0001C2  22DA               	addwfc	fsr2h,f,c
  1978   0001C4  50DF               	movf	indf2,w,c
  1979   0001C6  6E8C               	movwf	140,c	;volatile
  1980   0001C8                     
  1981                           ;aula_20221116.c: 129:             LATA2 = 1;
  1982   0001C8  8489               	bsf	3977,2,c	;volatile
  1983   0001CA                     
  1984                           ;aula_20221116.c: 130:             estado = 2;
  1985   0001CA  0E02               	movlw	2
  1986   0001CC  6E24               	movwf	ContDisplay7seg@estado^0,c
  1987                           
  1988                           ;aula_20221116.c: 131:             break;
  1989   0001CE  EF36  F001         	goto	i2l167
  1990   0001D2                     i2l163:
  1991                           
  1992                           ;aula_20221116.c: 134:             LATA2 = 0;
  1993   0001D2  9489               	bcf	3977,2,c	;volatile
  1994   0001D4                     
  1995                           ;aula_20221116.c: 135:             LATD = conv7seg[num2];
  1996   0001D4  0E12               	movlw	low _conv7seg
  1997   0001D6  2427               	addwf	_num2^0,w,c
  1998   0001D8  6ED9               	movwf	fsr2l,c
  1999   0001DA  6ADA               	clrf	fsr2h,c
  2000   0001DC  0E00               	movlw	high _conv7seg
  2001   0001DE  22DA               	addwfc	fsr2h,f,c
  2002   0001E0  50DF               	movf	indf2,w,c
  2003   0001E2  6E8C               	movwf	140,c	;volatile
  2004   0001E4                     
  2005                           ;aula_20221116.c: 136:             LATA3 = 1;
  2006   0001E4  8689               	bsf	3977,3,c	;volatile
  2007   0001E6                     
  2008                           ;aula_20221116.c: 137:             estado = 3;
  2009   0001E6  0E03               	movlw	3
  2010   0001E8  6E24               	movwf	ContDisplay7seg@estado^0,c
  2011                           
  2012                           ;aula_20221116.c: 138:             break;
  2013   0001EA  EF36  F001         	goto	i2l167
  2014   0001EE                     i2l164:
  2015                           
  2016                           ;aula_20221116.c: 141:             LATA3 = 0;
  2017   0001EE  9689               	bcf	3977,3,c	;volatile
  2018   0001F0                     
  2019                           ;aula_20221116.c: 142:             LATD = conv7seg[num3];
  2020   0001F0  0E12               	movlw	low _conv7seg
  2021   0001F2  2426               	addwf	_num3^0,w,c
  2022   0001F4  6ED9               	movwf	fsr2l,c
  2023   0001F6  6ADA               	clrf	fsr2h,c
  2024   0001F8  0E00               	movlw	high _conv7seg
  2025   0001FA  22DA               	addwfc	fsr2h,f,c
  2026   0001FC  50DF               	movf	indf2,w,c
  2027   0001FE  6E8C               	movwf	140,c	;volatile
  2028   000200                     
  2029                           ;aula_20221116.c: 143:             LATA4 = 1;
  2030   000200  8889               	bsf	3977,4,c	;volatile
  2031   000202                     
  2032                           ;aula_20221116.c: 144:             estado = 4;
  2033   000202  0E04               	movlw	4
  2034   000204  6E24               	movwf	ContDisplay7seg@estado^0,c
  2035                           
  2036                           ;aula_20221116.c: 145:             break;
  2037   000206  EF36  F001         	goto	i2l167
  2038   00020A                     i2l165:
  2039                           
  2040                           ;aula_20221116.c: 148:             LATA4 = 0;
  2041   00020A  9889               	bcf	3977,4,c	;volatile
  2042   00020C                     
  2043                           ;aula_20221116.c: 149:             LATD = conv7seg[num4];
  2044   00020C  0E12               	movlw	low _conv7seg
  2045   00020E  2425               	addwf	_num4^0,w,c
  2046   000210  6ED9               	movwf	fsr2l,c
  2047   000212  6ADA               	clrf	fsr2h,c
  2048   000214  0E00               	movlw	high _conv7seg
  2049   000216  22DA               	addwfc	fsr2h,f,c
  2050   000218  50DF               	movf	indf2,w,c
  2051   00021A  6E8C               	movwf	140,c	;volatile
  2052   00021C                     
  2053                           ;aula_20221116.c: 150:             LATA5 = 1;
  2054   00021C  8A89               	bsf	3977,5,c	;volatile
  2055   00021E                     i2l1385:
  2056                           
  2057                           ;aula_20221116.c: 151:             estado = 1;
  2058   00021E  0E01               	movlw	1
  2059   000220  6E24               	movwf	ContDisplay7seg@estado^0,c
  2060                           
  2061                           ;aula_20221116.c: 152:             break;
  2062   000222  EF36  F001         	goto	i2l167
  2063   000226                     i2l166:
  2064                           
  2065                           ;aula_20221116.c: 155:             LATA2 = 0;
  2066   000226  9489               	bcf	3977,2,c	;volatile
  2067                           
  2068                           ;aula_20221116.c: 156:             LATA3 = 0;
  2069   000228  9689               	bcf	3977,3,c	;volatile
  2070                           
  2071                           ;aula_20221116.c: 157:             LATA4 = 0;
  2072   00022A  9889               	bcf	3977,4,c	;volatile
  2073                           
  2074                           ;aula_20221116.c: 158:             LATA5 = 0;
  2075   00022C  9A89               	bcf	3977,5,c	;volatile
  2076   00022E  EF0F  F001         	goto	i2l1385
  2077   000232                     i2l1391:
  2078   000232  5024               	movf	ContDisplay7seg@estado^0,w,c
  2079   000234  6E3A               	movwf	??_ContDisplay7seg^0,c
  2080   000236  6A3B               	clrf	(??_ContDisplay7seg+1)^0,c
  2081                           
  2082                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 1, Range of values is 0 to 0
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte            4     3 (average)
  2088                           ;	Chosen strategy is simple_byte
  2089   000238  503B               	movf	(??_ContDisplay7seg+1)^0,w,c
  2090   00023A  0A00               	xorlw	0	; case 0
  2091   00023C  B4D8               	btfsc	status,2,c
  2092   00023E  EF23  F001         	goto	i2l1499
  2093   000242  EF13  F001         	goto	i2l166
  2094   000246                     i2l1499:
  2095                           
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 4, Range of values is 1 to 4
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte           13     7 (average)
  2101                           ;	Chosen strategy is simple_byte
  2102   000246  503A               	movf	??_ContDisplay7seg^0,w,c
  2103   000248  0A01               	xorlw	1	; case 1
  2104   00024A  B4D8               	btfsc	status,2,c
  2105   00024C  EFDB  F000         	goto	i2l161
  2106   000250  0A03               	xorlw	3	; case 2
  2107   000252  B4D8               	btfsc	status,2,c
  2108   000254  EFE9  F000         	goto	i2l163
  2109   000258  0A01               	xorlw	1	; case 3
  2110   00025A  B4D8               	btfsc	status,2,c
  2111   00025C  EFF7  F000         	goto	i2l164
  2112   000260  0A07               	xorlw	7	; case 4
  2113   000262  B4D8               	btfsc	status,2,c
  2114   000264  EF05  F001         	goto	i2l165
  2115   000268  EF13  F001         	goto	i2l166
  2116   00026C                     i2l167:
  2117   00026C  0012               	return		;funcret
  2118   00026E                     __end_of_ContDisplay7seg:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _f_int2 *****************
  2122 ;; Defined at:
  2123 ;;		line 322 in file "aula_20221116.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		None
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_f_interrupt_high
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text18
  2151   000658                     __ptext18:
  2152                           	callstack 0
  2153   000658                     _f_int2:
  2154                           	callstack 24
  2155   000658  0012               	return		;funcret
  2156   00065A                     __end_of_f_int2:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _f_int1 *****************
  2160 ;; Defined at:
  2161 ;;		line 316 in file "aula_20221116.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		None
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2175 ;;      Params:         0       0       0       0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used: 1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_f_interrupt_high
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text19
  2189   00065A                     __ptext19:
  2190                           	callstack 0
  2191   00065A                     _f_int1:
  2192                           	callstack 24
  2193   00065A  0012               	return		;funcret
  2194   00065C                     __end_of_f_int1:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _f_int0 *****************
  2198 ;; Defined at:
  2199 ;;		line 311 in file "aula_20221116.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		None
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2213 ;;      Params:         0       0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_f_interrupt_high
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text20
  2227   00065C                     __ptext20:
  2228                           	callstack 0
  2229   00065C                     _f_int0:
  2230                           	callstack 24
  2231   00065C  0012               	return		;funcret
  2232   00065E                     __end_of_f_int0:
  2233                           	callstack 0
  2234   000000                     
  2235                           	psect	rparam
  2236   000000                     
  2237                           	psect	temp
  2238   000058                     btemp:
  2239                           	callstack 0
  2240   000058                     	ds	1
  2241   000000                     int$flags	set	btemp
  2242   000000                     wtemp8	set	btemp+1
  2243   000000                     ttemp5	set	btemp+1
  2244   000000                     ttemp6	set	btemp+4
  2245   000000                     ttemp7	set	btemp+8
  2246                           
  2247                           	psect	idloc
  2248                           
  2249                           ;Config register IDLOC0 @ 0x200000
  2250                           ;	unspecified, using default values
  2251   200000                     	org	2097152
  2252   200000  FF                 	db	255
  2253                           
  2254                           ;Config register IDLOC1 @ 0x200001
  2255                           ;	unspecified, using default values
  2256   200001                     	org	2097153
  2257   200001  FF                 	db	255
  2258                           
  2259                           ;Config register IDLOC2 @ 0x200002
  2260                           ;	unspecified, using default values
  2261   200002                     	org	2097154
  2262   200002  FF                 	db	255
  2263                           
  2264                           ;Config register IDLOC3 @ 0x200003
  2265                           ;	unspecified, using default values
  2266   200003                     	org	2097155
  2267   200003  FF                 	db	255
  2268                           
  2269                           ;Config register IDLOC4 @ 0x200004
  2270                           ;	unspecified, using default values
  2271   200004                     	org	2097156
  2272   200004  FF                 	db	255
  2273                           
  2274                           ;Config register IDLOC5 @ 0x200005
  2275                           ;	unspecified, using default values
  2276   200005                     	org	2097157
  2277   200005  FF                 	db	255
  2278                           
  2279                           ;Config register IDLOC6 @ 0x200006
  2280                           ;	unspecified, using default values
  2281   200006                     	org	2097158
  2282   200006  FF                 	db	255
  2283                           
  2284                           ;Config register IDLOC7 @ 0x200007
  2285                           ;	unspecified, using default values
  2286   200007                     	org	2097159
  2287   200007  FF                 	db	255
  2288                           
  2289                           	psect	config
  2290                           
  2291                           ; Padding undefined space
  2292   300000                     	org	3145728
  2293   300000  FF                 	db	255
  2294                           
  2295                           ;Config register CONFIG1H @ 0x300001
  2296                           ;	Oscillator Selection bits
  2297                           ;	OSC = HS, HS oscillator
  2298                           ;	Fail-Safe Clock Monitor Enable bit
  2299                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2300                           ;	Internal/External Oscillator Switchover bit
  2301                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2302   300001                     	org	3145729
  2303   300001  02                 	db	2
  2304                           
  2305                           ;Config register CONFIG2L @ 0x300002
  2306                           ;	Power-up Timer Enable bit
  2307                           ;	PWRT = OFF, PWRT disabled
  2308                           ;	Brown-out Reset Enable bits
  2309                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2310                           ;	Brown Out Reset Voltage bits
  2311                           ;	BORV = 3, Minimum setting
  2312   300002                     	org	3145730
  2313   300002  1F                 	db	31
  2314                           
  2315                           ;Config register CONFIG2H @ 0x300003
  2316                           ;	Watchdog Timer Enable bit
  2317                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2318                           ;	Watchdog Timer Postscale Select bits
  2319                           ;	WDTPS = 32768, 1:32768
  2320   300003                     	org	3145731
  2321   300003  1E                 	db	30
  2322                           
  2323                           ; Padding undefined space
  2324   300004                     	org	3145732
  2325   300004  FF                 	db	255
  2326                           
  2327                           ;Config register CONFIG3H @ 0x300005
  2328                           ;	CCP2 MUX bit
  2329                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2330                           ;	PORTB A/D Enable bit
  2331                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2332                           ;	Low-Power Timer1 Oscillator Enable bit
  2333                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2334                           ;	MCLR Pin Enable bit
  2335                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2336   300005                     	org	3145733
  2337   300005  83                 	db	131
  2338                           
  2339                           ;Config register CONFIG4L @ 0x300006
  2340                           ;	Stack Full/Underflow Reset Enable bit
  2341                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2342                           ;	Single-Supply ICSP Enable bit
  2343                           ;	LVP = OFF, Single-Supply ICSP disabled
  2344                           ;	Extended Instruction Set Enable bit
  2345                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2346                           ;	Background Debugger Enable bit
  2347                           ;	DEBUG = 0x1, unprogrammed default
  2348   300006                     	org	3145734
  2349   300006  81                 	db	129
  2350                           
  2351                           ; Padding undefined space
  2352   300007                     	org	3145735
  2353   300007  FF                 	db	255
  2354                           
  2355                           ;Config register CONFIG5L @ 0x300008
  2356                           ;	Code Protection bit
  2357                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2358                           ;	Code Protection bit
  2359                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2360                           ;	Code Protection bit
  2361                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2362                           ;	Code Protection bit
  2363                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2364   300008                     	org	3145736
  2365   300008  0F                 	db	15
  2366                           
  2367                           ;Config register CONFIG5H @ 0x300009
  2368                           ;	Boot Block Code Protection bit
  2369                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2370                           ;	Data EEPROM Code Protection bit
  2371                           ;	CPD = OFF, Data EEPROM not code-protected
  2372   300009                     	org	3145737
  2373   300009  C0                 	db	192
  2374                           
  2375                           ;Config register CONFIG6L @ 0x30000A
  2376                           ;	Write Protection bit
  2377                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2378                           ;	Write Protection bit
  2379                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2380                           ;	Write Protection bit
  2381                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2382                           ;	Write Protection bit
  2383                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2384   30000A                     	org	3145738
  2385   30000A  0F                 	db	15
  2386                           
  2387                           ;Config register CONFIG6H @ 0x30000B
  2388                           ;	Configuration Register Write Protection bit
  2389                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2390                           ;	Boot Block Write Protection bit
  2391                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2392                           ;	Data EEPROM Write Protection bit
  2393                           ;	WRTD = OFF, Data EEPROM not write-protected
  2394   30000B                     	org	3145739
  2395   30000B  E0                 	db	224
  2396                           
  2397                           ;Config register CONFIG7L @ 0x30000C
  2398                           ;	Table Read Protection bit
  2399                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2400                           ;	Table Read Protection bit
  2401                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2402                           ;	Table Read Protection bit
  2403                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2404                           ;	Table Read Protection bit
  2405                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2406   30000C                     	org	3145740
  2407   30000C  0F                 	db	15
  2408                           
  2409                           ;Config register CONFIG7H @ 0x30000D
  2410                           ;	Boot Block Table Read Protection bit
  2411                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2412   30000D                     	org	3145741
  2413   30000D  40                 	db	64
  2414                           tosu	equ	0xFFF
  2415                           tosh	equ	0xFFE
  2416                           tosl	equ	0xFFD
  2417                           stkptr	equ	0xFFC
  2418                           pclatu	equ	0xFFB
  2419                           pclath	equ	0xFFA
  2420                           pcl	equ	0xFF9
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           prodh	equ	0xFF4
  2426                           prodl	equ	0xFF3
  2427                           indf0	equ	0xFEF
  2428                           postinc0	equ	0xFEE
  2429                           postdec0	equ	0xFED
  2430                           preinc0	equ	0xFEC
  2431                           plusw0	equ	0xFEB
  2432                           fsr0h	equ	0xFEA
  2433                           fsr0l	equ	0xFE9
  2434                           wreg	equ	0xFE8
  2435                           indf1	equ	0xFE7
  2436                           postinc1	equ	0xFE6
  2437                           postdec1	equ	0xFE5
  2438                           preinc1	equ	0xFE4
  2439                           plusw1	equ	0xFE3
  2440                           fsr1h	equ	0xFE2
  2441                           fsr1l	equ	0xFE1
  2442                           bsr	equ	0xFE0
  2443                           indf2	equ	0xFDF
  2444                           postinc2	equ	0xFDE
  2445                           postdec2	equ	0xFDD
  2446                           preinc2	equ	0xFDC
  2447                           plusw2	equ	0xFDB
  2448                           fsr2h	equ	0xFDA
  2449                           fsr2l	equ	0xFD9
  2450                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        57
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      87
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> linha1(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _setup->_f_pwm
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr

Critical Paths under _f_interrupt_low in COMRAM

    None.

Critical Paths under _f_interrupt_high in COMRAM

    _loop3->_ler_teclado
    _loop2->_lcd_str
    i2_lcd_cmd->i2_lcd_wr
    _lcd_str->_lcd_dat
    _lcd_dat->i2_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _f_interrupt_low in BANK0

    None.

Critical Paths under _f_interrupt_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _f_interrupt_low in BANK1

    None.

Critical Paths under _f_interrupt_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _f_interrupt_low in BANK2

    None.

Critical Paths under _f_interrupt_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _f_interrupt_low in BANK3

    None.

Critical Paths under _f_interrupt_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _f_interrupt_low in BANK4

    None.

Critical Paths under _f_interrupt_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _f_interrupt_low in BANK5

    None.

Critical Paths under _f_interrupt_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     150
                              _f_pwm
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0      30
                                             15 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      30
                                             14 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      15
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _f_pwm                                                4     2      2     120
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _f_interrupt_low                                      1     1      0       0
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _f_interrupt_high                                     4     4      0     694
                                              8 COMRAM     4     4      0
                             _f_int0
                             _f_int1
                             _f_int2
                           _f_timer0
 ---------------------------------------------------------------------------------
 (7) _f_timer0                                             0     0      0     694
                    _ContDisplay7seg
                              _loop2
                              _loop3
 ---------------------------------------------------------------------------------
 (8) _loop3                                                0     0      0     440
                        _ler_teclado
 ---------------------------------------------------------------------------------
 (9) _ler_teclado                                          8     8      0     440
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (8) _loop2                                                0     0      0     254
                            _lcd_str
                          i2_lcd_cmd
 ---------------------------------------------------------------------------------
 (9) i2_lcd_cmd                                            1     1      0      44
                                              1 COMRAM     1     1      0
                           i2_lcd_wr
 ---------------------------------------------------------------------------------
 (9) _lcd_str                                              3     1      2     210
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (10) _lcd_dat                                             1     1      0      44
                                              1 COMRAM     1     1      0
                           i2_lcd_wr
 ---------------------------------------------------------------------------------
 (10) i2_lcd_wr                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ContDisplay7seg                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _f_int2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _f_int1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _f_int0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup
     _f_pwm
     _lcd_init
       _lcd_cmd
         _lcd_wr

 _f_interrupt_low (ROOT)

 _f_interrupt_high (ROOT)
   _f_int0
   _f_int1
   _f_int2
   _f_timer0
     _ContDisplay7seg
     _loop2
       _lcd_str
         _lcd_dat
           i2_lcd_wr
       i2_lcd_cmd
         i2_lcd_wr
     _loop3
       _ler_teclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      57       1       69.0%
BITBIGSFRllhhll     26      0       0      22        0.0%
BITBIGSFRlhl        19      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhlh      7      0       0      20        0.0%
BITBIGSFRllhhll      5      0       0      23        0.0%
BITBIGSFRlllh        4      0       0      25        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllll        3      0       0      26        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BITBIGSFRllhl        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      57      27        0.0%
DATA                 0      0      57       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 22 20:30:07 2022

                      bsr 000FE0                       l170 0406                       l251 05F0  
                     l239 05A4                       l248 064C                       l257 046C  
                     l198 0656                       l941 0648                       _GIE 007F97  
                     _PR2 000FCB                       u607 0412                       u617 042A  
                     u627 043C                       u637 05DE                       u647 05E8  
                     _sel 0054                       wreg 000FE8                      l1041 05DA  
                    l1043 05DC                      l1131 0408                      l1045 05E4  
                    l1037 05D2                      l1141 043A                      l1133 040C  
                    l1047 05E6                      l1039 05D4                      l1151 045A  
                    l1143 0442                      l1135 041C                      l1049 05EE  
                    l1153 0460                      l1145 0448                      l1137 041E  
                    l1155 0466                      l1147 044E                      l1139 0424  
                    l1149 0454                      l1419 057A                      l1451 03F4  
                    l1453 03F8                      l1445 03A0                      l1455 0404  
                    l1447 03A6                      l1449 03E2                      l1491 0636  
                    l1493 063A                      _LATA 000F89                      _LATB 000F8A  
                    _LATD 000F8C                      _IPEN 007E87                      _PEIE 007F96  
                    _led1 0056                      _led2 0055                      _main 0636  
                    _num1 0028                      _num2 0027                      _num3 0026  
                    _num4 0025                      _loop 0656                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf1 000FE7                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 0058  
                    start 0026              ___param_bank 000000              ?_ler_teclado 003A  
                   ?_main 003A                     ?_loop 003A                     _T0CON 000FD5  
                   _T2CON 000FCA                     _LATA2 007C4A                     _LATA3 007C4B  
                   _LATA4 007C4C                     _LATA5 007C4D                     i1l140 001E  
                   i2l213 05CE                     i2l230 0658                     i2l207 04CA  
                   i2l135 030C                     i2l224 065C                     i2l161 01B6  
                   i2l227 065A                     i2l163 01D2                     i2l251 0612  
                   i2l155 039E                     i2l164 01EE                     i2l180 00E2  
                   i2l165 020A                     i2l173 0046                     i2l166 0226  
                   i2l254 0634                     i2l174 0068                     i2l167 026C  
                   i2l263 053E                     i2l191 01B0                     i2l248 0654  
                   i2l185 013A                     i2l186 015C                     i2l179 00C0  
                   _TMR0L 000FD6                     _PORTD 000F83                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96           __end_of_lcd_dat 0636           __end_of_lcd_cmd 05F2  
         __end_of_lcd_str 0540                     _f_pwm 057A                     _saida 0053  
                   _loop2 046E                     _loop3 05A6                     _setup 03A0  
 __end_of_ContDisplay7seg 026E                     tablat 000FF5                     ttemp5 0059  
                   ttemp6 005C                     ttemp7 0060                     status 000FD8  
                   wtemp8 0059          __end_ofi2_lcd_wr 0656          _f_interrupt_high 0008  
         __initialization 04CC              __end_of_main 0646              __end_of_loop 0658  
        ler_teclado@i_152 003C          ler_teclado@i_153 003E          ler_teclado@saida 0040  
                  ??_main 004B                    ??_loop 0047             __activetblptr 000002  
             i2lcd_wr@val 003A                    ?_f_pwm 0047                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0                    ?_loop2 003A  
                  ?_loop3 003A                    _CCPR1L 000FBE                    ?_setup 003A  
                  _INT0IE 007F94                    _INT0IF 007F91                    _INT1IE 007F83  
                  _INT1IF 007F80                    _INT2IE 007F84                    _INT2IF 007F81  
                  i2l1301 0106                    i2l1311 012E                    i2l1303 010A  
                  i2l1401 0490                    i2l1321 016E                    i2l1313 0132  
                  i2l1305 0118                    i2l1243 0650                    i2l1251 0620  
                  i2l1411 04C6                    i2l1403 04A0                    i2l1331 0196  
                  i2l1323 0172                    i2l1307 011C                    i2l1253 0628  
                  i2l1245 0616                    i2l1341 050E                    i2l1405 04AC  
                  i2l1333 01A4                    i2l1325 0180                    i2l1317 013C  
                  i2l1309 012A                    i2l1261 0036                    i2l1413 05A6  
                  i2l1421 0320                    i2l1255 062A                    i2l1247 0618  
                  i2l1343 0520                    i2l1351 05FC                    i2l1407 04B0  
                  i2l1335 01A8                    i2l1327 0184                    i2l1319 0140  
                  i2l1271 004C                    i2l1263 003A                    i2l1415 05AC  
                  i2l1431 0360                    i2l1423 0336                    i2l1361 01B2  
                  i2l1257 0632                    i2l1249 061E                    i2l1345 0522  
                  i2l1353 05FE                    i2l1409 04C0                    i2l1329 0192  
                  i2l1281 009E                    i2l1273 007A                    i2l1417 05BE  
                  i2l1441 0392                    i2l1433 0368                    i2l1425 033E  
                  i2l1371 01E4                    i2l1363 01B8                    i2l1339 0506  
                  i2l1355 0606                    i2l1347 05F4                    i2l1283 00A2  
                  i2l1275 007E                    i2l1259 002A                    i2l1443 039A  
                  i2l1435 0370                    i2l1427 0346                    i2l1381 020C  
                  i2l1373 01E6                    i2l1365 01C8                    i2l1357 0608  
                  i2l1349 05F6                    i2l1293 00C2                    i2l1285 00B0  
                  i2l1277 008C                    i2l1269 0048                    i2l1437 0374  
                  i2l1429 034A                    i2l1461 029C                    i2l1383 021C  
                  i2l1375 01F0                    i2l1367 01CA                    i2l1391 0232  
                  i2l1359 0610                    i2l1295 00C6                    i2l1287 00B4  
                  i2l1279 0090                    i2l1439 038A                    i2l1471 02C2  
                  i2l1463 02A0                    i2l1385 021E                    i2l1377 0200  
                  i2l1369 01D4                    i2l1297 00F4                    i2l1289 00B8  
                  i2l1481 02E8                    i2l1473 02C6                    i2l1465 02A4  
                  i2l1457 0280                    i2l1379 0202                    i2l1299 00F8  
                  i2l1483 02EA                    i2l1475 02C8                    i2l1459 028E  
                  i2l1467 02A6                    i2l1397 046E                    i2l1485 02F8  
                  i2l1477 02D6                    i2l1469 02B4                    i2l1399 0474  
                  i2l1487 0306                    i2l1479 02E4                    i2l1489 030A  
                  i2l1499 0246                    _INTCON 000FF2                    _TMR0IE 007F95  
                  _TMR0IF 007F92          __end_of_f_timer0 03A0          __end_of_lcd_init 046E  
                  _f_int0 065C                    _f_int1 065A                    _f_int2 0658  
                  _lcd_wr 0646                    _linha1 0029                    _linha2 0001  
                  _estado 0057                    clear_0 04F2                    isa$std 000001  
               ??_lcd_dat 003B                 ??_lcd_cmd 0048                 ??_lcd_str 003E  
            __pdataCOMRAM 0001                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8         __end_ofi2_lcd_cmd 0614          ?_ContDisplay7seg 003A  
              __accesstop 0080   __end_of__initialization 04F8             ___rparam_used 000001  
          __pcstackCOMRAM 003A             __end_of_f_pwm 05A6             __end_of_loop2 04CC  
           __end_of_loop3 05D0             __end_of_setup 0408                 ?i2_lcd_wr 003A  
            i2lcd_cmd@val 003B                   ??_f_pwm 0049                   ??_loop2 003F  
                 ??_loop3 0042                   ??_setup 004B         ??_f_interrupt_low 0046  
                 ?_f_int0 003A                   ?_f_int1 003A                   ?_f_int2 003A  
                 ?_lcd_wr 003A                   _CCP1CON 000FBD                ??i2_lcd_wr 003A  
                 _INTCON2 000FF1                   _INTCON3 000FF0  __end_of_f_interrupt_high 0320  
                 i2u31_40 0068                   i2u31_41 0064                   i2u40_40 012A  
                 i2u32_40 007A                   i2u40_41 0126                   i2u32_41 0076  
                 i2u41_40 015C                   i2u33_40 008C                   i2u41_41 0158  
                 i2u33_41 0088            f_timer0@tempo2 004D            f_timer0@tempo3 004B  
                 i2u42_40 016E                   i2u34_40 009E                   i2u50_40 0360  
                 i2u42_41 016A                   i2u34_41 009A                   i2u50_41 035C  
                 i2u43_40 0180                   i2u35_40 00B0                   i2u51_40 038A  
                 i2u43_41 017C                   i2u35_41 00AC                   i2u51_41 0386  
               ?_f_timer0 003A                   i2u44_40 0192                   i2u36_40 00E2  
                 i2u52_40 028E                   i2u44_41 018E                   i2u36_41 00DE  
                 i2u52_41 028A                   i2u45_40 01A4                   i2u37_40 00F4  
                 i2u53_40 029C                   i2u45_41 01A0                   i2u37_41 00F0  
                 i2u53_41 0298                   i2u46_40 053E                   i2u38_40 0106  
                 i2u54_40 02B4                   i2u46_41 053A                   i2u38_41 0102  
                 i2u54_41 02B0                   i2u47_40 04C0                   i2u39_40 0118  
                 i2u55_40 02C2                   i2u47_41 04BC                   i2u39_41 0114  
                 i2u55_41 02BE                   i2u48_40 05BE                   i2u56_40 02D6  
                 i2u48_41 05BA                   i2u56_41 02D2                   i2u49_40 0336  
                 i2u57_40 02E4                   i2u49_41 0332                   i2u57_41 02E0  
                 i2u65_47 0600                   i2u58_40 02F8                   i2u58_41 02F4  
                 i2u66_47 060A                   i2u59_40 0306                   i2u59_41 0302  
                 i2u67_47 0622                   i2u68_47 062C                 ?_lcd_init 003A  
            ler_teclado@i 003A                   __Hparam 0000                   __Lparam 0000  
                 __pcinit 04CC                   __ramtop 0600                   __ptext0 0636  
                 __ptext1 03A0                   __ptext2 0408                   __ptext3 05D0  
                 __ptext4 0646                   __ptext5 057A                   __ptext6 0656  
                 __ptext9 0320                   _lcd_dat 0614                   _lcd_cmd 05D0  
                 _lcd_str 0506                ??_f_timer0 0042                ??_lcd_init 0049  
          __pintcode_body 026E      end_of_initialization 04F8             __Lmediumconst 0000  
                 int_func 026E                   postdec1 000FE5                   postinc0 000FEE  
               _PORTEbits 000F84                lcd_dat@val 003B                lcd_cmd@val 0048  
               i2_lcd_cmd 05F2                lcd_str@str 003C            __end_of_f_int0 065E  
          __end_of_f_int1 065C            __end_of_f_int2 065A             __pidataCOMRAM 0540  
          __end_of_lcd_wr 064E       start_initialization 04CC           _f_interrupt_low 0018  
   ContDisplay7seg@estado 0024                ?i2_lcd_cmd 003A        ler_teclado@entrada 0041  
                ??_f_int0 003A                  ??_f_int1 003A                  ??_f_int2 003A  
           ??_ler_teclado 003A                  ??_lcd_wr 0047                loop2@mind1 0023  
             __pbssCOMRAM 004B         ?_f_interrupt_high 003A        ??_f_interrupt_high 0042  
               __pintcode 0008               __pintcodelo 0018   __end_of_f_interrupt_low 0026  
           f_timer0@tempo 004F                  ?_lcd_dat 003A                  ?_lcd_cmd 003A  
                ?_lcd_str 003C       __end_of_ler_teclado 01B2               ??i2_lcd_cmd 003B  
               f_pwm@duty 0047         ??_ContDisplay7seg 003A                  i2_lcd_wr 064E  
               lcd_wr@val 0047                 copy_data0 04E0                  __Hrparam 0000  
                __Lrparam 0000                 loop2@ind1 0052                 loop3@dado 0051  
             _ler_teclado 002A          ?_f_interrupt_low 003A                  _f_timer0 0320  
                __ptext10 05A6                  __ptext11 002A                  __ptext20 065C  
                __ptext12 046E                  __ptext13 05F2                  __ptext14 0506  
                __ptext15 0614                  __ptext16 064E                  __ptext17 01B2  
                __ptext18 0658                  __ptext19 065A                  _conv7seg 0012  
                _lcd_init 0408                  isa$xinst 000000                  int$flags 0058  
                lcd_str@i 003E                  intlevel1 0000                  intlevel2 0000  
         _ContDisplay7seg 01B2  
