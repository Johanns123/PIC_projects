

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jan  1 10:05:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    92   000000                     
    93                           ; Version 2.40
    94                           ; Generated 17/11/2021 GMT
    95                           ; 
    96                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F4520 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128   000000                     
   129                           	psect	idataBANK0
   130   002B74                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for read_keyb@m_dado_RB5
   134   002B74  01                 	db	1
   135                           
   136                           ;initializer for read_keyb@m_dado_RB4
   137   002B75  01                 	db	1
   138                           
   139                           ;initializer for read_keyb@m_dado_RB3
   140   002B76  01                 	db	1
   141                           
   142                           ;initializer for read_keyb@m_dado_RB2
   143   002B77  01                 	db	1
   144                           
   145                           ;initializer for read_keyb@m_dado_RB1
   146   002B78  01                 	db	1
   147                           
   148                           ;initializer for read_keyb@m_dado_RB0
   149   002B79  01                 	db	1
   150                           
   151                           ;initializer for _memoria_segundo
   152   002B7A  01                 	db	1
   153                           
   154                           ;initializer for _enable_time_config
   155   002B7B  01                 	db	1
   156                           
   157                           	psect	idataBANK1
   158   0027DA                     __pidataBANK1:
   159                           	callstack 0
   160                           
   161                           ;initializer for _linha2
   162   0027DA  41                 	db	65
   163   0027DB  42                 	db	66
   164   0027DC  43                 	db	67
   165   0027DD  44                 	db	68
   166   0027DE  45                 	db	69
   167   0027DF  46                 	db	70
   168   0027E0  47                 	db	71
   169   0027E1  48                 	db	72
   170   0027E2  49                 	db	73
   171   0027E3  4A                 	db	74
   172   0027E4  00                 	db	0
   173   0027E5  00                 	db	0
   174   0027E6  00                 	db	0
   175   0027E7  00                 	db	0
   176   0027E8  00                 	db	0
   177   0027E9  00                 	db	0
   178   0027EA  00                 	db	0
   179                           
   180                           ;initializer for _linha1
   181   0027EB  41                 	db	65
   182   0027EC  42                 	db	66
   183   0027ED  43                 	db	67
   184   0027EE  44                 	db	68
   185   0027EF  45                 	db	69
   186   0027F0  46                 	db	70
   187   0027F1  47                 	db	71
   188   0027F2  48                 	db	72
   189   0027F3  49                 	db	73
   190   0027F4  4A                 	db	74
   191   0027F5  00                 	db	0
   192   0027F6  00                 	db	0
   193   0027F7  00                 	db	0
   194   0027F8  00                 	db	0
   195   0027F9  00                 	db	0
   196   0027FA  00                 	db	0
   197   0027FB  00                 	db	0
   198                           
   199                           ;initializer for _conv7seg
   200   0027FC  3F                 	db	63
   201   0027FD  06                 	db	6
   202   0027FE  5B                 	db	91
   203   0027FF  4F                 	db	79
   204   002800  66                 	db	102
   205   002801  6D                 	db	109
   206   002802  7D                 	db	125
   207   002803  07                 	db	7
   208   002804  7F                 	db	127
   209   002805  6F                 	db	111
   210   002806  77                 	db	119
   211   002807  7C                 	db	124
   212   002808  39                 	db	57
   213   002809  5E                 	db	94
   214   00280A  79                 	db	121
   215   00280B  71                 	db	113
   216   00280C  00                 	db	0
   217                           
   218                           ;initializer for f_timers@counter5
   219   00280D  0001               	dw	1
   220                           
   221                           ;initializer for f_timers@counter4
   222   00280F  0001               	dw	1
   223                           
   224                           ;initializer for f_timers@counter3
   225   002811  0001               	dw	1
   226                           
   227                           ;initializer for f_timers@counter2
   228   002813  0001               	dw	1
   229                           
   230                           ;initializer for f_timers@counter1
   231   002815  0001               	dw	1
   232                           
   233                           ;initializer for _temporizacao
   234   002817  03E8               	dw	1000
   235   000000                     _INTCON2	set	4081
   236   000000                     _LATC	set	3979
   237   000000                     _LATB	set	3978
   238   000000                     _LATD	set	3980
   239   000000                     _PORTEbits	set	3972
   240   000000                     _INTCON3	set	4080
   241   000000                     _INTCON	set	4082
   242   000000                     _LATA	set	3977
   243   000000                     _GIE	set	32663
   244   000000                     _TMR2IF	set	31985
   245   000000                     _PEIE	set	32662
   246   000000                     _ADIE	set	31982
   247   000000                     _INT2IE	set	32644
   248   000000                     _INT2IF	set	32641
   249   000000                     _INT1IE	set	32643
   250   000000                     _INT0IE	set	32660
   251   000000                     _INT0IF	set	32657
   252   000000                     _TMR0IE	set	32661
   253   000000                     _LATA4	set	31820
   254   000000                     _LATA3	set	31819
   255   000000                     _LATA5	set	31821
   256   000000                     _GO	set	32273
   257   000000                     _PORTB	set	3969
   258   000000                     _ADCON2	set	4032
   259   000000                     _ADCON1	set	4033
   260   000000                     _ADCON0	set	4034
   261   000000                     _RE0	set	31776
   262   000000                     _LATA2	set	31818
   263   000000                     _ADRES	set	4035
   264   000000                     _T2CON	set	4042
   265   000000                     _TRISA	set	3986
   266   000000                     _TMR2IE	set	31977
   267   000000                     _TMR0	set	4054
   268   000000                     _PR2	set	4043
   269   000000                     _IPEN	set	32391
   270   000000                     _TMR0IF	set	32658
   271   000000                     _CCP1CON	set	4029
   272   000000                     _ADIF	set	31990
   273   000000                     _CCPR1L	set	4030
   274   000000                     _TRISE	set	3990
   275   000000                     _TRISD	set	3989
   276   000000                     _TRISC	set	3988
   277   000000                     _TRISB	set	3987
   278   000000                     _INT1IF	set	32640
   279   000000                     _T0CON	set	4053
   280   000000                     _PORTD	set	3971
   281                           
   282                           	psect	smallconst
   283   000600                     __psmallconst:
   284                           	callstack 0
   285   000600  00                 	db	0
   286   000601                     STR_1:
   287   000601  25                 	db	37
   288   000602  32                 	db	50	;'2'
   289   000603  2E                 	db	46
   290   000604  32                 	db	50	;'2'
   291   000605  64                 	db	100	;'d'
   292   000606  3A                 	db	58	;':'
   293   000607  25                 	db	37
   294   000608  32                 	db	50	;'2'
   295   000609  2E                 	db	46
   296   00060A  32                 	db	50	;'2'
   297   00060B  64                 	db	100	;'d'
   298   00060C  20                 	db	32
   299   00060D  74                 	db	116	;'t'
   300   00060E  65                 	db	101	;'e'
   301   00060F  6D                 	db	109	;'m'
   302   000610  70                 	db	112	;'p'
   303   000611  6F                 	db	111	;'o'
   304   000612  3A                 	db	58	;':'
   305   000613  25                 	db	37
   306   000614  34                 	db	52	;'4'
   307   000615  64                 	db	100	;'d'
   308   000616  00                 	db	0
   309   000617                     STR_2:
   310   000617  20                 	db	32
   311   000618  20                 	db	32
   312   000619  20                 	db	32
   313   00061A  20                 	db	32
   314   00061B  20                 	db	32
   315   00061C  25                 	db	37
   316   00061D  32                 	db	50	;'2'
   317   00061E  2E                 	db	46
   318   00061F  32                 	db	50	;'2'
   319   000620  64                 	db	100	;'d'
   320   000621  3A                 	db	58	;':'
   321   000622  25                 	db	37
   322   000623  32                 	db	50	;'2'
   323   000624  2E                 	db	46
   324   000625  32                 	db	50	;'2'
   325   000626  64                 	db	100	;'d'
   326   000627  00                 	db	0
   327   000628  00                 	db	0	; dummy byte at the end
   328   000000                     
   329                           ; #config settings
   330                           
   331                           	psect	cinit
   332   002266                     __pcinit:
   333                           	callstack 0
   334   002266                     start_initialization:
   335                           	callstack 0
   336   002266                     __initialization:
   337                           	callstack 0
   338                           
   339                           ; Initialize objects allocated to BANK1 (63 bytes)
   340                           ; load TBLPTR registers with __pidataBANK1
   341   002266  0EDA               	movlw	low __pidataBANK1
   342   002268  6EF6               	movwf	tblptrl,c
   343   00226A  0E27               	movlw	high __pidataBANK1
   344   00226C  6EF7               	movwf	tblptrh,c
   345   00226E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   346   002270  6EF8               	movwf	tblptru,c
   347   002272  EE01  F000         	lfsr	0,__pdataBANK1
   348   002276  EE10 F03F          	lfsr	1,63
   349   00227A                     copy_data0:
   350   00227A  0009               	tblrd		*+
   351   00227C  CFF5 FFEE          	movff	tablat,postinc0
   352   002280  50E5               	movf	postdec1,w,c
   353   002282  50E1               	movf	fsr1l,w,c
   354   002284  E1FA               	bnz	copy_data0
   355                           
   356                           ; Initialize objects allocated to BANK0 (8 bytes)
   357                           ; load TBLPTR registers with __pidataBANK0
   358   002286  0E74               	movlw	low __pidataBANK0
   359   002288  6EF6               	movwf	tblptrl,c
   360   00228A  0E2B               	movlw	high __pidataBANK0
   361   00228C  6EF7               	movwf	tblptrh,c
   362   00228E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   363   002290  6EF8               	movwf	tblptru,c
   364   002292  EE00  F0EE         	lfsr	0,__pdataBANK0
   365   002296  EE10 F008          	lfsr	1,8
   366   00229A                     copy_data1:
   367   00229A  0009               	tblrd		*+
   368   00229C  CFF5 FFEE          	movff	tablat,postinc0
   369   0022A0  50E5               	movf	postdec1,w,c
   370   0022A2  50E1               	movf	fsr1l,w,c
   371   0022A4  E1FA               	bnz	copy_data1
   372                           
   373                           ; Clear objects allocated to BANK1 (59 bytes)
   374   0022A6  EE01  F03F         	lfsr	0,__pbssBANK1
   375   0022AA  0E3B               	movlw	59
   376   0022AC                     clear_0:
   377   0022AC  6AEE               	clrf	postinc0,c
   378   0022AE  06E8               	decf	wreg,f,c
   379   0022B0  E1FD               	bnz	clear_0
   380                           
   381                           ; Clear objects allocated to BANK0 (13 bytes)
   382   0022B2  EE00  F0E1         	lfsr	0,__pbssBANK0
   383   0022B6  0E0D               	movlw	13
   384   0022B8                     clear_1:
   385   0022B8  6AEE               	clrf	postinc0,c
   386   0022BA  06E8               	decf	wreg,f,c
   387   0022BC  E1FD               	bnz	clear_1
   388                           
   389                           ; Clear objects allocated to COMRAM (7 bytes)
   390   0022BE  EE00  F078         	lfsr	0,__pbssCOMRAM
   391   0022C2  0E07               	movlw	7
   392   0022C4                     clear_2:
   393   0022C4  6AEE               	clrf	postinc0,c
   394   0022C6  06E8               	decf	wreg,f,c
   395   0022C8  E1FD               	bnz	clear_2
   396   0022CA                     end_of_initialization:
   397                           	callstack 0
   398   0022CA                     __end_of__initialization:
   399                           	callstack 0
   400   0022CA  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   401   0022CC  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   402   0022CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   403   0022D0  6EF8               	movwf	tblptru,c
   404   0022D2  0100               	movlb	0
   405   0022D4  EF82  F015         	goto	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMRAM
   408   000078                     __pbssCOMRAM:
   409                           	callstack 0
   410   000078                     _mostra_segundo:
   411                           	callstack 0
   412   000078                     	ds	1
   413   000079                     _mostra_minuto:
   414                           	callstack 0
   415   000079                     	ds	1
   416   00007A                     _start_counter:
   417                           	callstack 0
   418   00007A                     	ds	1
   419   00007B                     _segundo:
   420                           	callstack 0
   421   00007B                     	ds	1
   422   00007C                     _minuto:
   423                           	callstack 0
   424   00007C                     	ds	1
   425   00007D                     mux_display@estado:
   426                           	callstack 0
   427   00007D                     	ds	1
   428   00007E                     ADC_maq@estado:
   429                           	callstack 0
   430   00007E                     	ds	1
   431                           
   432                           	psect	bssBANK0
   433   0000E1                     __pbssBANK0:
   434                           	callstack 0
   435   0000E1                     _width:
   436                           	callstack 0
   437   0000E1                     	ds	2
   438   0000E3                     _prec:
   439                           	callstack 0
   440   0000E3                     	ds	2
   441   0000E5                     _flags:
   442                           	callstack 0
   443   0000E5                     	ds	1
   444   0000E6                     show_line2@old_latd:
   445                           	callstack 0
   446   0000E6                     	ds	1
   447   0000E7                     _memoria_minuto:
   448                           	callstack 0
   449   0000E7                     	ds	1
   450   0000E8                     _active_line2:
   451                           	callstack 0
   452   0000E8                     	ds	1
   453   0000E9                     _estado_sequencia01:
   454                           	callstack 0
   455   0000E9                     	ds	1
   456   0000EA                     _display4:
   457                           	callstack 0
   458   0000EA                     	ds	1
   459   0000EB                     _display3:
   460                           	callstack 0
   461   0000EB                     	ds	1
   462   0000EC                     _display2:
   463                           	callstack 0
   464   0000EC                     	ds	1
   465   0000ED                     _display1:
   466                           	callstack 0
   467   0000ED                     	ds	1
   468                           
   469                           	psect	dataBANK0
   470   0000EE                     __pdataBANK0:
   471                           	callstack 0
   472   0000EE                     read_keyb@m_dado_RB5:
   473                           	callstack 0
   474   0000EE                     	ds	1
   475   0000EF                     read_keyb@m_dado_RB4:
   476                           	callstack 0
   477   0000EF                     	ds	1
   478   0000F0                     read_keyb@m_dado_RB3:
   479                           	callstack 0
   480   0000F0                     	ds	1
   481   0000F1                     read_keyb@m_dado_RB2:
   482                           	callstack 0
   483   0000F1                     	ds	1
   484   0000F2                     read_keyb@m_dado_RB1:
   485                           	callstack 0
   486   0000F2                     	ds	1
   487   0000F3                     read_keyb@m_dado_RB0:
   488                           	callstack 0
   489   0000F3                     	ds	1
   490   0000F4                     _memoria_segundo:
   491                           	callstack 0
   492   0000F4                     	ds	1
   493   0000F5                     _enable_time_config:
   494                           	callstack 0
   495   0000F5                     	ds	1
   496                           
   497                           	psect	bssBANK1
   498   00013F                     __pbssBANK1:
   499                           	callstack 0
   500   00013F                     _AD_data:
   501                           	callstack 0
   502   00013F                     	ds	6
   503   000145                     _temporizador2:
   504                           	callstack 0
   505   000145                     	ds	2
   506   000147                     _temporizador1:
   507                           	callstack 0
   508   000147                     	ds	2
   509   000149                     _unidade_segundo:
   510                           	callstack 0
   511   000149                     	ds	1
   512   00014A                     _dezena_segundo:
   513                           	callstack 0
   514   00014A                     	ds	1
   515   00014B                     _unidade_minuto:
   516                           	callstack 0
   517   00014B                     	ds	1
   518   00014C                     _dezena_minuto:
   519                           	callstack 0
   520   00014C                     	ds	1
   521   00014D                     _aciona_read_AD:
   522                           	callstack 0
   523   00014D                     	ds	1
   524   00014E                     _aciona_imprime_tempratura:
   525                           	callstack 0
   526   00014E                     	ds	1
   527   00014F                     _estado_sequencia02:
   528                           	callstack 0
   529   00014F                     	ds	1
   530   000150                     _dbuf:
   531                           	callstack 0
   532   000150                     	ds	32
   533   000170                     _buffer:
   534                           	callstack 0
   535   000170                     	ds	10
   536                           
   537                           	psect	dataBANK1
   538   000100                     __pdataBANK1:
   539                           	callstack 0
   540   000100                     _linha2:
   541                           	callstack 0
   542   000100                     	ds	17
   543   000111                     _linha1:
   544                           	callstack 0
   545   000111                     	ds	17
   546   000122                     _conv7seg:
   547                           	callstack 0
   548   000122                     	ds	17
   549   000133                     	ds	2
   550   000135                     f_timers@counter4:
   551                           	callstack 0
   552   000135                     	ds	2
   553   000137                     f_timers@counter3:
   554                           	callstack 0
   555   000137                     	ds	2
   556   000139                     f_timers@counter2:
   557                           	callstack 0
   558   000139                     	ds	2
   559   00013B                     f_timers@counter1:
   560                           	callstack 0
   561   00013B                     	ds	2
   562   00013D                     _temporizacao:
   563                           	callstack 0
   564   00013D                     	ds	2
   565                           
   566                           	psect	cstackBANK1
   567   00017A                     __pcstackBANK1:
   568                           	callstack 0
   569   00017A                     vfprintf@cfmt:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x0
   573   00017A                     	ds	2
   574   00017C                     ?_sprintf:
   575                           	callstack 0
   576   00017C                     sprintf@s:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x2
   580   00017C                     	ds	2
   581   00017E                     sprintf@fmt:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x4
   585   00017E                     	ds	6
   586   000184                     sprintf@ap:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xA
   590   000184                     	ds	2
   591   000186                     sprintf@f:
   592                           	callstack 0
   593                           
   594                           ; 11 bytes @ 0xC
   595   000186                     	ds	11
   596                           
   597                           	psect	cstackBANK0
   598   000080                     __pcstackBANK0:
   599                           	callstack 0
   600   000080                     ??_f_interrupt_high:
   601                           
   602                           ; 1 bytes @ 0x0
   603   000080                     	ds	10
   604   00008A                     ?_isdigit:
   605                           	callstack 0
   606   00008A                     ?_isspace:
   607                           	callstack 0
   608   00008A                     ?___wmul:
   609                           	callstack 0
   610   00008A                     ?___awdiv:
   611                           	callstack 0
   612   00008A                     ?___awmod:
   613                           	callstack 0
   614   00008A                     ?___aodiv:
   615                           	callstack 0
   616   00008A                     ?___aomod:
   617                           	callstack 0
   618   00008A                     lcd_wr@val:
   619                           	callstack 0
   620   00008A                     ___wmul@multiplier:
   621                           	callstack 0
   622   00008A                     ___awdiv@dividend:
   623                           	callstack 0
   624   00008A                     ___awmod@dividend:
   625                           	callstack 0
   626   00008A                     isdigit@c:
   627                           	callstack 0
   628   00008A                     isspace@c:
   629                           	callstack 0
   630   00008A                     fputc@c:
   631                           	callstack 0
   632   00008A                     ___aodiv@dividend:
   633                           	callstack 0
   634   00008A                     ___aomod@dividend:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0xA
   638   00008A                     	ds	1
   639   00008B                     lcd_cmd@val:
   640                           	callstack 0
   641   00008B                     lcd_dat@val:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0xB
   645   00008B                     	ds	1
   646   00008C                     ??_lcd_init:
   647   00008C                     ??_isdigit:
   648   00008C                     ??_isspace:
   649   00008C                     lcd_str@str:
   650                           	callstack 0
   651   00008C                     ___wmul@multiplicand:
   652                           	callstack 0
   653   00008C                     ___awdiv@divisor:
   654                           	callstack 0
   655   00008C                     ___awmod@divisor:
   656                           	callstack 0
   657   00008C                     fputc@fp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0xC
   661   00008C                     	ds	1
   662   00008D                     
   663                           ; 1 bytes @ 0xD
   664   00008D                     	ds	1
   665   00008E                     ??_fputc:
   666   00008E                     lcd_str@i:
   667                           	callstack 0
   668   00008E                     ___awdiv@counter:
   669                           	callstack 0
   670   00008E                     ___awmod@counter:
   671                           	callstack 0
   672   00008E                     _isspace$1002:
   673                           	callstack 0
   674   00008E                     ___wmul@product:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0xE
   678   00008E                     	ds	1
   679   00008F                     ___awdiv@sign:
   680                           	callstack 0
   681   00008F                     ___awmod@sign:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0xF
   685   00008F                     	ds	1
   686   000090                     ?_atoi:
   687                           	callstack 0
   688   000090                     ___awdiv@quotient:
   689                           	callstack 0
   690   000090                     atoi@s:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x10
   694   000090                     	ds	2
   695   000092                     ??_atoi:
   696   000092                     ___aodiv@divisor:
   697                           	callstack 0
   698   000092                     ___aomod@divisor:
   699                           	callstack 0
   700                           
   701                           ; 8 bytes @ 0x12
   702   000092                     	ds	1
   703   000093                     fputs@s:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x13
   707   000093                     	ds	2
   708   000095                     atoi@neg:
   709                           	callstack 0
   710   000095                     fputs@fp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x15
   714   000095                     	ds	2
   715   000097                     fputs@c:
   716                           	callstack 0
   717   000097                     atoi@n:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x17
   721   000097                     	ds	1
   722   000098                     fputs@i:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x18
   726   000098                     	ds	2
   727   00009A                     ___aodiv@counter:
   728                           	callstack 0
   729   00009A                     ___aomod@counter:
   730                           	callstack 0
   731   00009A                     pad@fp:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x1A
   735   00009A                     	ds	1
   736   00009B                     ___aodiv@sign:
   737                           	callstack 0
   738   00009B                     ___aomod@sign:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x1B
   742   00009B                     	ds	1
   743   00009C                     ?_abs:
   744                           	callstack 0
   745   00009C                     pad@buf:
   746                           	callstack 0
   747   00009C                     abs@a:
   748                           	callstack 0
   749   00009C                     ___aodiv@quotient:
   750                           	callstack 0
   751                           
   752                           ; 8 bytes @ 0x1C
   753   00009C                     	ds	2
   754   00009E                     ??_abs:
   755   00009E                     pad@p:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x1E
   759   00009E                     	ds	2
   760   0000A0                     ??_pad:
   761                           
   762                           ; 1 bytes @ 0x20
   763   0000A0                     	ds	1
   764   0000A1                     pad@i:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x21
   768   0000A1                     	ds	2
   769   0000A3                     pad@w:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x23
   773   0000A3                     	ds	2
   774   0000A5                     dtoa@fp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x25
   778   0000A5                     	ds	2
   779   0000A7                     dtoa@d:
   780                           	callstack 0
   781                           
   782                           ; 8 bytes @ 0x27
   783   0000A7                     	ds	8
   784   0000AF                     ??_dtoa:
   785                           
   786                           ; 1 bytes @ 0x2F
   787   0000AF                     	ds	8
   788   0000B7                     _dtoa$953:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x37
   792   0000B7                     	ds	2
   793   0000B9                     dtoa@p:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x39
   797   0000B9                     	ds	2
   798   0000BB                     dtoa@w:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x3B
   802   0000BB                     	ds	2
   803   0000BD                     dtoa@n:
   804                           	callstack 0
   805                           
   806                           ; 8 bytes @ 0x3D
   807   0000BD                     	ds	8
   808   0000C5                     dtoa@s:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x45
   812   0000C5                     	ds	1
   813   0000C6                     dtoa@i:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x46
   817   0000C6                     	ds	2
   818   0000C8                     vfpfcnvrt@fp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x48
   822   0000C8                     	ds	2
   823   0000CA                     vfpfcnvrt@fmt:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x4A
   827   0000CA                     	ds	2
   828   0000CC                     vfpfcnvrt@ap:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x4C
   832   0000CC                     	ds	2
   833   0000CE                     ??_vfpfcnvrt:
   834                           
   835                           ; 1 bytes @ 0x4E
   836   0000CE                     	ds	3
   837   0000D1                     vfpfcnvrt@convarg:
   838                           	callstack 0
   839                           
   840                           ; 8 bytes @ 0x51
   841   0000D1                     	ds	8
   842   0000D9                     vfpfcnvrt@cp:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x59
   846   0000D9                     	ds	2
   847   0000DB                     ?_vfprintf:
   848                           	callstack 0
   849   0000DB                     vfprintf@fp:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x5B
   853   0000DB                     	ds	2
   854   0000DD                     vfprintf@fmt:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x5D
   858   0000DD                     	ds	2
   859   0000DF                     vfprintf@ap:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x5F
   863   0000DF                     	ds	2
   864   0000E1                     
   865                           ; 1 bytes @ 0x61
   866                           
   867                           	psect	cstackCOMRAM
   868   000001                     __pcstackCOMRAM:
   869                           	callstack 0
   870   000001                     ??_calcula_minuto_e_segundo:
   871   000001                     ??_mux_display:
   872   000001                     ?i2___wmul:
   873                           	callstack 0
   874   000001                     ?i2___aodiv:
   875                           	callstack 0
   876   000001                     ?i2___aomod:
   877                           	callstack 0
   878   000001                     select_channel@channel:
   879                           	callstack 0
   880   000001                     i2lcd_wr@val:
   881                           	callstack 0
   882   000001                     f_pwm@duty:
   883                           	callstack 0
   884   000001                     i2___wmul@multiplier:
   885                           	callstack 0
   886   000001                     i2isdigit@c:
   887                           	callstack 0
   888   000001                     i2isspace@c:
   889                           	callstack 0
   890   000001                     i2fputc@c:
   891                           	callstack 0
   892   000001                     i2___aodiv@dividend:
   893                           	callstack 0
   894   000001                     i2___aomod@dividend:
   895                           	callstack 0
   896                           
   897                           ; 8 bytes @ 0x0
   898   000001                     	ds	1
   899   000002                     ??_ADC_maq:
   900   000002                     i2lcd_cmd@val:
   901                           	callstack 0
   902   000002                     i2lcd_dat@val:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x1
   906   000002                     	ds	1
   907   000003                     ??_f_pwm:
   908   000003                     ??i2_isspace:
   909   000003                     i2lcd_str@str:
   910                           	callstack 0
   911   000003                     i2___wmul@multiplicand:
   912                           	callstack 0
   913   000003                     i2fputc@fp:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x2
   917   000003                     	ds	2
   918   000005                     ??i2_fputc:
   919   000005                     i2lcd_str@i:
   920                           	callstack 0
   921   000005                     i2___wmul@product:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x4
   925   000005                     	ds	2
   926   000007                     ?i2_atoi:
   927                           	callstack 0
   928   000007                     i2atoi@s:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x6
   932   000007                     	ds	2
   933   000009                     ??i2_atoi:
   934   000009                     i2___aodiv@divisor:
   935                           	callstack 0
   936   000009                     i2___aomod@divisor:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x8
   940   000009                     	ds	1
   941   00000A                     i2fputs@s:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x9
   945   00000A                     	ds	2
   946   00000C                     i2atoi@neg:
   947                           	callstack 0
   948   00000C                     i2fputs@fp:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0xB
   952   00000C                     	ds	2
   953   00000E                     i2fputs@c:
   954                           	callstack 0
   955   00000E                     i2atoi@n:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0xD
   959   00000E                     	ds	1
   960   00000F                     i2fputs@i:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0xE
   964   00000F                     	ds	2
   965   000011                     i2___aodiv@counter:
   966                           	callstack 0
   967   000011                     i2___aomod@counter:
   968                           	callstack 0
   969   000011                     i2pad@fp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x10
   973   000011                     	ds	1
   974   000012                     i2___aodiv@sign:
   975                           	callstack 0
   976   000012                     i2___aomod@sign:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x11
   980   000012                     	ds	1
   981   000013                     ?i2_abs:
   982                           	callstack 0
   983   000013                     i2pad@buf:
   984                           	callstack 0
   985   000013                     i2abs@a:
   986                           	callstack 0
   987   000013                     i2___aodiv@quotient:
   988                           	callstack 0
   989                           
   990                           ; 8 bytes @ 0x12
   991   000013                     	ds	2
   992   000015                     ??i2_abs:
   993   000015                     i2pad@p:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x14
   997   000015                     	ds	2
   998   000017                     ??i2_pad:
   999                           
  1000                           ; 1 bytes @ 0x16
  1001   000017                     	ds	1
  1002   000018                     i2pad@i:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x17
  1006   000018                     	ds	2
  1007   00001A                     i2pad@w:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x19
  1011   00001A                     	ds	2
  1012   00001C                     i2dtoa@fp:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x1B
  1016   00001C                     	ds	2
  1017   00001E                     i2dtoa@d:
  1018                           	callstack 0
  1019                           
  1020                           ; 8 bytes @ 0x1D
  1021   00001E                     	ds	8
  1022   000026                     ??i2_dtoa:
  1023                           
  1024                           ; 1 bytes @ 0x25
  1025   000026                     	ds	8
  1026   00002E                     i2_dtoa$953:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x2D
  1030   00002E                     	ds	2
  1031   000030                     i2dtoa@p:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x2F
  1035   000030                     	ds	2
  1036   000032                     i2dtoa@w:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x31
  1040   000032                     	ds	2
  1041   000034                     i2dtoa@n:
  1042                           	callstack 0
  1043                           
  1044                           ; 8 bytes @ 0x33
  1045   000034                     	ds	8
  1046   00003C                     i2dtoa@s:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x3B
  1050   00003C                     	ds	1
  1051   00003D                     i2dtoa@i:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x3C
  1055   00003D                     	ds	2
  1056   00003F                     i2vfpfcnvrt@fp:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x3E
  1060   00003F                     	ds	2
  1061   000041                     i2vfpfcnvrt@fmt:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x40
  1065   000041                     	ds	2
  1066   000043                     i2vfpfcnvrt@ap:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x42
  1070   000043                     	ds	2
  1071   000045                     ??i2_vfpfcnvrt:
  1072                           
  1073                           ; 1 bytes @ 0x44
  1074   000045                     	ds	3
  1075   000048                     i2vfpfcnvrt@convarg:
  1076                           	callstack 0
  1077                           
  1078                           ; 8 bytes @ 0x47
  1079   000048                     	ds	8
  1080   000050                     i2vfpfcnvrt@cp:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x4F
  1084   000050                     	ds	2
  1085   000052                     ?i2_vfprintf:
  1086                           	callstack 0
  1087   000052                     i2vfprintf@fp:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x51
  1091   000052                     	ds	2
  1092   000054                     i2vfprintf@fmt:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x53
  1096   000054                     	ds	2
  1097   000056                     i2vfprintf@ap:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x55
  1101   000056                     	ds	2
  1102   000058                     i2vfprintf@cfmt:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x57
  1106   000058                     	ds	2
  1107   00005A                     ?i2_sprintf:
  1108                           	callstack 0
  1109   00005A                     i2sprintf@s:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x59
  1113   00005A                     	ds	2
  1114   00005C                     i2sprintf@fmt:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x5B
  1118   00005C                     	ds	8
  1119   000064                     i2sprintf@ap:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x63
  1123   000064                     	ds	2
  1124   000066                     i2sprintf@f:
  1125                           	callstack 0
  1126                           
  1127                           ; 11 bytes @ 0x65
  1128   000066                     	ds	11
  1129   000071                     read_keyb@dado_RB0:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x70
  1133   000071                     	ds	1
  1134   000072                     read_keyb@dado_RB1:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x71
  1138   000072                     	ds	1
  1139   000073                     read_keyb@dado_RB2:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x72
  1143   000073                     	ds	1
  1144   000074                     read_keyb@dado_RB3:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x73
  1148   000074                     	ds	1
  1149   000075                     read_keyb@dado_RB4:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x74
  1153   000075                     	ds	1
  1154   000076                     read_keyb@dado_RB5:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x75
  1158   000076                     	ds	1
  1159   000077                     read_keyb@dado:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x76
  1163   000077                     	ds	1
  1164   000078                     
  1165                           ; 1 bytes @ 0x77
  1166 ;;
  1167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1168 ;;
  1169 ;; *************** function _main *****************
  1170 ;; Defined at:
  1171 ;;		line 28 in file "main.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  2  461[None  ] int 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1185 ;;      Params:         0       0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0
  1188 ;;      Totals:         0       0       0       0       0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels required when called: 23
  1191 ;; This function calls:
  1192 ;;		_loop
  1193 ;;		_setup
  1194 ;; This function is called by:
  1195 ;;		Startup code after reset
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text0
  1200   002B04                     __ptext0:
  1201                           	callstack 0
  1202   002B04                     _main:
  1203                           	callstack 8
  1204   002B04                     
  1205                           ;main.c: 31:    setup();
  1206   002B04  EC48  F013         	call	_setup	;wreg free
  1207   002B08                     l4582:
  1208   002B08  EC83  F014         	call	_loop	;wreg free
  1209   002B0C  EF84  F015         	goto	l4582
  1210   002B10  EF07  F000         	goto	start
  1211   002B14                     __end_of_main:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _setup *****************
  1215 ;; Defined at:
  1216 ;;		line 14 in file "IO.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1230 ;;      Params:         0       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 16
  1237 ;; This function calls:
  1238 ;;		_AD_init
  1239 ;;		_disable_interrupts
  1240 ;;		_enable_interrupts
  1241 ;;		_interrupt_init
  1242 ;;		_lcd_init
  1243 ;;		_setup_io
  1244 ;;		_start_AD_conversion
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text1
  1251   002690                     __ptext1:
  1252                           	callstack 0
  1253   002690                     _setup:
  1254                           	callstack 14
  1255   002690                     
  1256                           ;IO.c: 16:     disable_interrupts();
  1257   002690  ECBE  F015         	call	_disable_interrupts	;wreg free
  1258   002694                     
  1259                           ;IO.c: 17:     setup_io();
  1260   002694  ECDE  F014         	call	_setup_io	;wreg free
  1261   002698                     
  1262                           ;IO.c: 18:     interrupt_init();
  1263   002698  EC5C  F015         	call	_interrupt_init	;wreg free
  1264   00269C                     
  1265                           ;IO.c: 19:     T2CON = 0b00000100;
  1266   00269C  0E04               	movlw	4
  1267   00269E  6ECA               	movwf	202,c	;volatile
  1268   0026A0                     
  1269                           ;IO.c: 20:     TMR2IE = 1;
  1270   0026A0  829D               	bsf	3997,1,c	;volatile
  1271   0026A2                     
  1272                           ;IO.c: 24:     PR2 = 255;
  1273   0026A2  68CB               	setf	203,c	;volatile
  1274   0026A4                     
  1275                           ;IO.c: 25:     CCP1CON = 0b00001100;
  1276   0026A4  0E0C               	movlw	12
  1277   0026A6  6EBD               	movwf	189,c	;volatile
  1278   0026A8                     
  1279                           ;IO.c: 26:     AD_init();
  1280   0026A8  ECA2  F015         	call	_AD_init	;wreg free
  1281   0026AC                     
  1282                           ;IO.c: 27:     LATA2 = 1, LATA3 = 1, LATA4 = 1, LATA5 = 1;
  1283   0026AC  8489               	bsf	3977,2,c	;volatile
  1284   0026AE  8689               	bsf	3977,3,c	;volatile
  1285   0026B0  8889               	bsf	3977,4,c	;volatile
  1286   0026B2  8A89               	bsf	3977,5,c	;volatile
  1287   0026B4                     
  1288                           ;IO.c: 28:     lcd_init();
  1289   0026B4  EC6C  F011         	call	_lcd_init	;wreg free
  1290   0026B8                     
  1291                           ;IO.c: 29:     display1 = 0;
  1292   0026B8  0E00               	movlw	0
  1293   0026BA  0100               	movlb	0	; () banked
  1294   0026BC  6FED               	movwf	_display1& (0+255),b
  1295   0026BE                     
  1296                           ; BSR set to: 0
  1297                           ;IO.c: 30:     display2 = 0;
  1298   0026BE  0E00               	movlw	0
  1299   0026C0  6FEC               	movwf	_display2& (0+255),b
  1300   0026C2                     
  1301                           ; BSR set to: 0
  1302                           ;IO.c: 31:     display3 = 0;
  1303   0026C2  0E00               	movlw	0
  1304   0026C4  6FEB               	movwf	_display3& (0+255),b
  1305   0026C6                     
  1306                           ; BSR set to: 0
  1307                           ;IO.c: 32:     display4 = 0;
  1308   0026C6  0E00               	movlw	0
  1309   0026C8  6FEA               	movwf	_display4& (0+255),b
  1310                           
  1311                           ;IO.c: 33:     enable_interrupts();
  1312   0026CA  ECB0  F015         	call	_enable_interrupts	;wreg free
  1313                           
  1314                           ;IO.c: 34:     start_AD_conversion();
  1315   0026CE  ECC6  F015         	call	_start_AD_conversion	;wreg free
  1316   0026D2  0012               	return		;funcret
  1317   0026D4                     __end_of_setup:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _start_AD_conversion *****************
  1321 ;; Defined at:
  1322 ;;		line 19 in file "ADC.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		None
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1336 ;;      Params:         0       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; Hardware stack levels required when called: 13
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_setup
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text2
  1351   002B8C                     __ptext2:
  1352                           	callstack 0
  1353   002B8C                     _start_AD_conversion:
  1354                           	callstack 16
  1355   002B8C                     
  1356                           ;ADC.c: 21:     GO = 1;
  1357   002B8C  82C2               	bsf	4034,1,c	;volatile
  1358   002B8E  0012               	return		;funcret
  1359   002B90                     __end_of_start_AD_conversion:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _setup_io *****************
  1363 ;; Defined at:
  1364 ;;		line 38 in file "IO.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         0       0       0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0
  1381 ;;      Totals:         0       0       0       0       0       0       0
  1382 ;;Total ram usage:        0 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 13
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_setup
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text3
  1393   0029BC                     __ptext3:
  1394                           	callstack 0
  1395   0029BC                     _setup_io:
  1396                           	callstack 16
  1397   0029BC                     
  1398                           ;IO.c: 40:     TRISA = 0b11000011;
  1399   0029BC  0EC3               	movlw	195
  1400   0029BE  6E92               	movwf	146,c	;volatile
  1401                           
  1402                           ;IO.c: 41:     TRISB = 0b00111111;
  1403   0029C0  0E3F               	movlw	63
  1404   0029C2  6E93               	movwf	147,c	;volatile
  1405                           
  1406                           ;IO.c: 42:     TRISC = 0b11011011;
  1407   0029C4  0EDB               	movlw	219
  1408   0029C6  6E94               	movwf	148,c	;volatile
  1409                           
  1410                           ;IO.c: 43:     TRISD = 0b00000000;
  1411   0029C8  0E00               	movlw	0
  1412   0029CA  6E95               	movwf	149,c	;volatile
  1413                           
  1414                           ;IO.c: 44:     TRISE = 0b11111000;
  1415   0029CC  0EF8               	movlw	248
  1416   0029CE  6E96               	movwf	150,c	;volatile
  1417                           
  1418                           ;IO.c: 45:     LATA = 0b00000000;
  1419   0029D0  0E00               	movlw	0
  1420   0029D2  6E89               	movwf	137,c	;volatile
  1421                           
  1422                           ;IO.c: 46:     LATB = 0b00000000;
  1423   0029D4  0E00               	movlw	0
  1424   0029D6  6E8A               	movwf	138,c	;volatile
  1425                           
  1426                           ;IO.c: 47:     LATC = 0b00000000;
  1427   0029D8  0E00               	movlw	0
  1428   0029DA  6E8B               	movwf	139,c	;volatile
  1429                           
  1430                           ;IO.c: 48:     LATD = 0b00000000;
  1431   0029DC  0E00               	movlw	0
  1432   0029DE  6E8C               	movwf	140,c	;volatile
  1433   0029E0  0012               	return		;funcret
  1434   0029E2                     __end_of_setup_io:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _lcd_init *****************
  1438 ;; Defined at:
  1439 ;;		line 56 in file "lcd.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1453 ;;      Params:         0       0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0
  1455 ;;      Temps:          0       1       0       0       0       0       0
  1456 ;;      Totals:         0       1       0       0       0       0       0
  1457 ;;Total ram usage:        1 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 15
  1460 ;; This function calls:
  1461 ;;		_lcd_cmd
  1462 ;; This function is called by:
  1463 ;;		_setup
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468   0022D8                     __ptext4:
  1469                           	callstack 0
  1470   0022D8                     _lcd_init:
  1471                           	callstack 14
  1472   0022D8                     
  1473                           ;lcd.c: 58:  PORTEbits.RE1=0;
  1474   0022D8  9284               	bcf	132,1,c	;volatile
  1475                           
  1476                           ;lcd.c: 59:  PORTEbits.RE2=0;
  1477   0022DA  9484               	bcf	132,2,c	;volatile
  1478   0022DC                     
  1479                           ;lcd.c: 60:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1480   0022DC  0E1A               	movlw	26
  1481   0022DE  0100               	movlb	0	; () banked
  1482   0022E0  6F8C               	movwf	??_lcd_init& (0+255),b
  1483   0022E2  0EF8               	movlw	248
  1484   0022E4                     u4427:
  1485   0022E4  2EE8               	decfsz	wreg,f,c
  1486   0022E6  D7FE               	bra	u4427
  1487   0022E8  2F8C               	decfsz	??_lcd_init& (0+255),f,b
  1488   0022EA  D7FC               	bra	u4427
  1489   0022EC  F000               	nop	
  1490   0022EE                     
  1491                           ;lcd.c: 61:  PORTEbits.RE1=1;
  1492   0022EE  8284               	bsf	132,1,c	;volatile
  1493   0022F0                     
  1494                           ;lcd.c: 63:  lcd_cmd(0x38);
  1495   0022F0  0E38               	movlw	56
  1496   0022F2  EC04  F015         	call	_lcd_cmd
  1497   0022F6                     
  1498                           ;lcd.c: 64:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1499   0022F6  0E07               	movlw	7
  1500   0022F8  0100               	movlb	0	; () banked
  1501   0022FA  6F8C               	movwf	??_lcd_init& (0+255),b
  1502   0022FC  0E7D               	movlw	125
  1503   0022FE                     u4437:
  1504   0022FE  2EE8               	decfsz	wreg,f,c
  1505   002300  D7FE               	bra	u4437
  1506   002302  2F8C               	decfsz	??_lcd_init& (0+255),f,b
  1507   002304  D7FC               	bra	u4437
  1508                           
  1509                           ;lcd.c: 65:  lcd_cmd(0x38);
  1510   002306  0E38               	movlw	56
  1511   002308  EC04  F015         	call	_lcd_cmd
  1512   00230C                     
  1513                           ;lcd.c: 66:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1514   00230C  0EC8               	movlw	200
  1515   00230E                     u4447:
  1516   00230E  D000               	nop2	
  1517   002310  2EE8               	decfsz	wreg,f,c
  1518   002312  D7FD               	bra	u4447
  1519   002314                     
  1520                           ;lcd.c: 67:  lcd_cmd(0x38);
  1521   002314  0E38               	movlw	56
  1522   002316  EC04  F015         	call	_lcd_cmd
  1523   00231A                     
  1524                           ;lcd.c: 68:  lcd_cmd(0x08);
  1525   00231A  0E08               	movlw	8
  1526   00231C  EC04  F015         	call	_lcd_cmd
  1527   002320                     
  1528                           ;lcd.c: 69:  lcd_cmd(0x0F);
  1529   002320  0E0F               	movlw	15
  1530   002322  EC04  F015         	call	_lcd_cmd
  1531   002326                     
  1532                           ;lcd.c: 70:  lcd_cmd(0x01);
  1533   002326  0E01               	movlw	1
  1534   002328  EC04  F015         	call	_lcd_cmd
  1535   00232C                     
  1536                           ;lcd.c: 71:  lcd_cmd(0x38);
  1537   00232C  0E38               	movlw	56
  1538   00232E  EC04  F015         	call	_lcd_cmd
  1539   002332                     
  1540                           ;lcd.c: 72:     lcd_cmd(0x80);
  1541   002332  0E80               	movlw	128
  1542   002334  EC04  F015         	call	_lcd_cmd
  1543   002338                     
  1544                           ;lcd.c: 73:     lcd_cmd(0x0C);
  1545   002338  0E0C               	movlw	12
  1546   00233A  EC04  F015         	call	_lcd_cmd
  1547   00233E  0012               	return		;funcret
  1548   002340                     __end_of_lcd_init:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _interrupt_init *****************
  1552 ;; Defined at:
  1553 ;;		line 95 in file "Interrupt.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1567 ;;      Params:         0       0       0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0
  1570 ;;      Totals:         0       0       0       0       0       0       0
  1571 ;;Total ram usage:        0 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 13
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_setup
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text5
  1582   002AB8                     __ptext5:
  1583                           	callstack 0
  1584   002AB8                     _interrupt_init:
  1585                           	callstack 16
  1586   002AB8                     
  1587                           ;Interrupt.c: 97:     INTCON = 0b10010000;
  1588   002AB8  0E90               	movlw	144
  1589   002ABA  6EF2               	movwf	242,c	;volatile
  1590                           
  1591                           ;Interrupt.c: 98:     INTCON2 = 0b00000101;
  1592   002ABC  0E05               	movlw	5
  1593   002ABE  6EF1               	movwf	241,c	;volatile
  1594                           
  1595                           ;Interrupt.c: 99:     INTCON3 = 0b11011000;
  1596   002AC0  0ED8               	movlw	216
  1597   002AC2  6EF0               	movwf	240,c	;volatile
  1598                           
  1599                           ;Interrupt.c: 100:     T0CON = 0b11000001;
  1600   002AC4  0EC1               	movlw	193
  1601   002AC6  6ED5               	movwf	213,c	;volatile
  1602                           
  1603                           ;Interrupt.c: 106:     TMR0 = 0x06;
  1604   002AC8  0E00               	movlw	0
  1605   002ACA  6ED7               	movwf	215,c	;volatile
  1606   002ACC  0E06               	movlw	6
  1607   002ACE  6ED6               	movwf	214,c	;volatile
  1608   002AD0  0012               	return		;funcret
  1609   002AD2                     __end_of_interrupt_init:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _enable_interrupts *****************
  1613 ;; Defined at:
  1614 ;;		line 88 in file "Interrupt.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		None
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1628 ;;      Params:         0       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 13
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_setup
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text6
  1643   002B60                     __ptext6:
  1644                           	callstack 0
  1645   002B60                     _enable_interrupts:
  1646                           	callstack 16
  1647   002B60                     
  1648                           ;Interrupt.c: 89:     TMR0IE = 1;
  1649   002B60  8AF2               	bsf	4082,5,c	;volatile
  1650                           
  1651                           ;Interrupt.c: 90:     ADIE = 1;
  1652   002B62  8C9D               	bsf	3997,6,c	;volatile
  1653                           
  1654                           ;Interrupt.c: 91:     PEIE = 1;
  1655   002B64  8CF2               	bsf	4082,6,c	;volatile
  1656                           
  1657                           ;Interrupt.c: 92:     GIE = 1;
  1658   002B66  8EF2               	bsf	4082,7,c	;volatile
  1659   002B68  0012               	return		;funcret
  1660   002B6A                     __end_of_enable_interrupts:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _disable_interrupts *****************
  1664 ;; Defined at:
  1665 ;;		line 82 in file "Interrupt.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		None
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1679 ;;      Params:         0       0       0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 13
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_setup
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text7
  1694   002B7C                     __ptext7:
  1695                           	callstack 0
  1696   002B7C                     _disable_interrupts:
  1697                           	callstack 16
  1698   002B7C                     
  1699                           ;Interrupt.c: 83:     IPEN = 0;
  1700   002B7C  9ED0               	bcf	4048,7,c	;volatile
  1701                           
  1702                           ;Interrupt.c: 84:     GIE = 0;
  1703   002B7E  9EF2               	bcf	4082,7,c	;volatile
  1704                           
  1705                           ;Interrupt.c: 85:     PEIE = 0;
  1706   002B80  9CF2               	bcf	4082,6,c	;volatile
  1707   002B82  0012               	return		;funcret
  1708   002B84                     __end_of_disable_interrupts:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _AD_init *****************
  1712 ;; Defined at:
  1713 ;;		line 12 in file "ADC.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1727 ;;      Params:         0       0       0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 13
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_setup
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text8
  1742   002B44                     __ptext8:
  1743                           	callstack 0
  1744   002B44                     _AD_init:
  1745                           	callstack 16
  1746   002B44                     
  1747                           ;ADC.c: 14:     ADCON0 = 0b00000001;
  1748   002B44  0E01               	movlw	1
  1749   002B46  6EC2               	movwf	194,c	;volatile
  1750                           
  1751                           ;ADC.c: 15:     ADCON1 = 0b00001101;
  1752   002B48  0E0D               	movlw	13
  1753   002B4A  6EC1               	movwf	193,c	;volatile
  1754                           
  1755                           ;ADC.c: 16:     ADCON2 = 0b10010100;
  1756   002B4C  0E94               	movlw	148
  1757   002B4E  6EC0               	movwf	192,c	;volatile
  1758   002B50  0012               	return		;funcret
  1759   002B52                     __end_of_AD_init:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _loop *****************
  1763 ;; Defined at:
  1764 ;;		line 43 in file "main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1778 ;;      Params:         0       0       0       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0
  1781 ;;      Totals:         0       0       0       0       0       0       0
  1782 ;;Total ram usage:        0 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 22
  1785 ;; This function calls:
  1786 ;;		_show_display
  1787 ;;		_show_line2
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text9
  1794   002906                     __ptext9:
  1795                           	callstack 0
  1796   002906                     _loop:
  1797                           	callstack 8
  1798   002906                     
  1799                           ;main.c: 45:     if(enable_time_config)
  1800   002906  0100               	movlb	0	; () banked
  1801   002908  51F5               	movf	_enable_time_config& (0+255),w,b
  1802   00290A  B4D8               	btfsc	status,2,c
  1803   00290C  EF8A  F014         	goto	u4261
  1804   002910  EF8C  F014         	goto	u4260
  1805   002914                     u4261:
  1806   002914  EF8E  F014         	goto	l4538
  1807   002918                     u4260:
  1808   002918                     
  1809                           ; BSR set to: 0
  1810                           ;main.c: 46:         show_display();
  1811   002918  ECA0  F011         	call	_show_display	;wreg free
  1812   00291C                     l4538:
  1813                           
  1814                           ;main.c: 48:     if(active_line2)
  1815   00291C  0100               	movlb	0	; () banked
  1816   00291E  51E8               	movf	_active_line2& (0+255),w,b
  1817   002920  B4D8               	btfsc	status,2,c
  1818   002922  EF95  F014         	goto	u4271
  1819   002926  EF97  F014         	goto	u4270
  1820   00292A                     u4271:
  1821   00292A  EF9C  F014         	goto	l473
  1822   00292E                     u4270:
  1823   00292E                     
  1824                           ; BSR set to: 0
  1825                           ;main.c: 49:     {;main.c: 50:         show_line2();
  1826   00292E  ECAD  F013         	call	_show_line2	;wreg free
  1827   002932                     
  1828                           ;main.c: 51:         active_line2 = 0;
  1829   002932  0E00               	movlw	0
  1830   002934  0100               	movlb	0	; () banked
  1831   002936  6FE8               	movwf	_active_line2& (0+255),b
  1832   002938                     l473:
  1833                           
  1834                           ; BSR set to: 0
  1835   002938  0012               	return		;funcret
  1836   00293A                     __end_of_loop:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _show_line2 *****************
  1840 ;; Defined at:
  1841 ;;		line 336 in file "Interrupt.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1855 ;;      Params:         0       0       0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 21
  1862 ;; This function calls:
  1863 ;;		_lcd_cmd
  1864 ;;		_lcd_str
  1865 ;;		_sprintf
  1866 ;; This function is called by:
  1867 ;;		_loop
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text10
  1872   00275A                     __ptext10:
  1873                           	callstack 0
  1874   00275A                     _show_line2:
  1875                           	callstack 8
  1876   00275A                     
  1877                           ;Interrupt.c: 338:     static uint8_t old_latd = 0;;Interrupt.c: 339:     old_latd = LAT
      +                          D;
  1878   00275A  CF8C F0E6          	movff	3980,show_line2@old_latd	;volatile
  1879   00275E                     
  1880                           ;Interrupt.c: 340:     lcd_cmd(0xC0);
  1881   00275E  0EC0               	movlw	192
  1882   002760  EC04  F015         	call	_lcd_cmd
  1883   002764                     
  1884                           ;Interrupt.c: 341:     sprintf(buffer, "     %2.2d:%2.2d", mostra_minuto, mostra_segundo
      +                          );
  1885   002764  0E70               	movlw	low _buffer
  1886   002766  0101               	movlb	1	; () banked
  1887   002768  6F7C               	movwf	sprintf@s& (0+255),b
  1888   00276A  0E01               	movlw	high _buffer
  1889   00276C  6F7D               	movwf	(sprintf@s+1)& (0+255),b
  1890   00276E  0E17               	movlw	low STR_2
  1891   002770  6F7E               	movwf	sprintf@fmt& (0+255),b
  1892   002772  0E06               	movlw	high STR_2
  1893   002774  6F7F               	movwf	(sprintf@fmt+1)& (0+255),b
  1894   002776  C079  F180         	movff	_mostra_minuto,?_sprintf+4
  1895   00277A  6B81               	clrf	(?_sprintf+5)& (0+255),b
  1896   00277C  C078  F182         	movff	_mostra_segundo,?_sprintf+6
  1897   002780  6B83               	clrf	(?_sprintf+7)& (0+255),b
  1898   002782  EC36  F012         	call	_sprintf	;wreg free
  1899   002786                     
  1900                           ;Interrupt.c: 342:     lcd_str(buffer);
  1901   002786  0E70               	movlw	low _buffer
  1902   002788  0100               	movlb	0	; () banked
  1903   00278A  6F8C               	movwf	lcd_str@str& (0+255),b
  1904   00278C  0E01               	movlw	high _buffer
  1905   00278E  6F8D               	movwf	(lcd_str@str+1)& (0+255),b
  1906   002790  EC0D  F014         	call	_lcd_str	;wreg free
  1907   002794                     
  1908                           ;Interrupt.c: 343:     LATD = old_latd;
  1909   002794  C0E6  FF8C         	movff	show_line2@old_latd,3980	;volatile
  1910   002798  0012               	return		;funcret
  1911   00279A                     __end_of_show_line2:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _sprintf *****************
  1915 ;; Defined at:
  1916 ;;		line 9 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/nf_sprintf.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  s               2    2[BANK1 ] PTR unsigned char 
  1919 ;;		 -> buffer(10), 
  1920 ;;  fmt             2    4[BANK1 ] PTR const unsigned char 
  1921 ;;		 -> STR_2(17), STR_1(22), 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  f              11   12[BANK1 ] struct _IO_FILE
  1924 ;;  ap              2   10[BANK1 ] PTR void [1]
  1925 ;;		 -> ?_sprintf(2), 
  1926 ;;  ret             2    0        int 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  2    2[BANK1 ] int 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1936 ;;      Params:         0       0       8       0       0       0       0
  1937 ;;      Locals:         0       0      13       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0
  1939 ;;      Totals:         0       0      21       0       0       0       0
  1940 ;;Total ram usage:       21 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 20
  1943 ;; This function calls:
  1944 ;;		_vfprintf
  1945 ;; This function is called by:
  1946 ;;		_show_line2
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text11
  1951   00246C                     __ptext11:
  1952                           	callstack 0
  1953   00246C                     _sprintf:
  1954                           	callstack 8
  1955   00246C  0E80               	movlw	low (?_sprintf+4)
  1956   00246E  0101               	movlb	1	; () banked
  1957   002470  6F84               	movwf	sprintf@ap& (0+255),b
  1958   002472  0E01               	movlw	high (?_sprintf+4)
  1959   002474  6F85               	movwf	(sprintf@ap+1)& (0+255),b
  1960   002476  C17C  F186         	movff	sprintf@s,sprintf@f
  1961   00247A  C17D  F187         	movff	sprintf@s+1,sprintf@f+1
  1962   00247E                     
  1963                           ; BSR set to: 1
  1964   00247E  0E00               	movlw	0
  1965   002480  6F8A               	movwf	(sprintf@f+4)& (0+255),b
  1966   002482  0E00               	movlw	0
  1967   002484  6F89               	movwf	(sprintf@f+3)& (0+255),b
  1968   002486                     
  1969                           ; BSR set to: 1
  1970   002486  0E00               	movlw	0
  1971   002488  6F90               	movwf	(sprintf@f+10)& (0+255),b
  1972   00248A  0E00               	movlw	0
  1973   00248C  6F8F               	movwf	(sprintf@f+9)& (0+255),b
  1974   00248E                     
  1975                           ; BSR set to: 1
  1976   00248E  0E86               	movlw	low sprintf@f
  1977   002490  0100               	movlb	0	; () banked
  1978   002492  6FDB               	movwf	vfprintf@fp& (0+255),b
  1979   002494  0E01               	movlw	high sprintf@f
  1980   002496  6FDC               	movwf	(vfprintf@fp+1)& (0+255),b
  1981   002498  C17E  F0DD         	movff	sprintf@fmt,vfprintf@fmt
  1982   00249C  C17F  F0DE         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1983   0024A0  0E84               	movlw	low sprintf@ap
  1984   0024A2  6FDF               	movwf	vfprintf@ap& (0+255),b
  1985   0024A4  0E01               	movlw	high sprintf@ap
  1986   0024A6  6FE0               	movwf	(vfprintf@ap+1)& (0+255),b
  1987   0024A8  EC60  F012         	call	_vfprintf	;wreg free
  1988   0024AC  0101               	movlb	1	; () banked
  1989   0024AE  5189               	movf	(sprintf@f+3)& (0+255),w,b
  1990   0024B0  257C               	addwf	sprintf@s& (0+255),w,b
  1991   0024B2  6ED9               	movwf	fsr2l,c
  1992   0024B4  518A               	movf	(sprintf@f+4)& (0+255),w,b
  1993   0024B6  217D               	addwfc	(sprintf@s+1)& (0+255),w,b
  1994   0024B8  6EDA               	movwf	fsr2h,c
  1995   0024BA  0E00               	movlw	0
  1996   0024BC  6EDF               	movwf	indf2,c
  1997   0024BE                     
  1998                           ; BSR set to: 1
  1999   0024BE  0012               	return		;funcret
  2000   0024C0                     __end_of_sprintf:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _vfprintf *****************
  2004 ;; Defined at:
  2005 ;;		line 1520 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  fp              2   91[BANK0 ] PTR struct _IO_FILE
  2008 ;;		 -> sprintf@f(11), 
  2009 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  2010 ;;		 -> STR_2(17), STR_1(22), 
  2011 ;;  ap              2   95[BANK0 ] PTR PTR void 
  2012 ;;		 -> sprintf@ap(2), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  2015 ;;		 -> STR_2(17), STR_1(22), 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  2   91[BANK0 ] int 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2025 ;;      Params:         0       6       0       0       0       0       0
  2026 ;;      Locals:         0       0       2       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0       0       0
  2028 ;;      Totals:         0       6       2       0       0       0       0
  2029 ;;Total ram usage:        8 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 19
  2032 ;; This function calls:
  2033 ;;		_vfpfcnvrt
  2034 ;; This function is called by:
  2035 ;;		_sprintf
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text12
  2040   0024C0                     __ptext12:
  2041                           	callstack 0
  2042   0024C0                     _vfprintf:
  2043                           	callstack 8
  2044   0024C0                     
  2045                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1520: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1
      +                          521: {;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1523:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1525:     cfmt = (char *)fmt;
  2046   0024C0  C0DD  F17A         	movff	vfprintf@fmt,vfprintf@cfmt
  2047   0024C4  C0DE  F17B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2048                           
  2049                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1529:     while (*cfmt) {
  2050   0024C8  EF75  F012         	goto	l4376
  2051   0024CC                     l4374:
  2052                           
  2053                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  2054   0024CC  C0DB  F0C8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2055   0024D0  C0DC  F0C9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2056   0024D4  0E7A               	movlw	low vfprintf@cfmt
  2057   0024D6  0100               	movlb	0	; () banked
  2058   0024D8  6FCA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2059   0024DA  0E01               	movlw	high vfprintf@cfmt
  2060   0024DC  6FCB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2061   0024DE  C0DF  F0CC         	movff	vfprintf@ap,vfpfcnvrt@ap
  2062   0024E2  C0E0  F0CD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2063   0024E6  EC15  F003         	call	_vfpfcnvrt	;wreg free
  2064   0024EA                     l4376:
  2065                           
  2066                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1529:     while (*cfmt) {
  2067   0024EA  C17A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2068   0024EE  C17B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2069   0024F2                     	if	0	;tblptru may be non-zero
  2070   0024F2                     	endif
  2071   0024F2                     	if	0	;tblptru may be non-zero
  2072   0024F2                     	endif
  2073   0024F2  0008               	tblrd		*
  2074   0024F4  50F5               	movf	tablat,w,c
  2075   0024F6  0900               	iorlw	0
  2076   0024F8  A4D8               	btfss	status,2,c
  2077   0024FA  EF81  F012         	goto	u4081
  2078   0024FE  EF83  F012         	goto	u4080
  2079   002502                     u4081:
  2080   002502  EF66  F012         	goto	l4374
  2081   002506                     u4080:
  2082   002506                     
  2083                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1538:  return 0;
  2084   002506  0E00               	movlw	0
  2085   002508  0100               	movlb	0	; () banked
  2086   00250A  6FDC               	movwf	(?_vfprintf+1)& (0+255),b
  2087   00250C  0E00               	movlw	0
  2088   00250E  6FDB               	movwf	?_vfprintf& (0+255),b
  2089   002510                     
  2090                           ; BSR set to: 0
  2091   002510  0012               	return		;funcret
  2092   002512                     __end_of_vfprintf:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _vfpfcnvrt *****************
  2096 ;; Defined at:
  2097 ;;		line 1007 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2100 ;;		 -> sprintf@f(11), 
  2101 ;;  fmt             2   74[BANK0 ] PTR PTR unsigned char 
  2102 ;;		 -> vfprintf@cfmt(2), 
  2103 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2104 ;;		 -> sprintf@ap(2), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  convarg         8   81[BANK0 ] struct .
  2107 ;;  cp              2   89[BANK0 ] PTR unsigned char 
  2108 ;;		 -> STR_2(17), STR_1(22), 
  2109 ;;  i               2    0        int 
  2110 ;;  done            2    0        int 
  2111 ;;  c               1    0        unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2121 ;;      Params:         0       6       0       0       0       0       0
  2122 ;;      Locals:         0      10       0       0       0       0       0
  2123 ;;      Temps:          0       3       0       0       0       0       0
  2124 ;;      Totals:         0      19       0       0       0       0       0
  2125 ;;Total ram usage:       19 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 18
  2128 ;; This function calls:
  2129 ;;		_atoi
  2130 ;;		_dtoa
  2131 ;;		_fputc
  2132 ;;		_isdigit
  2133 ;; This function is called by:
  2134 ;;		_vfprintf
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text13
  2139   00062A                     __ptext13:
  2140                           	callstack 0
  2141   00062A                     _vfpfcnvrt:
  2142                           	callstack 8
  2143   00062A                     
  2144                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1007: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1008: {;
      +                          /opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1009:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1010:     int done, i;;/opt/microchip
      +                          /xc8/v2.40/pic/sources/c99/common/doprnt.c: 1016:  } convarg;;/opt/microchip/xc8/v2.40/p
      +                          ic/sources/c99/common/doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2145   00062A  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2146   00062E  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2147   000632  CFDE FFF6          	movff	postinc2,tblptrl
  2148   000636  CFDD FFF7          	movff	postdec2,tblptrh
  2149   00063A                     	if	0	;tblptru may be non-zero
  2150   00063A                     	endif
  2151   00063A                     	if	0	;tblptru may be non-zero
  2152   00063A                     	endif
  2153   00063A  0008               	tblrd		*
  2154   00063C  50F5               	movf	tablat,w,c
  2155   00063E  0A25               	xorlw	37
  2156   000640  A4D8               	btfss	status,2,c
  2157   000642  EF25  F003         	goto	u3991
  2158   000646  EF27  F003         	goto	u3990
  2159   00064A                     u3991:
  2160   00064A  EF96  F004         	goto	l4348
  2161   00064E                     u3990:
  2162   00064E                     
  2163                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1020:         ++*fmt;
  2164   00064E  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2165   000652  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2166   000656  2ADE               	incf	postinc2,f,c
  2167   000658  0E00               	movlw	0
  2168   00065A  22DD               	addwfc	postdec2,f,c
  2169   00065C                     
  2170                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1022:         flags = width =
      +                           0;
  2171   00065C  0E00               	movlw	0
  2172   00065E  0100               	movlb	0	; () banked
  2173   000660  6FE2               	movwf	(_width+1)& (0+255),b
  2174   000662  0E00               	movlw	0
  2175   000664  6FE1               	movwf	_width& (0+255),b
  2176   000666  C0E1  F0E5         	movff	_width,_flags
  2177   00066A                     
  2178                           ; BSR set to: 0
  2179                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1023:         prec = -1;
  2180   00066A  69E3               	setf	_prec& (0+255),b
  2181   00066C  69E4               	setf	(_prec+1)& (0+255),b
  2182   00066E                     
  2183                           ; BSR set to: 0
  2184                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1074:         if ((*fmt)[0] =
      +                          = '*') {
  2185   00066E  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186   000672  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187   000676  CFDE FFF6          	movff	postinc2,tblptrl
  2188   00067A  CFDD FFF7          	movff	postdec2,tblptrh
  2189   00067E                     	if	0	;tblptru may be non-zero
  2190   00067E                     	endif
  2191   00067E                     	if	0	;tblptru may be non-zero
  2192   00067E                     	endif
  2193   00067E  0008               	tblrd		*
  2194   000680  50F5               	movf	tablat,w,c
  2195   000682  0A2A               	xorlw	42
  2196   000684  A4D8               	btfss	status,2,c
  2197   000686  EF47  F003         	goto	u4001
  2198   00068A  EF49  F003         	goto	u4000
  2199   00068E                     u4001:
  2200   00068E  EF72  F003         	goto	l4306
  2201   000692                     u4000:
  2202   000692                     
  2203                           ; BSR set to: 0
  2204                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1075:             ++*fmt;
  2205   000692  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2206   000696  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2207   00069A  2ADE               	incf	postinc2,f,c
  2208   00069C  0E00               	movlw	0
  2209   00069E  22DD               	addwfc	postdec2,f,c
  2210                           
  2211                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1076:             width = (*(
      +                          int *)__va_arg(*(int **)ap, (int)0));
  2212   0006A0  C0CC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2213   0006A4  C0CD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2214   0006A8  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  2215   0006AC  0E02               	movlw	2
  2216   0006AE  26DE               	addwf	postinc2,f,c
  2217   0006B0  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  2218   0006B4  0E00               	movlw	0
  2219   0006B6  22DD               	addwfc	postdec2,f,c
  2220   0006B8  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2221   0006BC  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2222   0006C0  CFDE F0E1          	movff	postinc2,_width
  2223   0006C4  CFDD F0E2          	movff	postdec2,_width+1
  2224   0006C8                     
  2225                           ; BSR set to: 0
  2226                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1077:             if (width <
      +                           0) {
  2227   0006C8  BFE2               	btfsc	(_width+1)& (0+255),7,b
  2228   0006CA  EF6B  F003         	goto	u4010
  2229   0006CE  EF69  F003         	goto	u4011
  2230   0006D2                     u4011:
  2231   0006D2  EFA6  F003         	goto	l4314
  2232   0006D6                     u4010:
  2233   0006D6                     
  2234                           ; BSR set to: 0
  2235                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1078:                 flags |
      +                          = (1 << 0);
  2236   0006D6  81E5               	bsf	_flags& (0+255),0,b
  2237                           
  2238                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1079:                 width =
      +                           -width;
  2239   0006D8  6DE1               	negf	_width& (0+255),b
  2240   0006DA  1FE2               	comf	(_width+1)& (0+255),f,b
  2241   0006DC  B0D8               	btfsc	status,0,c
  2242   0006DE  2BE2               	incf	(_width+1)& (0+255),f,b
  2243   0006E0  EFA6  F003         	goto	l4314
  2244   0006E4                     l4306:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1082:             width = ato
      +                          i(*fmt);
  2248   0006E4  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2249   0006E8  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2250   0006EC  CFDE F090          	movff	postinc2,atoi@s
  2251   0006F0  CFDD F091          	movff	postdec2,atoi@s+1
  2252   0006F4  ECAF  F00B         	call	_atoi	;wreg free
  2253   0006F8  C090  F0E1         	movff	?_atoi,_width
  2254   0006FC  C091  F0E2         	movff	?_atoi+1,_width+1
  2255                           
  2256                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1083:             while ((0 &
      +                          & isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2257   000700  EF89  F003         	goto	l4312
  2258   000704                     l4308:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1084:                 ++*fmt;
  2262   000704  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2263   000708  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2264   00070C  2ADE               	incf	postinc2,f,c
  2265   00070E  0E00               	movlw	0
  2266   000710  22DD               	addwfc	postdec2,f,c
  2267   000712                     l4312:
  2268   000712  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2269   000716  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2270   00071A  CFDE FFF6          	movff	postinc2,tblptrl
  2271   00071E  CFDD FFF7          	movff	postdec2,tblptrh
  2272   000722                     	if	0	;tblptru may be non-zero
  2273   000722                     	endif
  2274   000722                     	if	0	;tblptru may be non-zero
  2275   000722                     	endif
  2276   000722  0008               	tblrd		*
  2277   000724  CFF5 F0CE          	movff	tablat,??_vfpfcnvrt
  2278   000728  0ED0               	movlw	208
  2279   00072A  0100               	movlb	0	; () banked
  2280   00072C  25CE               	addwf	??_vfpfcnvrt& (0+255),w,b
  2281   00072E  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2282   000730  6BD0               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  2283   000732  0EFF               	movlw	255
  2284   000734  23D0               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  2285   000736  51D0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2286   000738  E109               	bnz	u4020
  2287   00073A  0E0A               	movlw	10
  2288   00073C  5DCF               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  2289   00073E  A0D8               	btfss	status,0,c
  2290   000740  EFA4  F003         	goto	u4021
  2291   000744  EFA6  F003         	goto	u4020
  2292   000748                     u4021:
  2293   000748  EF82  F003         	goto	l4308
  2294   00074C                     u4020:
  2295   00074C                     l4314:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1091:         if ((*fmt)[0] =
      +                          = '.') {
  2299   00074C  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2300   000750  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2301   000754  CFDE FFF6          	movff	postinc2,tblptrl
  2302   000758  CFDD FFF7          	movff	postdec2,tblptrh
  2303   00075C                     	if	0	;tblptru may be non-zero
  2304   00075C                     	endif
  2305   00075C                     	if	0	;tblptru may be non-zero
  2306   00075C                     	endif
  2307   00075C  0008               	tblrd		*
  2308   00075E  50F5               	movf	tablat,w,c
  2309   000760  0A2E               	xorlw	46
  2310   000762  A4D8               	btfss	status,2,c
  2311   000764  EFB6  F003         	goto	u4031
  2312   000768  EFB8  F003         	goto	u4030
  2313   00076C                     u4031:
  2314   00076C  EF26  F004         	goto	l4332
  2315   000770                     u4030:
  2316   000770                     
  2317                           ; BSR set to: 0
  2318                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1092:             prec = 0;
  2319   000770  0E00               	movlw	0
  2320   000772  6FE4               	movwf	(_prec+1)& (0+255),b
  2321   000774  0E00               	movlw	0
  2322   000776  6FE3               	movwf	_prec& (0+255),b
  2323   000778                     
  2324                           ; BSR set to: 0
  2325                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1093:             ++*fmt;
  2326   000778  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2327   00077C  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2328   000780  2ADE               	incf	postinc2,f,c
  2329   000782  0E00               	movlw	0
  2330   000784  22DD               	addwfc	postdec2,f,c
  2331   000786                     
  2332                           ; BSR set to: 0
  2333                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1094:             if ((*fmt)[
      +                          0] == '*') {
  2334   000786  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2335   00078A  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2336   00078E  CFDE FFF6          	movff	postinc2,tblptrl
  2337   000792  CFDD FFF7          	movff	postdec2,tblptrh
  2338   000796                     	if	0	;tblptru may be non-zero
  2339   000796                     	endif
  2340   000796                     	if	0	;tblptru may be non-zero
  2341   000796                     	endif
  2342   000796  0008               	tblrd		*
  2343   000798  50F5               	movf	tablat,w,c
  2344   00079A  0A2A               	xorlw	42
  2345   00079C  A4D8               	btfss	status,2,c
  2346   00079E  EFD3  F003         	goto	u4041
  2347   0007A2  EFD5  F003         	goto	u4040
  2348   0007A6                     u4041:
  2349   0007A6  EFF2  F003         	goto	l4324
  2350   0007AA                     u4040:
  2351   0007AA                     
  2352                           ; BSR set to: 0
  2353                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1095:                 ++*fmt;
  2354   0007AA  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2355   0007AE  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2356   0007B2  2ADE               	incf	postinc2,f,c
  2357   0007B4  0E00               	movlw	0
  2358   0007B6  22DD               	addwfc	postdec2,f,c
  2359                           
  2360                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1096:                 prec = 
      +                          (*(int *)__va_arg(*(int **)ap, (int)0));
  2361   0007B8  C0CC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2362   0007BC  C0CD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2363   0007C0  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  2364   0007C4  0E02               	movlw	2
  2365   0007C6  26DE               	addwf	postinc2,f,c
  2366   0007C8  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  2367   0007CC  0E00               	movlw	0
  2368   0007CE  22DD               	addwfc	postdec2,f,c
  2369   0007D0  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2370   0007D4  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2371   0007D8  CFDE F0E3          	movff	postinc2,_prec
  2372   0007DC  CFDD F0E4          	movff	postdec2,_prec+1
  2373                           
  2374                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1097:             } else {
  2375   0007E0  EF26  F004         	goto	l4332
  2376   0007E4                     l4324:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1098:                 prec = 
      +                          atoi(*fmt);
  2380   0007E4  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2381   0007E8  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2382   0007EC  CFDE F090          	movff	postinc2,atoi@s
  2383   0007F0  CFDD F091          	movff	postdec2,atoi@s+1
  2384   0007F4  ECAF  F00B         	call	_atoi	;wreg free
  2385   0007F8  C090  F0E3         	movff	?_atoi,_prec
  2386   0007FC  C091  F0E4         	movff	?_atoi+1,_prec+1
  2387                           
  2388                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1099:                 while (
      +                          (0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2389   000800  EF09  F004         	goto	l4330
  2390   000804                     l4326:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1100:                     ++*
      +                          fmt;
  2394   000804  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2395   000808  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2396   00080C  2ADE               	incf	postinc2,f,c
  2397   00080E  0E00               	movlw	0
  2398   000810  22DD               	addwfc	postdec2,f,c
  2399   000812                     l4330:
  2400   000812  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2401   000816  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2402   00081A  CFDE FFF6          	movff	postinc2,tblptrl
  2403   00081E  CFDD FFF7          	movff	postdec2,tblptrh
  2404   000822                     	if	0	;tblptru may be non-zero
  2405   000822                     	endif
  2406   000822                     	if	0	;tblptru may be non-zero
  2407   000822                     	endif
  2408   000822  0008               	tblrd		*
  2409   000824  CFF5 F0CE          	movff	tablat,??_vfpfcnvrt
  2410   000828  0ED0               	movlw	208
  2411   00082A  0100               	movlb	0	; () banked
  2412   00082C  25CE               	addwf	??_vfpfcnvrt& (0+255),w,b
  2413   00082E  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2414   000830  6BD0               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  2415   000832  0EFF               	movlw	255
  2416   000834  23D0               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  2417   000836  51D0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2418   000838  E109               	bnz	u4050
  2419   00083A  0E0A               	movlw	10
  2420   00083C  5DCF               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  2421   00083E  A0D8               	btfss	status,0,c
  2422   000840  EF24  F004         	goto	u4051
  2423   000844  EF26  F004         	goto	u4050
  2424   000848                     u4051:
  2425   000848  EF02  F004         	goto	l4326
  2426   00084C                     u4050:
  2427   00084C                     l4332:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1117:   cp = *fmt;
  2431   00084C  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432   000850  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433   000854  CFDE F0D9          	movff	postinc2,vfpfcnvrt@cp
  2434   000858  CFDD F0DA          	movff	postdec2,vfpfcnvrt@cp+1
  2435   00085C                     
  2436                           ; BSR set to: 0
  2437                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1187:   if (*cp == 'd' || *cp
      +                           == 'i') {
  2438   00085C  C0D9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2439   000860  C0DA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2440   000864                     	if	0	;tblptru may be non-zero
  2441   000864                     	endif
  2442   000864                     	if	0	;tblptru may be non-zero
  2443   000864                     	endif
  2444   000864  0008               	tblrd		*
  2445   000866  50F5               	movf	tablat,w,c
  2446   000868  0A64               	xorlw	100
  2447   00086A  B4D8               	btfsc	status,2,c
  2448   00086C  EF3A  F004         	goto	u4061
  2449   000870  EF3C  F004         	goto	u4060
  2450   000874                     u4061:
  2451   000874  EF4A  F004         	goto	l4338
  2452   000878                     u4060:
  2453   000878                     
  2454                           ; BSR set to: 0
  2455   000878  C0D9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2456   00087C  C0DA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2457   000880                     	if	0	;tblptru may be non-zero
  2458   000880                     	endif
  2459   000880                     	if	0	;tblptru may be non-zero
  2460   000880                     	endif
  2461   000880  0008               	tblrd		*
  2462   000882  50F5               	movf	tablat,w,c
  2463   000884  0A69               	xorlw	105
  2464   000886  A4D8               	btfss	status,2,c
  2465   000888  EF48  F004         	goto	u4071
  2466   00088C  EF4A  F004         	goto	u4070
  2467   000890                     u4071:
  2468   000890  EF8D  F004         	goto	l4344
  2469   000894                     u4070:
  2470   000894                     l4338:
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1230:    convarg.ll = (long l
      +                          ong)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2474   000894  C0CC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2475   000898  C0CD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2476   00089C  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  2477   0008A0  0E02               	movlw	2
  2478   0008A2  26DE               	addwf	postinc2,f,c
  2479   0008A4  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  2480   0008A8  0E00               	movlw	0
  2481   0008AA  22DD               	addwfc	postdec2,f,c
  2482   0008AC  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2483   0008B0  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2484   0008B4  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg
  2485   0008B8  CFDD F0D2          	movff	postdec2,vfpfcnvrt@convarg+1
  2486   0008BC  0E00               	movlw	0
  2487   0008BE  BFD2               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2488   0008C0  0EFF               	movlw	-1
  2489   0008C2  6FD3               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2490   0008C4  6FD4               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2491   0008C6  6FD5               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2492   0008C8  6FD6               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2493   0008CA  6FD7               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2494   0008CC  6FD8               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2495                           
  2496                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1232:    *fmt = cp+1;
  2497   0008CE  0E01               	movlw	1
  2498   0008D0  25D9               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2499   0008D2  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  2500   0008D4  0E00               	movlw	0
  2501   0008D6  21DA               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2502   0008D8  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2503   0008DA  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2504   0008DE  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2505   0008E2  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  2506   0008E6  C0CF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2507   0008EA                     
  2508                           ; BSR set to: 0
  2509                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1233:    return (void) dtoa(f
      +                          p, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2510   0008EA  C0C8  F0A5         	movff	vfpfcnvrt@fp,dtoa@fp
  2511   0008EE  C0C9  F0A6         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2512   0008F2  C0D1  F0A7         	movff	vfpfcnvrt@convarg,dtoa@d
  2513   0008F6  C0D2  F0A8         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2514   0008FA  C0D3  F0A9         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2515   0008FE  C0D4  F0AA         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2516   000902  C0D5  F0AB         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2517   000906  C0D6  F0AC         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2518   00090A  C0D7  F0AD         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2519   00090E  C0D8  F0AE         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2520   000912  EC41  F006         	call	_dtoa	;wreg free
  2521   000916  EFAB  F004         	goto	l1235
  2522   00091A                     l4344:
  2523                           
  2524                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1509:         ++*fmt;
  2525   00091A  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2526   00091E  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2527   000922  2ADE               	incf	postinc2,f,c
  2528   000924  0E00               	movlw	0
  2529   000926  22DD               	addwfc	postdec2,f,c
  2530   000928  EFAB  F004         	goto	l1235
  2531   00092C                     l4348:
  2532                           
  2533                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1514:     fputc((int)(*fmt)[0
      +                          ], fp);
  2534   00092C  C0CA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535   000930  C0CB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536   000934  CFDE FFF6          	movff	postinc2,tblptrl
  2537   000938  CFDD FFF7          	movff	postdec2,tblptrh
  2538   00093C                     	if	0	;tblptru may be non-zero
  2539   00093C                     	endif
  2540   00093C                     	if	0	;tblptru may be non-zero
  2541   00093C                     	endif
  2542   00093C  0008               	tblrd		*
  2543   00093E  50F5               	movf	tablat,w,c
  2544   000940  0100               	movlb	0	; () banked
  2545   000942  6F8A               	movwf	fputc@c& (0+255),b
  2546   000944  6B8B               	clrf	(fputc@c+1)& (0+255),b
  2547   000946  C0C8  F08C         	movff	vfpfcnvrt@fp,fputc@fp
  2548   00094A  C0C9  F08D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2549   00094E  ECA1  F00E         	call	_fputc	;wreg free
  2550   000952  EF8D  F004         	goto	l4344
  2551   000956                     l1235:
  2552   000956  0012               	return		;funcret
  2553   000958                     __end_of_vfpfcnvrt:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _dtoa *****************
  2557 ;; Defined at:
  2558 ;;		line 443 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  2561 ;;		 -> sprintf@f(11), 
  2562 ;;  d               8   39[BANK0 ] long long 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  n               8   61[BANK0 ] long long 
  2565 ;;  i               2   70[BANK0 ] int 
  2566 ;;  w               2   59[BANK0 ] int 
  2567 ;;  p               2   57[BANK0 ] int 
  2568 ;;  s               1   69[BANK0 ] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         0      10       0       0       0       0       0
  2579 ;;      Locals:         0      17       0       0       0       0       0
  2580 ;;      Temps:          0       8       0       0       0       0       0
  2581 ;;      Totals:         0      35       0       0       0       0       0
  2582 ;;Total ram usage:       35 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 17
  2585 ;; This function calls:
  2586 ;;		___aodiv
  2587 ;;		___aomod
  2588 ;;		_abs
  2589 ;;		_pad
  2590 ;; This function is called by:
  2591 ;;		_vfpfcnvrt
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text14
  2596   000C82                     __ptext14:
  2597                           	callstack 0
  2598   000C82                     _dtoa:
  2599                           	callstack 8
  2600   000C82                     
  2601                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 443: static void dtoa(FILE *f
      +                          p, long long d);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 444: {;/opt/mi
      +                          crochip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 445:  char s;;/opt/microchip/xc8/v2.4
      +                          0/pic/sources/c99/common/doprnt.c: 446:     int i, p, w;;/opt/microchip/xc8/v2.40/pic/so
      +                          urces/c99/common/doprnt.c: 447:     long long n;;/opt/microchip/xc8/v2.40/pic/sources/c9
      +                          9/common/doprnt.c: 450:     n = d;
  2602   000C82  C0A7  F0BD         	movff	dtoa@d,dtoa@n
  2603   000C86  C0A8  F0BE         	movff	dtoa@d+1,dtoa@n+1
  2604   000C8A  C0A9  F0BF         	movff	dtoa@d+2,dtoa@n+2
  2605   000C8E  C0AA  F0C0         	movff	dtoa@d+3,dtoa@n+3
  2606   000C92  C0AB  F0C1         	movff	dtoa@d+4,dtoa@n+4
  2607   000C96  C0AC  F0C2         	movff	dtoa@d+5,dtoa@n+5
  2608   000C9A  C0AD  F0C3         	movff	dtoa@d+6,dtoa@n+6
  2609   000C9E  C0AE  F0C4         	movff	dtoa@d+7,dtoa@n+7
  2610   000CA2                     
  2611                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 451:     s = n < 0 ? 1 : 0;
  2612   000CA2  0100               	movlb	0	; () banked
  2613   000CA4  BFC4               	btfsc	(dtoa@n+7)& (0+255),7,b
  2614   000CA6  EF57  F006         	goto	u3841
  2615   000CAA  EF5A  F006         	goto	u3840
  2616   000CAE                     u3841:
  2617   000CAE  0E01               	movlw	1
  2618   000CB0  EF5B  F006         	goto	u3850
  2619   000CB4                     u3840:
  2620   000CB4  0E00               	movlw	0
  2621   000CB6                     u3850:
  2622   000CB6  6FC5               	movwf	dtoa@s& (0+255),b
  2623   000CB8                     
  2624                           ; BSR set to: 0
  2625                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 452:     if (s) {
  2626   000CB8  51C5               	movf	dtoa@s& (0+255),w,b
  2627   000CBA  B4D8               	btfsc	status,2,c
  2628   000CBC  EF62  F006         	goto	u3861
  2629   000CC0  EF64  F006         	goto	u3860
  2630   000CC4                     u3861:
  2631   000CC4  EF74  F006         	goto	l4204
  2632   000CC8                     u3860:
  2633   000CC8                     
  2634                           ; BSR set to: 0
  2635                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 453:         n = -n;
  2636   000CC8  1FC4               	comf	(dtoa@n+7)& (0+255),f,b
  2637   000CCA  1FC3               	comf	(dtoa@n+6)& (0+255),f,b
  2638   000CCC  1FC2               	comf	(dtoa@n+5)& (0+255),f,b
  2639   000CCE  1FC1               	comf	(dtoa@n+4)& (0+255),f,b
  2640   000CD0  1FC0               	comf	(dtoa@n+3)& (0+255),f,b
  2641   000CD2  1FBF               	comf	(dtoa@n+2)& (0+255),f,b
  2642   000CD4  1FBE               	comf	(dtoa@n+1)& (0+255),f,b
  2643   000CD6  6DBD               	negf	dtoa@n& (0+255),b
  2644   000CD8  0E00               	movlw	0
  2645   000CDA  23BE               	addwfc	(dtoa@n+1)& (0+255),f,b
  2646   000CDC  23BF               	addwfc	(dtoa@n+2)& (0+255),f,b
  2647   000CDE  23C0               	addwfc	(dtoa@n+3)& (0+255),f,b
  2648   000CE0  23C1               	addwfc	(dtoa@n+4)& (0+255),f,b
  2649   000CE2  23C2               	addwfc	(dtoa@n+5)& (0+255),f,b
  2650   000CE4  23C3               	addwfc	(dtoa@n+6)& (0+255),f,b
  2651   000CE6  23C4               	addwfc	(dtoa@n+7)& (0+255),f,b
  2652   000CE8                     l4204:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 462:     p = (0 < prec) ? pre
      +                          c : 1;
  2656   000CE8  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  2657   000CEA  EF81  F006         	goto	u3870
  2658   000CEE  51E4               	movf	(_prec+1)& (0+255),w,b
  2659   000CF0  E106               	bnz	u3871
  2660   000CF2  05E3               	decf	_prec& (0+255),w,b
  2661   000CF4  B0D8               	btfsc	status,0,c
  2662   000CF6  EF7F  F006         	goto	u3871
  2663   000CFA  EF81  F006         	goto	u3870
  2664   000CFE                     u3871:
  2665   000CFE  EF87  F006         	goto	l1198
  2666   000D02                     u3870:
  2667   000D02                     
  2668                           ; BSR set to: 0
  2669   000D02  0E00               	movlw	0
  2670   000D04  6FBA               	movwf	(dtoa@p+1)& (0+255),b
  2671   000D06  0E01               	movlw	1
  2672   000D08  6FB9               	movwf	dtoa@p& (0+255),b
  2673   000D0A  EF8B  F006         	goto	l1200
  2674   000D0E                     l1198:
  2675                           
  2676                           ; BSR set to: 0
  2677   000D0E  C0E3  F0B9         	movff	_prec,dtoa@p
  2678   000D12  C0E4  F0BA         	movff	_prec+1,dtoa@p+1
  2679   000D16                     l1200:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 463:     w = width;
  2683   000D16  C0E1  F0BB         	movff	_width,dtoa@w
  2684   000D1A  C0E2  F0BC         	movff	_width+1,dtoa@w+1
  2685   000D1E                     
  2686                           ; BSR set to: 0
  2687                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 464:     if (s
  2688   000D1E  51C5               	movf	dtoa@s& (0+255),w,b
  2689   000D20  B4D8               	btfsc	status,2,c
  2690   000D22  EF95  F006         	goto	u3881
  2691   000D26  EF97  F006         	goto	u3880
  2692   000D2A                     u3881:
  2693   000D2A  EFAE  F006         	goto	l1201
  2694   000D2E                     u3880:
  2695   000D2E                     
  2696                           ; BSR set to: 0
  2697                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 468:     ) {;/opt/microchip/x
      +                          c8/v2.40/pic/sources/c99/common/doprnt.c: 469:         --w;
  2698   000D2E  07BB               	decf	dtoa@w& (0+255),f,b
  2699   000D30  A0D8               	btfss	status,0,c
  2700   000D32  07BC               	decf	(dtoa@w+1)& (0+255),f,b
  2701   000D34                     
  2702                           ; BSR set to: 0
  2703                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 470:   s = s ? '-' : '+';
  2704   000D34  51C5               	movf	dtoa@s& (0+255),w,b
  2705   000D36  A4D8               	btfss	status,2,c
  2706   000D38  EFA0  F006         	goto	u3891
  2707   000D3C  EFA2  F006         	goto	u3890
  2708   000D40                     u3891:
  2709   000D40  EFA8  F006         	goto	l4216
  2710   000D44                     u3890:
  2711   000D44                     
  2712                           ; BSR set to: 0
  2713   000D44  0E00               	movlw	0
  2714   000D46  6FB8               	movwf	(_dtoa$953+1)& (0+255),b
  2715   000D48  0E2B               	movlw	43
  2716   000D4A  6FB7               	movwf	_dtoa$953& (0+255),b
  2717   000D4C  EFAC  F006         	goto	l4218
  2718   000D50                     l4216:
  2719                           
  2720                           ; BSR set to: 0
  2721   000D50  0E00               	movlw	0
  2722   000D52  6FB8               	movwf	(_dtoa$953+1)& (0+255),b
  2723   000D54  0E2D               	movlw	45
  2724   000D56  6FB7               	movwf	_dtoa$953& (0+255),b
  2725   000D58                     l4218:
  2726                           
  2727                           ; BSR set to: 0
  2728   000D58  C0B7  F0C5         	movff	_dtoa$953,dtoa@s
  2729   000D5C                     l1201:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 480:     i = sizeof(dbuf) - 1
      +                          ;
  2733   000D5C  0E00               	movlw	0
  2734   000D5E  6FC7               	movwf	(dtoa@i+1)& (0+255),b
  2735   000D60  0E1F               	movlw	31
  2736   000D62  6FC6               	movwf	dtoa@i& (0+255),b
  2737   000D64                     
  2738                           ; BSR set to: 0
  2739                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 481:     dbuf[i] = '\0';
  2740   000D64  0E00               	movlw	0
  2741   000D66  0101               	movlb	1	; () banked
  2742   000D68  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2743                           
  2744                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 482:     while (!(i < 1) && (
      +                          n || (0 < p)
  2745   000D6A  EF34  F007         	goto	l4232
  2746   000D6E                     l4222:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 486:     )) {;/opt/microchip/
      +                          xc8/v2.40/pic/sources/c99/common/doprnt.c: 487:         --i;
  2750   000D6E  07C6               	decf	dtoa@i& (0+255),f,b
  2751   000D70  A0D8               	btfss	status,0,c
  2752   000D72  07C7               	decf	(dtoa@i+1)& (0+255),f,b
  2753   000D74                     
  2754                           ; BSR set to: 0
  2755                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 488:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  2756   000D74  0E50               	movlw	low _dbuf
  2757   000D76  25C6               	addwf	dtoa@i& (0+255),w,b
  2758   000D78  6ED9               	movwf	fsr2l,c
  2759   000D7A  0E01               	movlw	high _dbuf
  2760   000D7C  21C7               	addwfc	(dtoa@i+1)& (0+255),w,b
  2761   000D7E  6EDA               	movwf	fsr2h,c
  2762   000D80  C0BD  F08A         	movff	dtoa@n,___aomod@dividend
  2763   000D84  C0BE  F08B         	movff	dtoa@n+1,___aomod@dividend+1
  2764   000D88  C0BF  F08C         	movff	dtoa@n+2,___aomod@dividend+2
  2765   000D8C  C0C0  F08D         	movff	dtoa@n+3,___aomod@dividend+3
  2766   000D90  C0C1  F08E         	movff	dtoa@n+4,___aomod@dividend+4
  2767   000D94  C0C2  F08F         	movff	dtoa@n+5,___aomod@dividend+5
  2768   000D98  C0C3  F090         	movff	dtoa@n+6,___aomod@dividend+6
  2769   000D9C  C0C4  F091         	movff	dtoa@n+7,___aomod@dividend+7
  2770   000DA0  0E0A               	movlw	10
  2771   000DA2  6F92               	movwf	___aomod@divisor& (0+255),b
  2772   000DA4  0E00               	movlw	0
  2773   000DA6  6F93               	movwf	(___aomod@divisor+1)& (0+255),b
  2774   000DA8  0E00               	movlw	0
  2775   000DAA  6F94               	movwf	(___aomod@divisor+2)& (0+255),b
  2776   000DAC  0E00               	movlw	0
  2777   000DAE  6F95               	movwf	(___aomod@divisor+3)& (0+255),b
  2778   000DB0  0E00               	movlw	0
  2779   000DB2  6F96               	movwf	(___aomod@divisor+4)& (0+255),b
  2780   000DB4  0E00               	movlw	0
  2781   000DB6  6F97               	movwf	(___aomod@divisor+5)& (0+255),b
  2782   000DB8  0E00               	movlw	0
  2783   000DBA  6F98               	movwf	(___aomod@divisor+6)& (0+255),b
  2784   000DBC  0E00               	movlw	0
  2785   000DBE  6F99               	movwf	(___aomod@divisor+7)& (0+255),b
  2786   000DC0  EC4A  F00A         	call	___aomod	;wreg free
  2787   000DC4  C08A  F0AF         	movff	?___aomod,??_dtoa
  2788   000DC8  C08B  F0B0         	movff	?___aomod+1,??_dtoa+1
  2789   000DCC  C08C  F0B1         	movff	?___aomod+2,??_dtoa+2
  2790   000DD0  C08D  F0B2         	movff	?___aomod+3,??_dtoa+3
  2791   000DD4  C08E  F0B3         	movff	?___aomod+4,??_dtoa+4
  2792   000DD8  C08F  F0B4         	movff	?___aomod+5,??_dtoa+5
  2793   000DDC  C090  F0B5         	movff	?___aomod+6,??_dtoa+6
  2794   000DE0  C091  F0B6         	movff	?___aomod+7,??_dtoa+7
  2795   000DE4  C0AF  F09C         	movff	??_dtoa,abs@a
  2796   000DE8  C0B0  F09D         	movff	??_dtoa+1,abs@a+1
  2797   000DEC  EC8C  F013         	call	_abs	;wreg free
  2798   000DF0  0100               	movlb	0	; () banked
  2799   000DF2  519C               	movf	?_abs& (0+255),w,b
  2800   000DF4  0F30               	addlw	48
  2801   000DF6  6EDF               	movwf	indf2,c
  2802   000DF8                     
  2803                           ; BSR set to: 0
  2804                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 489:         --p;
  2805   000DF8  07B9               	decf	dtoa@p& (0+255),f,b
  2806   000DFA  A0D8               	btfss	status,0,c
  2807   000DFC  07BA               	decf	(dtoa@p+1)& (0+255),f,b
  2808   000DFE                     
  2809                           ; BSR set to: 0
  2810                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 490:         --w;
  2811   000DFE  07BB               	decf	dtoa@w& (0+255),f,b
  2812   000E00  A0D8               	btfss	status,0,c
  2813   000E02  07BC               	decf	(dtoa@w+1)& (0+255),f,b
  2814   000E04                     
  2815                           ; BSR set to: 0
  2816                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 491:         n = n / 10;
  2817   000E04  C0BD  F08A         	movff	dtoa@n,___aodiv@dividend
  2818   000E08  C0BE  F08B         	movff	dtoa@n+1,___aodiv@dividend+1
  2819   000E0C  C0BF  F08C         	movff	dtoa@n+2,___aodiv@dividend+2
  2820   000E10  C0C0  F08D         	movff	dtoa@n+3,___aodiv@dividend+3
  2821   000E14  C0C1  F08E         	movff	dtoa@n+4,___aodiv@dividend+4
  2822   000E18  C0C2  F08F         	movff	dtoa@n+5,___aodiv@dividend+5
  2823   000E1C  C0C3  F090         	movff	dtoa@n+6,___aodiv@dividend+6
  2824   000E20  C0C4  F091         	movff	dtoa@n+7,___aodiv@dividend+7
  2825   000E24  0E0A               	movlw	10
  2826   000E26  6F92               	movwf	___aodiv@divisor& (0+255),b
  2827   000E28  0E00               	movlw	0
  2828   000E2A  6F93               	movwf	(___aodiv@divisor+1)& (0+255),b
  2829   000E2C  0E00               	movlw	0
  2830   000E2E  6F94               	movwf	(___aodiv@divisor+2)& (0+255),b
  2831   000E30  0E00               	movlw	0
  2832   000E32  6F95               	movwf	(___aodiv@divisor+3)& (0+255),b
  2833   000E34  0E00               	movlw	0
  2834   000E36  6F96               	movwf	(___aodiv@divisor+4)& (0+255),b
  2835   000E38  0E00               	movlw	0
  2836   000E3A  6F97               	movwf	(___aodiv@divisor+5)& (0+255),b
  2837   000E3C  0E00               	movlw	0
  2838   000E3E  6F98               	movwf	(___aodiv@divisor+6)& (0+255),b
  2839   000E40  0E00               	movlw	0
  2840   000E42  6F99               	movwf	(___aodiv@divisor+7)& (0+255),b
  2841   000E44  ECC1  F008         	call	___aodiv	;wreg free
  2842   000E48  C08A  F0BD         	movff	?___aodiv,dtoa@n
  2843   000E4C  C08B  F0BE         	movff	?___aodiv+1,dtoa@n+1
  2844   000E50  C08C  F0BF         	movff	?___aodiv+2,dtoa@n+2
  2845   000E54  C08D  F0C0         	movff	?___aodiv+3,dtoa@n+3
  2846   000E58  C08E  F0C1         	movff	?___aodiv+4,dtoa@n+4
  2847   000E5C  C08F  F0C2         	movff	?___aodiv+5,dtoa@n+5
  2848   000E60  C090  F0C3         	movff	?___aodiv+6,dtoa@n+6
  2849   000E64  C091  F0C4         	movff	?___aodiv+7,dtoa@n+7
  2850   000E68                     l4232:
  2851                           
  2852                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 482:     while (!(i < 1) && (
      +                          n || (0 < p)
  2853   000E68  0100               	movlb	0	; () banked
  2854   000E6A  BFC7               	btfsc	(dtoa@i+1)& (0+255),7,b
  2855   000E6C  EF40  F007         	goto	u3901
  2856   000E70  51C7               	movf	(dtoa@i+1)& (0+255),w,b
  2857   000E72  E108               	bnz	u3900
  2858   000E74  05C6               	decf	dtoa@i& (0+255),w,b
  2859   000E76  A0D8               	btfss	status,0,c
  2860   000E78  EF40  F007         	goto	u3901
  2861   000E7C  EF42  F007         	goto	u3900
  2862   000E80                     u3901:
  2863   000E80  EF5E  F007         	goto	l4238
  2864   000E84                     u3900:
  2865   000E84                     
  2866                           ; BSR set to: 0
  2867   000E84  51BD               	movf	dtoa@n& (0+255),w,b
  2868   000E86  11BE               	iorwf	(dtoa@n+1)& (0+255),w,b
  2869   000E88  11BF               	iorwf	(dtoa@n+2)& (0+255),w,b
  2870   000E8A  11C0               	iorwf	(dtoa@n+3)& (0+255),w,b
  2871   000E8C  11C1               	iorwf	(dtoa@n+4)& (0+255),w,b
  2872   000E8E  11C2               	iorwf	(dtoa@n+5)& (0+255),w,b
  2873   000E90  11C3               	iorwf	(dtoa@n+6)& (0+255),w,b
  2874   000E92  11C4               	iorwf	(dtoa@n+7)& (0+255),w,b
  2875   000E94  A4D8               	btfss	status,2,c
  2876   000E96  EF4F  F007         	goto	u3911
  2877   000E9A  EF51  F007         	goto	u3910
  2878   000E9E                     u3911:
  2879   000E9E  EFB7  F006         	goto	l4222
  2880   000EA2                     u3910:
  2881   000EA2                     
  2882                           ; BSR set to: 0
  2883   000EA2  BFBA               	btfsc	(dtoa@p+1)& (0+255),7,b
  2884   000EA4  EF5E  F007         	goto	u3920
  2885   000EA8  51BA               	movf	(dtoa@p+1)& (0+255),w,b
  2886   000EAA  E106               	bnz	u3921
  2887   000EAC  05B9               	decf	dtoa@p& (0+255),w,b
  2888   000EAE  B0D8               	btfsc	status,0,c
  2889   000EB0  EF5C  F007         	goto	u3921
  2890   000EB4  EF5E  F007         	goto	u3920
  2891   000EB8                     u3921:
  2892   000EB8  EFB7  F006         	goto	l4222
  2893   000EBC                     u3920:
  2894   000EBC                     l4238:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 495:     if (s != 0) {
  2898   000EBC  51C5               	movf	dtoa@s& (0+255),w,b
  2899   000EBE  B4D8               	btfsc	status,2,c
  2900   000EC0  EF64  F007         	goto	u3931
  2901   000EC4  EF66  F007         	goto	u3930
  2902   000EC8                     u3931:
  2903   000EC8  EF71  F007         	goto	l4244
  2904   000ECC                     u3930:
  2905   000ECC                     
  2906                           ; BSR set to: 0
  2907                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 496:         --i;
  2908   000ECC  07C6               	decf	dtoa@i& (0+255),f,b
  2909   000ECE  A0D8               	btfss	status,0,c
  2910   000ED0  07C7               	decf	(dtoa@i+1)& (0+255),f,b
  2911   000ED2                     
  2912                           ; BSR set to: 0
  2913                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 497:         dbuf[i] = s;
  2914   000ED2  0E50               	movlw	low _dbuf
  2915   000ED4  25C6               	addwf	dtoa@i& (0+255),w,b
  2916   000ED6  6ED9               	movwf	fsr2l,c
  2917   000ED8  0E01               	movlw	high _dbuf
  2918   000EDA  21C7               	addwfc	(dtoa@i+1)& (0+255),w,b
  2919   000EDC  6EDA               	movwf	fsr2h,c
  2920   000EDE  C0C5  FFDF         	movff	dtoa@s,indf2
  2921   000EE2                     l4244:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 501:     return (void) pad(fp
      +                          , &dbuf[i], w);
  2925   000EE2  C0A5  F09A         	movff	dtoa@fp,pad@fp
  2926   000EE6  C0A6  F09B         	movff	dtoa@fp+1,pad@fp+1
  2927   000EEA  0E50               	movlw	low _dbuf
  2928   000EEC  25C6               	addwf	dtoa@i& (0+255),w,b
  2929   000EEE  6F9C               	movwf	pad@buf& (0+255),b
  2930   000EF0  0E01               	movlw	high _dbuf
  2931   000EF2  21C7               	addwfc	(dtoa@i+1)& (0+255),w,b
  2932   000EF4  6F9D               	movwf	(pad@buf+1)& (0+255),b
  2933   000EF6  C0BB  F09E         	movff	dtoa@w,pad@p
  2934   000EFA  C0BC  F09F         	movff	dtoa@w+1,pad@p+1
  2935   000EFE  EC84  F010         	call	_pad	;wreg free
  2936   000F02  0012               	return		;funcret
  2937   000F04                     __end_of_dtoa:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _pad *****************
  2941 ;; Defined at:
  2942 ;;		line 133 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2945 ;;		 -> sprintf@f(11), 
  2946 ;;  buf             2   28[BANK0 ] PTR unsigned char 
  2947 ;;		 -> dbuf(32), 
  2948 ;;  p               2   30[BANK0 ] int 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  w               2   35[BANK0 ] int 
  2951 ;;  i               2   33[BANK0 ] int 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2961 ;;      Params:         0       6       0       0       0       0       0
  2962 ;;      Locals:         0       4       0       0       0       0       0
  2963 ;;      Temps:          0       1       0       0       0       0       0
  2964 ;;      Totals:         0      11       0       0       0       0       0
  2965 ;;Total ram usage:       11 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 16
  2968 ;; This function calls:
  2969 ;;		_fputc
  2970 ;;		_fputs
  2971 ;; This function is called by:
  2972 ;;		_dtoa
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text15
  2977   002108                     __ptext15:
  2978                           	callstack 0
  2979   002108                     _pad:
  2980                           	callstack 8
  2981   002108                     
  2982                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 133: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 134: {;/op
      +                          t/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 135:     int i, w;;/opt/microchip
      +                          /xc8/v2.40/pic/sources/c99/common/doprnt.c: 139:     if (flags & (1 << 0)) {
  2983   002108  0100               	movlb	0	; () banked
  2984   00210A  A1E5               	btfss	_flags& (0+255),0,b
  2985   00210C  EF8A  F010         	goto	u3661
  2986   002110  EF8C  F010         	goto	u3660
  2987   002114                     u3661:
  2988   002114  EF96  F010         	goto	l4098
  2989   002118                     u3660:
  2990   002118                     
  2991                           ; BSR set to: 0
  2992                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 140:         fputs((const cha
      +                          r *)buf, fp);
  2993   002118  C09C  F093         	movff	pad@buf,fputs@s
  2994   00211C  C09D  F094         	movff	pad@buf+1,fputs@s+1
  2995   002120  C09A  F095         	movff	pad@fp,fputs@fp
  2996   002124  C09B  F096         	movff	pad@fp+1,fputs@fp+1
  2997   002128  EC00  F013         	call	_fputs	;wreg free
  2998   00212C                     l4098:
  2999                           
  3000                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 145:     w = (p < 0) ? 0 : p;
  3001   00212C  0100               	movlb	0	; () banked
  3002   00212E  BF9F               	btfsc	(pad@p+1)& (0+255),7,b
  3003   002130  EF9C  F010         	goto	u3671
  3004   002134  EF9E  F010         	goto	u3670
  3005   002138                     u3671:
  3006   002138  EFA4  F010         	goto	l4102
  3007   00213C                     u3670:
  3008   00213C                     
  3009                           ; BSR set to: 0
  3010   00213C  C09E  F0A3         	movff	pad@p,pad@w
  3011   002140  C09F  F0A4         	movff	pad@p+1,pad@w+1
  3012   002144  EFA8  F010         	goto	l1188
  3013   002148                     l4102:
  3014                           
  3015                           ; BSR set to: 0
  3016   002148  0E00               	movlw	0
  3017   00214A  6FA4               	movwf	(pad@w+1)& (0+255),b
  3018   00214C  0E00               	movlw	0
  3019   00214E  6FA3               	movwf	pad@w& (0+255),b
  3020   002150                     l1188:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 146:     i = 0;
  3024   002150  0E00               	movlw	0
  3025   002152  6FA2               	movwf	(pad@i+1)& (0+255),b
  3026   002154  0E00               	movlw	0
  3027   002156  6FA1               	movwf	pad@i& (0+255),b
  3028                           
  3029                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 147:     while (i < w) {
  3030   002158  EFBB  F010         	goto	l4108
  3031   00215C                     l4104:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 148:         fputc(' ', fp);
  3035   00215C  0E00               	movlw	0
  3036   00215E  6F8B               	movwf	(fputc@c+1)& (0+255),b
  3037   002160  0E20               	movlw	32
  3038   002162  6F8A               	movwf	fputc@c& (0+255),b
  3039   002164  C09A  F08C         	movff	pad@fp,fputc@fp
  3040   002168  C09B  F08D         	movff	pad@fp+1,fputc@fp+1
  3041   00216C  ECA1  F00E         	call	_fputc	;wreg free
  3042   002170                     
  3043                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 149:         ++i;
  3044   002170  0100               	movlb	0	; () banked
  3045   002172  4BA1               	infsnz	pad@i& (0+255),f,b
  3046   002174  2BA2               	incf	(pad@i+1)& (0+255),f,b
  3047   002176                     l4108:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 147:     while (i < w) {
  3051   002176  51A3               	movf	pad@w& (0+255),w,b
  3052   002178  5DA1               	subwf	pad@i& (0+255),w,b
  3053   00217A  51A2               	movf	(pad@i+1)& (0+255),w,b
  3054   00217C  0A80               	xorlw	128
  3055   00217E  6FA0               	movwf	??_pad& (0+255),b
  3056   002180  51A4               	movf	(pad@w+1)& (0+255),w,b
  3057   002182  0A80               	xorlw	128
  3058   002184  59A0               	subwfb	??_pad& (0+255),w,b
  3059   002186  A0D8               	btfss	status,0,c
  3060   002188  EFC8  F010         	goto	u3681
  3061   00218C  EFCA  F010         	goto	u3680
  3062   002190                     u3681:
  3063   002190  EFAE  F010         	goto	l4104
  3064   002194                     u3680:
  3065   002194                     
  3066                           ; BSR set to: 0
  3067                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 154:     if (!(flags & (1 << 
      +                          0))) {
  3068   002194  B1E5               	btfsc	_flags& (0+255),0,b
  3069   002196  EFCF  F010         	goto	u3691
  3070   00219A  EFD1  F010         	goto	u3690
  3071   00219E                     u3691:
  3072   00219E  EFDB  F010         	goto	l1193
  3073   0021A2                     u3690:
  3074   0021A2                     
  3075                           ; BSR set to: 0
  3076                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 156:         fputs((const cha
      +                          r *)buf, fp);
  3077   0021A2  C09C  F093         	movff	pad@buf,fputs@s
  3078   0021A6  C09D  F094         	movff	pad@buf+1,fputs@s+1
  3079   0021AA  C09A  F095         	movff	pad@fp,fputs@fp
  3080   0021AE  C09B  F096         	movff	pad@fp+1,fputs@fp+1
  3081   0021B2  EC00  F013         	call	_fputs	;wreg free
  3082   0021B6                     l1193:
  3083   0021B6  0012               	return		;funcret
  3084   0021B8                     __end_of_pad:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _fputs *****************
  3088 ;; Defined at:
  3089 ;;		line 8 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/nf_fputs.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  s               2   19[BANK0 ] PTR const unsigned char 
  3092 ;;		 -> dbuf(32), 
  3093 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  3094 ;;		 -> sprintf@f(11), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  i               2   24[BANK0 ] int 
  3097 ;;  c               1   23[BANK0 ] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2   19[BANK0 ] int 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3107 ;;      Params:         0       4       0       0       0       0       0
  3108 ;;      Locals:         0       3       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0
  3110 ;;      Totals:         0       7       0       0       0       0       0
  3111 ;;Total ram usage:        7 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 15
  3114 ;; This function calls:
  3115 ;;		_fputc
  3116 ;; This function is called by:
  3117 ;;		_pad
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text16
  3122   002600                     __ptext16:
  3123                           	callstack 0
  3124   002600                     _fputs:
  3125                           	callstack 8
  3126   002600  0E00               	movlw	0
  3127   002602  0100               	movlb	0	; () banked
  3128   002604  6F99               	movwf	(fputs@i+1)& (0+255),b
  3129   002606  0E00               	movlw	0
  3130   002608  6F98               	movwf	fputs@i& (0+255),b
  3131   00260A  EF13  F013         	goto	l3922
  3132   00260E                     l3918:
  3133                           
  3134                           ; BSR set to: 0
  3135   00260E  C097  F08A         	movff	fputs@c,fputc@c
  3136   002612  6B8B               	clrf	(fputc@c+1)& (0+255),b
  3137   002614  C095  F08C         	movff	fputs@fp,fputc@fp
  3138   002618  C096  F08D         	movff	fputs@fp+1,fputc@fp+1
  3139   00261C  ECA1  F00E         	call	_fputc	;wreg free
  3140   002620  0100               	movlb	0	; () banked
  3141   002622  4B98               	infsnz	fputs@i& (0+255),f,b
  3142   002624  2B99               	incf	(fputs@i+1)& (0+255),f,b
  3143   002626                     l3922:
  3144                           
  3145                           ; BSR set to: 0
  3146   002626  5198               	movf	fputs@i& (0+255),w,b
  3147   002628  2593               	addwf	fputs@s& (0+255),w,b
  3148   00262A  6ED9               	movwf	fsr2l,c
  3149   00262C  5199               	movf	(fputs@i+1)& (0+255),w,b
  3150   00262E  2194               	addwfc	(fputs@s+1)& (0+255),w,b
  3151   002630  6EDA               	movwf	fsr2h,c
  3152   002632  50DF               	movf	indf2,w,c
  3153   002634  6F97               	movwf	fputs@c& (0+255),b
  3154   002636  5197               	movf	fputs@c& (0+255),w,b
  3155   002638  A4D8               	btfss	status,2,c
  3156   00263A  EF21  F013         	goto	u3381
  3157   00263E  EF23  F013         	goto	u3380
  3158   002642                     u3381:
  3159   002642  EF07  F013         	goto	l3918
  3160   002646                     u3380:
  3161   002646                     
  3162                           ; BSR set to: 0
  3163   002646  0012               	return		;funcret
  3164   002648                     __end_of_fputs:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _fputc *****************
  3168 ;; Defined at:
  3169 ;;		line 8 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/nf_fputc.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  c               2   10[BANK0 ] int 
  3172 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  3173 ;;		 -> sprintf@f(11), 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2   10[BANK0 ] int 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3185 ;;      Params:         0       4       0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0
  3187 ;;      Temps:          0       5       0       0       0       0       0
  3188 ;;      Totals:         0       9       0       0       0       0       0
  3189 ;;Total ram usage:        9 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 14
  3192 ;; This function calls:
  3193 ;;		_putch
  3194 ;; This function is called by:
  3195 ;;		_pad
  3196 ;;		_vfpfcnvrt
  3197 ;;		_fputs
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text17
  3202   001D42                     __ptext17:
  3203                           	callstack 0
  3204   001D42                     _fputc:
  3205                           	callstack 11
  3206   001D42  0100               	movlb	0	; () banked
  3207   001D44  518C               	movf	fputc@fp& (0+255),w,b
  3208   001D46  118D               	iorwf	(fputc@fp+1)& (0+255),w,b
  3209   001D48  B4D8               	btfsc	status,2,c
  3210   001D4A  EFA9  F00E         	goto	u3141
  3211   001D4E  EFAB  F00E         	goto	u3140
  3212   001D52                     u3141:
  3213   001D52  EFB4  F00E         	goto	l3786
  3214   001D56                     u3140:
  3215   001D56                     
  3216                           ; BSR set to: 0
  3217   001D56  518C               	movf	fputc@fp& (0+255),w,b
  3218   001D58  118D               	iorwf	(fputc@fp+1)& (0+255),w,b
  3219   001D5A  A4D8               	btfss	status,2,c
  3220   001D5C  EFB2  F00E         	goto	u3151
  3221   001D60  EFB4  F00E         	goto	u3150
  3222   001D64                     u3151:
  3223   001D64  EFB9  F00E         	goto	l3788
  3224   001D68                     u3150:
  3225   001D68                     l3786:
  3226                           
  3227                           ; BSR set to: 0
  3228   001D68  518A               	movf	fputc@c& (0+255),w,b
  3229   001D6A  ECCA  F015         	call	_putch
  3230   001D6E  EF06  F00F         	goto	l1299
  3231   001D72                     l3788:
  3232                           
  3233                           ; BSR set to: 0
  3234   001D72  EE20 F009          	lfsr	2,9
  3235   001D76  518C               	movf	fputc@fp& (0+255),w,b
  3236   001D78  26D9               	addwf	fsr2l,f,c
  3237   001D7A  518D               	movf	(fputc@fp+1)& (0+255),w,b
  3238   001D7C  22DA               	addwfc	fsr2h,f,c
  3239   001D7E  50DE               	movf	postinc2,w,c
  3240   001D80  10DE               	iorwf	postinc2,w,c
  3241   001D82  B4D8               	btfsc	status,2,c
  3242   001D84  EFC6  F00E         	goto	u3161
  3243   001D88  EFC8  F00E         	goto	u3160
  3244   001D8C                     u3161:
  3245   001D8C  EFE3  F00E         	goto	l3792
  3246   001D90                     u3160:
  3247   001D90                     
  3248                           ; BSR set to: 0
  3249   001D90  EE20 F009          	lfsr	2,9
  3250   001D94  518C               	movf	fputc@fp& (0+255),w,b
  3251   001D96  26D9               	addwf	fsr2l,f,c
  3252   001D98  518D               	movf	(fputc@fp+1)& (0+255),w,b
  3253   001D9A  22DA               	addwfc	fsr2h,f,c
  3254   001D9C  EE10 F003          	lfsr	1,3
  3255   001DA0  518C               	movf	fputc@fp& (0+255),w,b
  3256   001DA2  26E1               	addwf	fsr1l,f,c
  3257   001DA4  518D               	movf	(fputc@fp+1)& (0+255),w,b
  3258   001DA6  22E2               	addwfc	fsr1h,f,c
  3259   001DA8  50DE               	movf	postinc2,w,c
  3260   001DAA  5CE6               	subwf	postinc1,w,c
  3261   001DAC  50E6               	movf	postinc1,w,c
  3262   001DAE  0A80               	xorlw	128
  3263   001DB0  6F92               	movwf	(??_fputc+4)& (0+255),b
  3264   001DB2  50DE               	movf	postinc2,w,c
  3265   001DB4  0A80               	xorlw	128
  3266   001DB6  5992               	subwfb	(??_fputc+4)& (0+255),w,b
  3267   001DB8  B0D8               	btfsc	status,0,c
  3268   001DBA  EFE1  F00E         	goto	u3171
  3269   001DBE  EFE3  F00E         	goto	u3170
  3270   001DC2                     u3171:
  3271   001DC2  EF06  F00F         	goto	l1299
  3272   001DC6                     u3170:
  3273   001DC6                     l3792:
  3274                           
  3275                           ; BSR set to: 0
  3276   001DC6  EE20 F003          	lfsr	2,3
  3277   001DCA  518C               	movf	fputc@fp& (0+255),w,b
  3278   001DCC  26D9               	addwf	fsr2l,f,c
  3279   001DCE  518D               	movf	(fputc@fp+1)& (0+255),w,b
  3280   001DD0  22DA               	addwfc	fsr2h,f,c
  3281   001DD2  CFDE F08E          	movff	postinc2,??_fputc
  3282   001DD6  CFDD F08F          	movff	postdec2,??_fputc+1
  3283   001DDA  C08C  FFD9         	movff	fputc@fp,fsr2l
  3284   001DDE  C08D  FFDA         	movff	fputc@fp+1,fsr2h
  3285   001DE2  CFDE F090          	movff	postinc2,??_fputc+2
  3286   001DE6  CFDD F091          	movff	postdec2,??_fputc+3
  3287   001DEA  518E               	movf	??_fputc& (0+255),w,b
  3288   001DEC  2590               	addwf	(??_fputc+2)& (0+255),w,b
  3289   001DEE  6ED9               	movwf	fsr2l,c
  3290   001DF0  518F               	movf	(??_fputc+1)& (0+255),w,b
  3291   001DF2  2191               	addwfc	(??_fputc+3)& (0+255),w,b
  3292   001DF4  6EDA               	movwf	fsr2h,c
  3293   001DF6  C08A  FFDF         	movff	fputc@c,indf2
  3294   001DFA  EE20 F003          	lfsr	2,3
  3295   001DFE  518C               	movf	fputc@fp& (0+255),w,b
  3296   001E00  26D9               	addwf	fsr2l,f,c
  3297   001E02  518D               	movf	(fputc@fp+1)& (0+255),w,b
  3298   001E04  22DA               	addwfc	fsr2h,f,c
  3299   001E06  2ADE               	incf	postinc2,f,c
  3300   001E08  0E00               	movlw	0
  3301   001E0A  22DD               	addwfc	postdec2,f,c
  3302   001E0C                     l1299:
  3303   001E0C  0012               	return		;funcret
  3304   001E0E                     __end_of_fputc:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _putch *****************
  3308 ;; Defined at:
  3309 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/putch.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  c               1    wreg     unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  c               1    0[COMRAM] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3323 ;;      Params:         0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 13
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_fputc
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text18
  3338   002B94                     __ptext18:
  3339                           	callstack 0
  3340   002B94                     _putch:
  3341                           	callstack 11
  3342   002B94  0012               	return		;funcret
  3343   002B96                     __end_of_putch:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _abs *****************
  3347 ;; Defined at:
  3348 ;;		line 1 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/abs.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  a               2   28[BANK0 ] int 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  2   28[BANK0 ] int 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3362 ;;      Params:         0       2       0       0       0       0       0
  3363 ;;      Locals:         0       0       0       0       0       0       0
  3364 ;;      Temps:          0       2       0       0       0       0       0
  3365 ;;      Totals:         0       4       0       0       0       0       0
  3366 ;;Total ram usage:        4 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 13
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_dtoa
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text19
  3377   002718                     __ptext19:
  3378                           	callstack 0
  3379   002718                     _abs:
  3380                           	callstack 11
  3381   002718  0100               	movlb	0	; () banked
  3382   00271A  BF9D               	btfsc	(abs@a+1)& (0+255),7,b
  3383   00271C  EF9A  F013         	goto	u3700
  3384   002720  519D               	movf	(abs@a+1)& (0+255),w,b
  3385   002722  E106               	bnz	u3701
  3386   002724  059C               	decf	abs@a& (0+255),w,b
  3387   002726  B0D8               	btfsc	status,0,c
  3388   002728  EF98  F013         	goto	u3701
  3389   00272C  EF9A  F013         	goto	u3700
  3390   002730                     u3701:
  3391   002730  EFA8  F013         	goto	l1245
  3392   002734                     u3700:
  3393   002734                     
  3394                           ; BSR set to: 0
  3395   002734  C09C  F09E         	movff	abs@a,??_abs
  3396   002738  C09D  F09F         	movff	abs@a+1,??_abs+1
  3397   00273C  1F9E               	comf	??_abs& (0+255),f,b
  3398   00273E  1F9F               	comf	(??_abs+1)& (0+255),f,b
  3399   002740  4B9E               	infsnz	??_abs& (0+255),f,b
  3400   002742  2B9F               	incf	(??_abs+1)& (0+255),f,b
  3401   002744  C09E  F09C         	movff	??_abs,?_abs
  3402   002748  C09F  F09D         	movff	??_abs+1,?_abs+1
  3403   00274C  EFAC  F013         	goto	l1248
  3404   002750                     l1245:
  3405                           
  3406                           ; BSR set to: 0
  3407   002750  C09C  F09C         	movff	abs@a,?_abs
  3408   002754  C09D  F09D         	movff	abs@a+1,?_abs+1
  3409   002758                     l1248:
  3410                           
  3411                           ; BSR set to: 0
  3412   002758  0012               	return		;funcret
  3413   00275A                     __end_of_abs:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function ___aomod *****************
  3417 ;; Defined at:
  3418 ;;		line 9 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/aomod.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  dividend        8   10[BANK0 ] long long 
  3421 ;;  divisor         8   18[BANK0 ] long long 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  sign            1   27[BANK0 ] unsigned char 
  3424 ;;  counter         1   26[BANK0 ] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  8   10[BANK0 ] long long 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3434 ;;      Params:         0      16       0       0       0       0       0
  3435 ;;      Locals:         0       2       0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0
  3437 ;;      Totals:         0      18       0       0       0       0       0
  3438 ;;Total ram usage:       18 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; Hardware stack levels required when called: 13
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_dtoa
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text20
  3449   001494                     __ptext20:
  3450                           	callstack 0
  3451   001494                     ___aomod:
  3452                           	callstack 11
  3453   001494  0E00               	movlw	0
  3454   001496  0100               	movlb	0	; () banked
  3455   001498  6F9B               	movwf	___aomod@sign& (0+255),b
  3456   00149A                     
  3457                           ; BSR set to: 0
  3458   00149A  BF91               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3459   00149C  EF54  F00A         	goto	u3600
  3460   0014A0  EF52  F00A         	goto	u3601
  3461   0014A4                     u3601:
  3462   0014A4  EF66  F00A         	goto	l4066
  3463   0014A8                     u3600:
  3464   0014A8                     
  3465                           ; BSR set to: 0
  3466   0014A8  1F91               	comf	(___aomod@dividend+7)& (0+255),f,b
  3467   0014AA  1F90               	comf	(___aomod@dividend+6)& (0+255),f,b
  3468   0014AC  1F8F               	comf	(___aomod@dividend+5)& (0+255),f,b
  3469   0014AE  1F8E               	comf	(___aomod@dividend+4)& (0+255),f,b
  3470   0014B0  1F8D               	comf	(___aomod@dividend+3)& (0+255),f,b
  3471   0014B2  1F8C               	comf	(___aomod@dividend+2)& (0+255),f,b
  3472   0014B4  1F8B               	comf	(___aomod@dividend+1)& (0+255),f,b
  3473   0014B6  6D8A               	negf	___aomod@dividend& (0+255),b
  3474   0014B8  0E00               	movlw	0
  3475   0014BA  238B               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3476   0014BC  238C               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3477   0014BE  238D               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3478   0014C0  238E               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3479   0014C2  238F               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3480   0014C4  2390               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3481   0014C6  2391               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3482   0014C8                     
  3483                           ; BSR set to: 0
  3484   0014C8  0E01               	movlw	1
  3485   0014CA  6F9B               	movwf	___aomod@sign& (0+255),b
  3486   0014CC                     l4066:
  3487                           
  3488                           ; BSR set to: 0
  3489   0014CC  BF99               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3490   0014CE  EF6D  F00A         	goto	u3610
  3491   0014D2  EF6B  F00A         	goto	u3611
  3492   0014D6                     u3611:
  3493   0014D6  EF7D  F00A         	goto	l4070
  3494   0014DA                     u3610:
  3495   0014DA                     
  3496                           ; BSR set to: 0
  3497   0014DA  1F99               	comf	(___aomod@divisor+7)& (0+255),f,b
  3498   0014DC  1F98               	comf	(___aomod@divisor+6)& (0+255),f,b
  3499   0014DE  1F97               	comf	(___aomod@divisor+5)& (0+255),f,b
  3500   0014E0  1F96               	comf	(___aomod@divisor+4)& (0+255),f,b
  3501   0014E2  1F95               	comf	(___aomod@divisor+3)& (0+255),f,b
  3502   0014E4  1F94               	comf	(___aomod@divisor+2)& (0+255),f,b
  3503   0014E6  1F93               	comf	(___aomod@divisor+1)& (0+255),f,b
  3504   0014E8  6D92               	negf	___aomod@divisor& (0+255),b
  3505   0014EA  0E00               	movlw	0
  3506   0014EC  2393               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3507   0014EE  2394               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3508   0014F0  2395               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3509   0014F2  2396               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3510   0014F4  2397               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3511   0014F6  2398               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3512   0014F8  2399               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3513   0014FA                     l4070:
  3514                           
  3515                           ; BSR set to: 0
  3516   0014FA  5192               	movf	___aomod@divisor& (0+255),w,b
  3517   0014FC  1193               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3518   0014FE  1194               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3519   001500  1195               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3520   001502  1196               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3521   001504  1197               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3522   001506  1198               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3523   001508  1199               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3524   00150A  B4D8               	btfsc	status,2,c
  3525   00150C  EF8A  F00A         	goto	u3621
  3526   001510  EF8C  F00A         	goto	u3620
  3527   001514                     u3621:
  3528   001514  EFD4  F00A         	goto	l4086
  3529   001518                     u3620:
  3530   001518                     
  3531                           ; BSR set to: 0
  3532   001518  0E01               	movlw	1
  3533   00151A  6F9A               	movwf	___aomod@counter& (0+255),b
  3534   00151C  EF9A  F00A         	goto	l4076
  3535   001520                     l4074:
  3536                           
  3537                           ; BSR set to: 0
  3538   001520  90D8               	bcf	status,0,c
  3539   001522  3792               	rlcf	___aomod@divisor& (0+255),f,b
  3540   001524  3793               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3541   001526  3794               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3542   001528  3795               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3543   00152A  3796               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3544   00152C  3797               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3545   00152E  3798               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3546   001530  3799               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3547   001532  2B9A               	incf	___aomod@counter& (0+255),f,b
  3548   001534                     l4076:
  3549                           
  3550                           ; BSR set to: 0
  3551   001534  AF99               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3552   001536  EF9F  F00A         	goto	u3631
  3553   00153A  EFA1  F00A         	goto	u3630
  3554   00153E                     u3631:
  3555   00153E  EF90  F00A         	goto	l4074
  3556   001542                     u3630:
  3557   001542                     l4078:
  3558                           
  3559                           ; BSR set to: 0
  3560   001542  5192               	movf	___aomod@divisor& (0+255),w,b
  3561   001544  5D8A               	subwf	___aomod@dividend& (0+255),w,b
  3562   001546  5193               	movf	(___aomod@divisor+1)& (0+255),w,b
  3563   001548  598B               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3564   00154A  5194               	movf	(___aomod@divisor+2)& (0+255),w,b
  3565   00154C  598C               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3566   00154E  5195               	movf	(___aomod@divisor+3)& (0+255),w,b
  3567   001550  598D               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3568   001552  5196               	movf	(___aomod@divisor+4)& (0+255),w,b
  3569   001554  598E               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3570   001556  5197               	movf	(___aomod@divisor+5)& (0+255),w,b
  3571   001558  598F               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3572   00155A  5198               	movf	(___aomod@divisor+6)& (0+255),w,b
  3573   00155C  5990               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3574   00155E  5199               	movf	(___aomod@divisor+7)& (0+255),w,b
  3575   001560  5991               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3576   001562  A0D8               	btfss	status,0,c
  3577   001564  EFB6  F00A         	goto	u3641
  3578   001568  EFB8  F00A         	goto	u3640
  3579   00156C                     u3641:
  3580   00156C  EFC8  F00A         	goto	l4082
  3581   001570                     u3640:
  3582   001570                     
  3583                           ; BSR set to: 0
  3584   001570  5192               	movf	___aomod@divisor& (0+255),w,b
  3585   001572  5F8A               	subwf	___aomod@dividend& (0+255),f,b
  3586   001574  5193               	movf	(___aomod@divisor+1)& (0+255),w,b
  3587   001576  5B8B               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3588   001578  5194               	movf	(___aomod@divisor+2)& (0+255),w,b
  3589   00157A  5B8C               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3590   00157C  5195               	movf	(___aomod@divisor+3)& (0+255),w,b
  3591   00157E  5B8D               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3592   001580  5196               	movf	(___aomod@divisor+4)& (0+255),w,b
  3593   001582  5B8E               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3594   001584  5197               	movf	(___aomod@divisor+5)& (0+255),w,b
  3595   001586  5B8F               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3596   001588  5198               	movf	(___aomod@divisor+6)& (0+255),w,b
  3597   00158A  5B90               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3598   00158C  5199               	movf	(___aomod@divisor+7)& (0+255),w,b
  3599   00158E  5B91               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3600   001590                     l4082:
  3601                           
  3602                           ; BSR set to: 0
  3603   001590  90D8               	bcf	status,0,c
  3604   001592  3399               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3605   001594  3398               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3606   001596  3397               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3607   001598  3396               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3608   00159A  3395               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3609   00159C  3394               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3610   00159E  3393               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3611   0015A0  3392               	rrcf	___aomod@divisor& (0+255),f,b
  3612   0015A2                     
  3613                           ; BSR set to: 0
  3614   0015A2  2F9A               	decfsz	___aomod@counter& (0+255),f,b
  3615   0015A4  EFA1  F00A         	goto	l4078
  3616   0015A8                     l4086:
  3617                           
  3618                           ; BSR set to: 0
  3619   0015A8  519B               	movf	___aomod@sign& (0+255),w,b
  3620   0015AA  B4D8               	btfsc	status,2,c
  3621   0015AC  EFDA  F00A         	goto	u3651
  3622   0015B0  EFDC  F00A         	goto	u3650
  3623   0015B4                     u3651:
  3624   0015B4  EFEC  F00A         	goto	l4090
  3625   0015B8                     u3650:
  3626   0015B8                     
  3627                           ; BSR set to: 0
  3628   0015B8  1F91               	comf	(___aomod@dividend+7)& (0+255),f,b
  3629   0015BA  1F90               	comf	(___aomod@dividend+6)& (0+255),f,b
  3630   0015BC  1F8F               	comf	(___aomod@dividend+5)& (0+255),f,b
  3631   0015BE  1F8E               	comf	(___aomod@dividend+4)& (0+255),f,b
  3632   0015C0  1F8D               	comf	(___aomod@dividend+3)& (0+255),f,b
  3633   0015C2  1F8C               	comf	(___aomod@dividend+2)& (0+255),f,b
  3634   0015C4  1F8B               	comf	(___aomod@dividend+1)& (0+255),f,b
  3635   0015C6  6D8A               	negf	___aomod@dividend& (0+255),b
  3636   0015C8  0E00               	movlw	0
  3637   0015CA  238B               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3638   0015CC  238C               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3639   0015CE  238D               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3640   0015D0  238E               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3641   0015D2  238F               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3642   0015D4  2390               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3643   0015D6  2391               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3644   0015D8                     l4090:
  3645                           
  3646                           ; BSR set to: 0
  3647   0015D8  C08A  F08A         	movff	___aomod@dividend,?___aomod
  3648   0015DC  C08B  F08B         	movff	___aomod@dividend+1,?___aomod+1
  3649   0015E0  C08C  F08C         	movff	___aomod@dividend+2,?___aomod+2
  3650   0015E4  C08D  F08D         	movff	___aomod@dividend+3,?___aomod+3
  3651   0015E8  C08E  F08E         	movff	___aomod@dividend+4,?___aomod+4
  3652   0015EC  C08F  F08F         	movff	___aomod@dividend+5,?___aomod+5
  3653   0015F0  C090  F090         	movff	___aomod@dividend+6,?___aomod+6
  3654   0015F4  C091  F091         	movff	___aomod@dividend+7,?___aomod+7
  3655   0015F8                     
  3656                           ; BSR set to: 0
  3657   0015F8  0012               	return		;funcret
  3658   0015FA                     __end_of___aomod:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function ___aodiv *****************
  3662 ;; Defined at:
  3663 ;;		line 9 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/aodiv.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  dividend        8   10[BANK0 ] long long 
  3666 ;;  divisor         8   18[BANK0 ] long long 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  quotient        8   28[BANK0 ] long long 
  3669 ;;  sign            1   27[BANK0 ] unsigned char 
  3670 ;;  counter         1   26[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  8   10[BANK0 ] long long 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3680 ;;      Params:         0      16       0       0       0       0       0
  3681 ;;      Locals:         0      10       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0
  3683 ;;      Totals:         0      26       0       0       0       0       0
  3684 ;;Total ram usage:       26 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 13
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_dtoa
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text21
  3695   001182                     __ptext21:
  3696                           	callstack 0
  3697   001182                     ___aodiv:
  3698                           	callstack 11
  3699   001182  0E00               	movlw	0
  3700   001184  0100               	movlb	0	; () banked
  3701   001186  6F9B               	movwf	___aodiv@sign& (0+255),b
  3702   001188                     
  3703                           ; BSR set to: 0
  3704   001188  BF99               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3705   00118A  EFCB  F008         	goto	u3530
  3706   00118E  EFC9  F008         	goto	u3531
  3707   001192                     u3531:
  3708   001192  EFDD  F008         	goto	l4022
  3709   001196                     u3530:
  3710   001196                     
  3711                           ; BSR set to: 0
  3712   001196  1F99               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3713   001198  1F98               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3714   00119A  1F97               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3715   00119C  1F96               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3716   00119E  1F95               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3717   0011A0  1F94               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3718   0011A2  1F93               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3719   0011A4  6D92               	negf	___aodiv@divisor& (0+255),b
  3720   0011A6  0E00               	movlw	0
  3721   0011A8  2393               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3722   0011AA  2394               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3723   0011AC  2395               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3724   0011AE  2396               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3725   0011B0  2397               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3726   0011B2  2398               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3727   0011B4  2399               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3728   0011B6                     
  3729                           ; BSR set to: 0
  3730   0011B6  0E01               	movlw	1
  3731   0011B8  6F9B               	movwf	___aodiv@sign& (0+255),b
  3732   0011BA                     l4022:
  3733                           
  3734                           ; BSR set to: 0
  3735   0011BA  BF91               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3736   0011BC  EFE4  F008         	goto	u3540
  3737   0011C0  EFE2  F008         	goto	u3541
  3738   0011C4                     u3541:
  3739   0011C4  EFF6  F008         	goto	l4028
  3740   0011C8                     u3540:
  3741   0011C8                     
  3742                           ; BSR set to: 0
  3743   0011C8  1F91               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3744   0011CA  1F90               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3745   0011CC  1F8F               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3746   0011CE  1F8E               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3747   0011D0  1F8D               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3748   0011D2  1F8C               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3749   0011D4  1F8B               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3750   0011D6  6D8A               	negf	___aodiv@dividend& (0+255),b
  3751   0011D8  0E00               	movlw	0
  3752   0011DA  238B               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3753   0011DC  238C               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3754   0011DE  238D               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3755   0011E0  238E               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3756   0011E2  238F               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3757   0011E4  2390               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3758   0011E6  2391               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3759   0011E8                     
  3760                           ; BSR set to: 0
  3761   0011E8  0E01               	movlw	1
  3762   0011EA  1B9B               	xorwf	___aodiv@sign& (0+255),f,b
  3763   0011EC                     l4028:
  3764                           
  3765                           ; BSR set to: 0
  3766   0011EC  EE20  F09C         	lfsr	2,___aodiv@quotient
  3767   0011F0  0E07               	movlw	7
  3768   0011F2                     u3551:
  3769   0011F2  6ADE               	clrf	postinc2,c
  3770   0011F4  06E8               	decf	wreg,f,c
  3771   0011F6  E2FD               	bc	u3551
  3772   0011F8                     
  3773                           ; BSR set to: 0
  3774   0011F8  5192               	movf	___aodiv@divisor& (0+255),w,b
  3775   0011FA  1193               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3776   0011FC  1194               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3777   0011FE  1195               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3778   001200  1196               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3779   001202  1197               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3780   001204  1198               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3781   001206  1199               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3782   001208  B4D8               	btfsc	status,2,c
  3783   00120A  EF09  F009         	goto	u3561
  3784   00120E  EF0B  F009         	goto	u3560
  3785   001212                     u3561:
  3786   001212  EF5D  F009         	goto	l4050
  3787   001216                     u3560:
  3788   001216                     
  3789                           ; BSR set to: 0
  3790   001216  0E01               	movlw	1
  3791   001218  6F9A               	movwf	___aodiv@counter& (0+255),b
  3792   00121A  EF19  F009         	goto	l4036
  3793   00121E                     l4034:
  3794                           
  3795                           ; BSR set to: 0
  3796   00121E  90D8               	bcf	status,0,c
  3797   001220  3792               	rlcf	___aodiv@divisor& (0+255),f,b
  3798   001222  3793               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3799   001224  3794               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3800   001226  3795               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3801   001228  3796               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3802   00122A  3797               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3803   00122C  3798               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3804   00122E  3799               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3805   001230  2B9A               	incf	___aodiv@counter& (0+255),f,b
  3806   001232                     l4036:
  3807                           
  3808                           ; BSR set to: 0
  3809   001232  AF99               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3810   001234  EF1E  F009         	goto	u3571
  3811   001238  EF20  F009         	goto	u3570
  3812   00123C                     u3571:
  3813   00123C  EF0F  F009         	goto	l4034
  3814   001240                     u3570:
  3815   001240                     l4038:
  3816                           
  3817                           ; BSR set to: 0
  3818   001240  90D8               	bcf	status,0,c
  3819   001242  379C               	rlcf	___aodiv@quotient& (0+255),f,b
  3820   001244  379D               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3821   001246  379E               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3822   001248  379F               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3823   00124A  37A0               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3824   00124C  37A1               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3825   00124E  37A2               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3826   001250  37A3               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3827   001252                     
  3828                           ; BSR set to: 0
  3829   001252  5192               	movf	___aodiv@divisor& (0+255),w,b
  3830   001254  5D8A               	subwf	___aodiv@dividend& (0+255),w,b
  3831   001256  5193               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3832   001258  598B               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3833   00125A  5194               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3834   00125C  598C               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3835   00125E  5195               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3836   001260  598D               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3837   001262  5196               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3838   001264  598E               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3839   001266  5197               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3840   001268  598F               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3841   00126A  5198               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3842   00126C  5990               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3843   00126E  5199               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3844   001270  5991               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3845   001272  A0D8               	btfss	status,0,c
  3846   001274  EF3E  F009         	goto	u3581
  3847   001278  EF40  F009         	goto	u3580
  3848   00127C                     u3581:
  3849   00127C  EF51  F009         	goto	l4046
  3850   001280                     u3580:
  3851   001280                     
  3852                           ; BSR set to: 0
  3853   001280  5192               	movf	___aodiv@divisor& (0+255),w,b
  3854   001282  5F8A               	subwf	___aodiv@dividend& (0+255),f,b
  3855   001284  5193               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3856   001286  5B8B               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3857   001288  5194               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3858   00128A  5B8C               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3859   00128C  5195               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3860   00128E  5B8D               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3861   001290  5196               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3862   001292  5B8E               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3863   001294  5197               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3864   001296  5B8F               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3865   001298  5198               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3866   00129A  5B90               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3867   00129C  5199               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3868   00129E  5B91               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3869   0012A0                     
  3870                           ; BSR set to: 0
  3871   0012A0  819C               	bsf	___aodiv@quotient& (0+255),0,b
  3872   0012A2                     l4046:
  3873                           
  3874                           ; BSR set to: 0
  3875   0012A2  90D8               	bcf	status,0,c
  3876   0012A4  3399               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3877   0012A6  3398               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3878   0012A8  3397               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3879   0012AA  3396               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3880   0012AC  3395               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3881   0012AE  3394               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3882   0012B0  3393               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3883   0012B2  3392               	rrcf	___aodiv@divisor& (0+255),f,b
  3884   0012B4                     
  3885                           ; BSR set to: 0
  3886   0012B4  2F9A               	decfsz	___aodiv@counter& (0+255),f,b
  3887   0012B6  EF20  F009         	goto	l4038
  3888   0012BA                     l4050:
  3889                           
  3890                           ; BSR set to: 0
  3891   0012BA  519B               	movf	___aodiv@sign& (0+255),w,b
  3892   0012BC  B4D8               	btfsc	status,2,c
  3893   0012BE  EF63  F009         	goto	u3591
  3894   0012C2  EF65  F009         	goto	u3590
  3895   0012C6                     u3591:
  3896   0012C6  EF75  F009         	goto	l4054
  3897   0012CA                     u3590:
  3898   0012CA                     
  3899                           ; BSR set to: 0
  3900   0012CA  1FA3               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3901   0012CC  1FA2               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3902   0012CE  1FA1               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3903   0012D0  1FA0               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3904   0012D2  1F9F               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3905   0012D4  1F9E               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3906   0012D6  1F9D               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3907   0012D8  6D9C               	negf	___aodiv@quotient& (0+255),b
  3908   0012DA  0E00               	movlw	0
  3909   0012DC  239D               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3910   0012DE  239E               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3911   0012E0  239F               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3912   0012E2  23A0               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3913   0012E4  23A1               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3914   0012E6  23A2               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3915   0012E8  23A3               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3916   0012EA                     l4054:
  3917                           
  3918                           ; BSR set to: 0
  3919   0012EA  C09C  F08A         	movff	___aodiv@quotient,?___aodiv
  3920   0012EE  C09D  F08B         	movff	___aodiv@quotient+1,?___aodiv+1
  3921   0012F2  C09E  F08C         	movff	___aodiv@quotient+2,?___aodiv+2
  3922   0012F6  C09F  F08D         	movff	___aodiv@quotient+3,?___aodiv+3
  3923   0012FA  C0A0  F08E         	movff	___aodiv@quotient+4,?___aodiv+4
  3924   0012FE  C0A1  F08F         	movff	___aodiv@quotient+5,?___aodiv+5
  3925   001302  C0A2  F090         	movff	___aodiv@quotient+6,?___aodiv+6
  3926   001306  C0A3  F091         	movff	___aodiv@quotient+7,?___aodiv+7
  3927   00130A                     
  3928                           ; BSR set to: 0
  3929   00130A  0012               	return		;funcret
  3930   00130C                     __end_of___aodiv:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _atoi *****************
  3934 ;; Defined at:
  3935 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/atoi.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  3938 ;;		 -> STR_2(17), STR_1(22), 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  n               2   23[BANK0 ] int 
  3941 ;;  neg             2   21[BANK0 ] int 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  2   16[BANK0 ] int 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3951 ;;      Params:         0       2       0       0       0       0       0
  3952 ;;      Locals:         0       4       0       0       0       0       0
  3953 ;;      Temps:          0       3       0       0       0       0       0
  3954 ;;      Totals:         0       9       0       0       0       0       0
  3955 ;;Total ram usage:        9 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 14
  3958 ;; This function calls:
  3959 ;;		___wmul
  3960 ;;		_isdigit
  3961 ;;		_isspace
  3962 ;; This function is called by:
  3963 ;;		_vfpfcnvrt
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text22
  3968   00175E                     __ptext22:
  3969                           	callstack 0
  3970   00175E                     _atoi:
  3971                           	callstack 11
  3972   00175E  0E00               	movlw	0
  3973   001760  0100               	movlb	0	; () banked
  3974   001762  6F98               	movwf	(atoi@n+1)& (0+255),b
  3975   001764  0E00               	movlw	0
  3976   001766  6F97               	movwf	atoi@n& (0+255),b
  3977   001768  0E00               	movlw	0
  3978   00176A  6F96               	movwf	(atoi@neg+1)& (0+255),b
  3979   00176C  0E00               	movlw	0
  3980   00176E  6F95               	movwf	atoi@neg& (0+255),b
  3981   001770  EFBC  F00B         	goto	l4254
  3982   001774                     l4250:
  3983                           
  3984                           ; BSR set to: 0
  3985   001774  4B90               	infsnz	atoi@s& (0+255),f,b
  3986   001776  2B91               	incf	(atoi@s+1)& (0+255),f,b
  3987   001778                     l4254:
  3988                           
  3989                           ; BSR set to: 0
  3990   001778  C090  FFF6         	movff	atoi@s,tblptrl
  3991   00177C  C091  FFF7         	movff	atoi@s+1,tblptrh
  3992   001780                     	if	0	;tblptru may be non-zero
  3993   001780                     	endif
  3994   001780                     	if	0	;tblptru may be non-zero
  3995   001780                     	endif
  3996   001780  0008               	tblrd		*
  3997   001782  50F5               	movf	tablat,w,c
  3998   001784  0A20               	xorlw	32
  3999   001786  B4D8               	btfsc	status,2,c
  4000   001788  EFC8  F00B         	goto	u3941
  4001   00178C  EFCA  F00B         	goto	u3940
  4002   001790                     u3941:
  4003   001790  EFBA  F00B         	goto	l4250
  4004   001794                     u3940:
  4005   001794                     
  4006                           ; BSR set to: 0
  4007   001794  C090  FFF6         	movff	atoi@s,tblptrl
  4008   001798  C091  FFF7         	movff	atoi@s+1,tblptrh
  4009   00179C                     	if	0	;tblptru may be non-zero
  4010   00179C                     	endif
  4011   00179C                     	if	0	;tblptru may be non-zero
  4012   00179C                     	endif
  4013   00179C  0008               	tblrd		*
  4014   00179E  CFF5 F092          	movff	tablat,??_atoi
  4015   0017A2  0EF7               	movlw	247
  4016   0017A4  2592               	addwf	??_atoi& (0+255),w,b
  4017   0017A6  6F93               	movwf	(??_atoi+1)& (0+255),b
  4018   0017A8  6B94               	clrf	(??_atoi+2)& (0+255),b
  4019   0017AA  0EFF               	movlw	255
  4020   0017AC  2394               	addwfc	(??_atoi+2)& (0+255),f,b
  4021   0017AE  5194               	movf	(??_atoi+2)& (0+255),w,b
  4022   0017B0  E109               	bnz	u3950
  4023   0017B2  0E05               	movlw	5
  4024   0017B4  5D93               	subwf	(??_atoi+1)& (0+255),w,b
  4025   0017B6  A0D8               	btfss	status,0,c
  4026   0017B8  EFE0  F00B         	goto	u3951
  4027   0017BC  EFE2  F00B         	goto	u3950
  4028   0017C0                     u3951:
  4029   0017C0  EFBA  F00B         	goto	l4250
  4030   0017C4                     u3950:
  4031   0017C4  EFEC  F00B         	goto	l4262
  4032   0017C8                     l4258:
  4033                           
  4034                           ; BSR set to: 0
  4035   0017C8  0E00               	movlw	0
  4036   0017CA  6F96               	movwf	(atoi@neg+1)& (0+255),b
  4037   0017CC  0E01               	movlw	1
  4038   0017CE  6F95               	movwf	atoi@neg& (0+255),b
  4039   0017D0                     l4260:
  4040                           
  4041                           ; BSR set to: 0
  4042   0017D0  4B90               	infsnz	atoi@s& (0+255),f,b
  4043   0017D2  2B91               	incf	(atoi@s+1)& (0+255),f,b
  4044   0017D4  EF22  F00C         	goto	l4270
  4045   0017D8                     l4262:
  4046                           
  4047                           ; BSR set to: 0
  4048   0017D8  C090  FFF6         	movff	atoi@s,tblptrl
  4049   0017DC  C091  FFF7         	movff	atoi@s+1,tblptrh
  4050   0017E0                     	if	0	;tblptru may be non-zero
  4051   0017E0                     	endif
  4052   0017E0                     	if	0	;tblptru may be non-zero
  4053   0017E0                     	endif
  4054   0017E0  0008               	tblrd		*
  4055   0017E2  50F5               	movf	tablat,w,c
  4056   0017E4  6F92               	movwf	??_atoi& (0+255),b
  4057   0017E6  6B93               	clrf	(??_atoi+1)& (0+255),b
  4058                           
  4059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4060                           ; Switch size 1, requested type "simple"
  4061                           ; Number of cases is 1, Range of values is 0 to 0
  4062                           ; switch strategies available:
  4063                           ; Name         Instructions Cycles
  4064                           ; simple_byte            4     3 (average)
  4065                           ;	Chosen strategy is simple_byte
  4066   0017E8  5193               	movf	(??_atoi+1)& (0+255),w,b
  4067   0017EA  0A00               	xorlw	0	; case 0
  4068   0017EC  B4D8               	btfsc	status,2,c
  4069   0017EE  EFFB  F00B         	goto	l4664
  4070   0017F2  EF22  F00C         	goto	l4270
  4071   0017F6                     l4664:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ; Switch size 1, requested type "simple"
  4075                           ; Number of cases is 2, Range of values is 43 to 45
  4076                           ; switch strategies available:
  4077                           ; Name         Instructions Cycles
  4078                           ; simple_byte            7     4 (average)
  4079                           ;	Chosen strategy is simple_byte
  4080   0017F6  5192               	movf	??_atoi& (0+255),w,b
  4081   0017F8  0A2B               	xorlw	43	; case 43
  4082   0017FA  B4D8               	btfsc	status,2,c
  4083   0017FC  EFE8  F00B         	goto	l4260
  4084   001800  0A06               	xorlw	6	; case 45
  4085   001802  B4D8               	btfsc	status,2,c
  4086   001804  EFE4  F00B         	goto	l4258
  4087   001808  EF22  F00C         	goto	l4270
  4088   00180C                     l4264:
  4089                           
  4090                           ; BSR set to: 0
  4091   00180C  C097  F08A         	movff	atoi@n,___wmul@multiplier
  4092   001810  C098  F08B         	movff	atoi@n+1,___wmul@multiplier+1
  4093   001814  0E00               	movlw	0
  4094   001816  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4095   001818  0E0A               	movlw	10
  4096   00181A  6F8C               	movwf	___wmul@multiplicand& (0+255),b
  4097   00181C  ECCA  F014         	call	___wmul	;wreg free
  4098   001820  C090  FFF6         	movff	atoi@s,tblptrl
  4099   001824  C091  FFF7         	movff	atoi@s+1,tblptrh
  4100   001828                     	if	0	;tblptru may be non-zero
  4101   001828                     	endif
  4102   001828                     	if	0	;tblptru may be non-zero
  4103   001828                     	endif
  4104   001828  0008               	tblrd		*
  4105   00182A  50F5               	movf	tablat,w,c
  4106   00182C  0100               	movlb	0	; () banked
  4107   00182E  5F8A               	subwf	?___wmul& (0+255),f,b
  4108   001830  0E00               	movlw	0
  4109   001832  5B8B               	subwfb	(?___wmul+1)& (0+255),f,b
  4110   001834  0E30               	movlw	48
  4111   001836  258A               	addwf	?___wmul& (0+255),w,b
  4112   001838  6F97               	movwf	atoi@n& (0+255),b
  4113   00183A  0E00               	movlw	0
  4114   00183C  218B               	addwfc	(?___wmul+1)& (0+255),w,b
  4115   00183E  6F98               	movwf	(atoi@n+1)& (0+255),b
  4116   001840  EFE8  F00B         	goto	l4260
  4117   001844                     l4270:
  4118                           
  4119                           ; BSR set to: 0
  4120   001844  C090  FFF6         	movff	atoi@s,tblptrl
  4121   001848  C091  FFF7         	movff	atoi@s+1,tblptrh
  4122   00184C                     	if	0	;tblptru may be non-zero
  4123   00184C                     	endif
  4124   00184C                     	if	0	;tblptru may be non-zero
  4125   00184C                     	endif
  4126   00184C  0008               	tblrd		*
  4127   00184E  CFF5 F092          	movff	tablat,??_atoi
  4128   001852  0ED0               	movlw	208
  4129   001854  2592               	addwf	??_atoi& (0+255),w,b
  4130   001856  6F93               	movwf	(??_atoi+1)& (0+255),b
  4131   001858  6B94               	clrf	(??_atoi+2)& (0+255),b
  4132   00185A  0EFF               	movlw	255
  4133   00185C  2394               	addwfc	(??_atoi+2)& (0+255),f,b
  4134   00185E  5194               	movf	(??_atoi+2)& (0+255),w,b
  4135   001860  E109               	bnz	u3960
  4136   001862  0E0A               	movlw	10
  4137   001864  5D93               	subwf	(??_atoi+1)& (0+255),w,b
  4138   001866  A0D8               	btfss	status,0,c
  4139   001868  EF38  F00C         	goto	u3961
  4140   00186C  EF3A  F00C         	goto	u3960
  4141   001870                     u3961:
  4142   001870  EF06  F00C         	goto	l4264
  4143   001874                     u3960:
  4144   001874                     
  4145                           ; BSR set to: 0
  4146   001874  5195               	movf	atoi@neg& (0+255),w,b
  4147   001876  1196               	iorwf	(atoi@neg+1)& (0+255),w,b
  4148   001878  A4D8               	btfss	status,2,c
  4149   00187A  EF41  F00C         	goto	u3971
  4150   00187E  EF43  F00C         	goto	u3970
  4151   001882                     u3971:
  4152   001882  EF51  F00C         	goto	l1270
  4153   001886                     u3970:
  4154   001886                     
  4155                           ; BSR set to: 0
  4156   001886  C097  F092         	movff	atoi@n,??_atoi
  4157   00188A  C098  F093         	movff	atoi@n+1,??_atoi+1
  4158   00188E  1F92               	comf	??_atoi& (0+255),f,b
  4159   001890  1F93               	comf	(??_atoi+1)& (0+255),f,b
  4160   001892  4B92               	infsnz	??_atoi& (0+255),f,b
  4161   001894  2B93               	incf	(??_atoi+1)& (0+255),f,b
  4162   001896  C092  F090         	movff	??_atoi,?_atoi
  4163   00189A  C093  F091         	movff	??_atoi+1,?_atoi+1
  4164   00189E  EF55  F00C         	goto	l1273
  4165   0018A2                     l1270:
  4166                           
  4167                           ; BSR set to: 0
  4168   0018A2  C097  F090         	movff	atoi@n,?_atoi
  4169   0018A6  C098  F091         	movff	atoi@n+1,?_atoi+1
  4170   0018AA                     l1273:
  4171                           
  4172                           ; BSR set to: 0
  4173   0018AA  0012               	return		;funcret
  4174   0018AC                     __end_of_atoi:
  4175                           	callstack 0
  4176                           
  4177 ;; *************** function _isspace *****************
  4178 ;; Defined at:
  4179 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/isspace.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  c               2   10[BANK0 ] int 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  2   10[BANK0 ] int 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4193 ;;      Params:         0       2       0       0       0       0       0
  4194 ;;      Locals:         0       1       0       0       0       0       0
  4195 ;;      Temps:          0       2       0       0       0       0       0
  4196 ;;      Totals:         0       5       0       0       0       0       0
  4197 ;;Total ram usage:        5 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 13
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_atoi
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text23
  4208   002648                     __ptext23:
  4209                           	callstack 0
  4210   002648                     _isspace:
  4211                           	callstack 11
  4212   002648  0E01               	movlw	1
  4213   00264A  0100               	movlb	0	; () banked
  4214   00264C  6F8E               	movwf	_isspace$1002& (0+255),b
  4215   00264E                     
  4216                           ; BSR set to: 0
  4217   00264E  0E20               	movlw	32
  4218   002650  198A               	xorwf	isspace@c& (0+255),w,b
  4219   002652  118B               	iorwf	(isspace@c+1)& (0+255),w,b
  4220   002654  B4D8               	btfsc	status,2,c
  4221   002656  EF2F  F013         	goto	u3731
  4222   00265A  EF31  F013         	goto	u3730
  4223   00265E                     u3731:
  4224   00265E  EF44  F013         	goto	l4128
  4225   002662                     u3730:
  4226   002662                     
  4227                           ; BSR set to: 0
  4228   002662  0EF7               	movlw	247
  4229   002664  258A               	addwf	isspace@c& (0+255),w,b
  4230   002666  6F8C               	movwf	??_isspace& (0+255),b
  4231   002668  0EFF               	movlw	255
  4232   00266A  218B               	addwfc	(isspace@c+1)& (0+255),w,b
  4233   00266C  6F8D               	movwf	(??_isspace+1)& (0+255),b
  4234   00266E  518D               	movf	(??_isspace+1)& (0+255),w,b
  4235   002670  E109               	bnz	u3740
  4236   002672  0E05               	movlw	5
  4237   002674  5D8C               	subwf	??_isspace& (0+255),w,b
  4238   002676  A0D8               	btfss	status,0,c
  4239   002678  EF40  F013         	goto	u3741
  4240   00267C  EF42  F013         	goto	u3740
  4241   002680                     u3741:
  4242   002680  EF44  F013         	goto	l4128
  4243   002684                     u3740:
  4244   002684                     
  4245                           ; BSR set to: 0
  4246   002684  0E00               	movlw	0
  4247   002686  6F8E               	movwf	_isspace$1002& (0+255),b
  4248   002688                     l4128:
  4249                           
  4250                           ; BSR set to: 0
  4251   002688  C08E  F08A         	movff	_isspace$1002,?_isspace
  4252   00268C  6B8B               	clrf	(?_isspace+1)& (0+255),b
  4253   00268E                     
  4254                           ; BSR set to: 0
  4255   00268E  0012               	return		;funcret
  4256   002690                     __end_of_isspace:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function _isdigit *****************
  4260 ;; Defined at:
  4261 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/isdigit.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  c               2   10[BANK0 ] int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2   10[BANK0 ] int 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4275 ;;      Params:         0       2       0       0       0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0
  4277 ;;      Temps:          0       2       0       0       0       0       0
  4278 ;;      Totals:         0       4       0       0       0       0       0
  4279 ;;Total ram usage:        4 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 13
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_vfpfcnvrt
  4286 ;;		_atoi
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text24
  4291   00293A                     __ptext24:
  4292                           	callstack 0
  4293   00293A                     _isdigit:
  4294                           	callstack 12
  4295   00293A  0ED0               	movlw	208
  4296   00293C  0100               	movlb	0	; () banked
  4297   00293E  258A               	addwf	isdigit@c& (0+255),w,b
  4298   002940  6F8C               	movwf	??_isdigit& (0+255),b
  4299   002942  0EFF               	movlw	255
  4300   002944  218B               	addwfc	(isdigit@c+1)& (0+255),w,b
  4301   002946  6F8D               	movwf	(??_isdigit+1)& (0+255),b
  4302   002948  518D               	movf	(??_isdigit+1)& (0+255),w,b
  4303   00294A  E10A               	bnz	u3710
  4304   00294C  0E0A               	movlw	10
  4305   00294E  5D8C               	subwf	??_isdigit& (0+255),w,b
  4306   002950  A0D8               	btfss	status,0,c
  4307   002952  EFAD  F014         	goto	u3711
  4308   002956  EFB0  F014         	goto	u3710
  4309   00295A                     u3711:
  4310   00295A  0E01               	movlw	1
  4311   00295C  EFB1  F014         	goto	u3720
  4312   002960                     u3710:
  4313   002960  0E00               	movlw	0
  4314   002962                     u3720:
  4315   002962  6F8A               	movwf	?_isdigit& (0+255),b
  4316   002964  6B8B               	clrf	(?_isdigit+1)& (0+255),b
  4317   002966                     
  4318                           ; BSR set to: 0
  4319   002966  0012               	return		;funcret
  4320   002968                     __end_of_isdigit:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function ___wmul *****************
  4324 ;; Defined at:
  4325 ;;		line 15 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/Umul16.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  multiplier      2   10[BANK0 ] unsigned int 
  4328 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  product         2   14[BANK0 ] unsigned int 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  2   10[BANK0 ] unsigned int 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0, prodl, prodh
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4340 ;;      Params:         0       4       0       0       0       0       0
  4341 ;;      Locals:         0       2       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0
  4343 ;;      Totals:         0       6       0       0       0       0       0
  4344 ;;Total ram usage:        6 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 13
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_atoi
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text25
  4355   002994                     __ptext25:
  4356                           	callstack 0
  4357   002994                     ___wmul:
  4358                           	callstack 11
  4359   002994  0100               	movlb	0	; () banked
  4360   002996  518A               	movf	___wmul@multiplier& (0+255),w,b
  4361   002998  038C               	mulwf	___wmul@multiplicand& (0+255),b
  4362   00299A  CFF3 F08E          	movff	prodl,___wmul@product
  4363   00299E  CFF4 F08F          	movff	prodh,___wmul@product+1
  4364   0029A2  518A               	movf	___wmul@multiplier& (0+255),w,b
  4365   0029A4  038D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4366   0029A6  50F3               	movf	243,w,c
  4367   0029A8  278F               	addwf	(___wmul@product+1)& (0+255),f,b
  4368   0029AA  518B               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4369   0029AC  038C               	mulwf	___wmul@multiplicand& (0+255),b
  4370   0029AE  50F3               	movf	243,w,c
  4371   0029B0  278F               	addwf	(___wmul@product+1)& (0+255),f,b
  4372   0029B2                     
  4373                           ; BSR set to: 0
  4374   0029B2  C08E  F08A         	movff	___wmul@product,?___wmul
  4375   0029B6  C08F  F08B         	movff	___wmul@product+1,?___wmul+1
  4376   0029BA                     
  4377                           ; BSR set to: 0
  4378   0029BA  0012               	return		;funcret
  4379   0029BC                     __end_of___wmul:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _lcd_str *****************
  4383 ;; Defined at:
  4384 ;;		line 76 in file "lcd.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  str             2   12[BANK0 ] PTR const unsigned char 
  4387 ;;		 -> buffer(10), 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  i               1   14[BANK0 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4399 ;;      Params:         0       2       0       0       0       0       0
  4400 ;;      Locals:         0       1       0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0
  4402 ;;      Totals:         0       3       0       0       0       0       0
  4403 ;;Total ram usage:        3 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 15
  4406 ;; This function calls:
  4407 ;;		_lcd_dat
  4408 ;; This function is called by:
  4409 ;;		_show_line2
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text26
  4414   00281A                     __ptext26:
  4415                           	callstack 0
  4416   00281A                     _lcd_str:
  4417                           	callstack 13
  4418   00281A                     
  4419                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  4420   00281A  0E00               	movlw	0
  4421   00281C  0100               	movlb	0	; () banked
  4422   00281E  6F8E               	movwf	lcd_str@i& (0+255),b
  4423                           
  4424                           ;lcd.c: 80:  while(str[i] != 0 )
  4425   002820  EF1D  F014         	goto	l3276
  4426   002824                     l3272:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  4430   002824  518E               	movf	lcd_str@i& (0+255),w,b
  4431   002826  258C               	addwf	lcd_str@str& (0+255),w,b
  4432   002828  6ED9               	movwf	fsr2l,c
  4433   00282A  0E00               	movlw	0
  4434   00282C  218D               	addwfc	(lcd_str@str+1)& (0+255),w,b
  4435   00282E  6EDA               	movwf	fsr2h,c
  4436   002830  50DF               	movf	indf2,w,c
  4437   002832  ECF1  F014         	call	_lcd_dat
  4438   002836                     
  4439                           ;lcd.c: 83:    i++;
  4440   002836  0100               	movlb	0	; () banked
  4441   002838  2B8E               	incf	lcd_str@i& (0+255),f,b
  4442   00283A                     l3276:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;lcd.c: 80:  while(str[i] != 0 )
  4446   00283A  518E               	movf	lcd_str@i& (0+255),w,b
  4447   00283C  258C               	addwf	lcd_str@str& (0+255),w,b
  4448   00283E  6ED9               	movwf	fsr2l,c
  4449   002840  0E00               	movlw	0
  4450   002842  218D               	addwfc	(lcd_str@str+1)& (0+255),w,b
  4451   002844  6EDA               	movwf	fsr2h,c
  4452   002846  50DF               	movf	indf2,w,c
  4453   002848  A4D8               	btfss	status,2,c
  4454   00284A  EF29  F014         	goto	u2561
  4455   00284E  EF2B  F014         	goto	u2560
  4456   002852                     u2561:
  4457   002852  EF12  F014         	goto	l3272
  4458   002856                     u2560:
  4459   002856                     
  4460                           ; BSR set to: 0
  4461   002856  0012               	return		;funcret
  4462   002858                     __end_of_lcd_str:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _lcd_dat *****************
  4466 ;; Defined at:
  4467 ;;		line 45 in file "lcd.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  val             1    wreg     unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  val             1   11[BANK0 ] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      void 
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4481 ;;      Params:         0       0       0       0       0       0       0
  4482 ;;      Locals:         0       1       0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0
  4484 ;;      Totals:         0       1       0       0       0       0       0
  4485 ;;Total ram usage:        1 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; Hardware stack levels required when called: 14
  4488 ;; This function calls:
  4489 ;;		_lcd_wr
  4490 ;; This function is called by:
  4491 ;;		_lcd_str
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text27
  4496   0029E2                     __ptext27:
  4497                           	callstack 0
  4498   0029E2                     _lcd_dat:
  4499                           	callstack 13
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;incstack = 0
  4503                           ;lcd_dat@val stored from wreg
  4504   0029E2  0100               	movlb	0	; () banked
  4505   0029E4  6F8B               	movwf	lcd_dat@val& (0+255),b
  4506   0029E6                     
  4507                           ;lcd.c: 45: void lcd_dat(unsigned char val);lcd.c: 46: {;lcd.c: 47:  PORTEbits.RE1=1;
  4508   0029E6  8284               	bsf	132,1,c	;volatile
  4509   0029E8                     
  4510                           ;lcd.c: 48:     lcd_wr(val);
  4511   0029E8  0100               	movlb	0	; () banked
  4512   0029EA  518B               	movf	lcd_dat@val& (0+255),w,b
  4513   0029EC  ECB5  F015         	call	_lcd_wr
  4514   0029F0                     
  4515                           ;lcd.c: 49:     PORTEbits.RE2=1;
  4516   0029F0  8484               	bsf	132,2,c	;volatile
  4517   0029F2                     
  4518                           ;lcd.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4519   0029F2  0E0D               	movlw	13
  4520   0029F4                     u4457:
  4521   0029F4  2EE8               	decfsz	wreg,f,c
  4522   0029F6  D7FE               	bra	u4457
  4523   0029F8  F000               	nop	
  4524   0029FA                     
  4525                           ;lcd.c: 51:     PORTEbits.RE1=0;
  4526   0029FA  9284               	bcf	132,1,c	;volatile
  4527   0029FC                     
  4528                           ;lcd.c: 52:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4529   0029FC  0E0D               	movlw	13
  4530   0029FE                     u4467:
  4531   0029FE  2EE8               	decfsz	wreg,f,c
  4532   002A00  D7FE               	bra	u4467
  4533   002A02  F000               	nop	
  4534   002A04                     
  4535                           ;lcd.c: 53:  PORTEbits.RE1=1;
  4536   002A04  8284               	bsf	132,1,c	;volatile
  4537   002A06  0012               	return		;funcret
  4538   002A08                     __end_of_lcd_dat:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _lcd_cmd *****************
  4542 ;; Defined at:
  4543 ;;		line 34 in file "lcd.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  val             1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  val             1   11[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4557 ;;      Params:         0       0       0       0       0       0       0
  4558 ;;      Locals:         0       1       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0
  4560 ;;      Totals:         0       1       0       0       0       0       0
  4561 ;;Total ram usage:        1 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 14
  4564 ;; This function calls:
  4565 ;;		_lcd_wr
  4566 ;; This function is called by:
  4567 ;;		_show_line2
  4568 ;;		_lcd_init
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text28
  4573   002A08                     __ptext28:
  4574                           	callstack 0
  4575   002A08                     _lcd_cmd:
  4576                           	callstack 14
  4577                           
  4578                           ;incstack = 0
  4579                           ;lcd_cmd@val stored from wreg
  4580   002A08  0100               	movlb	0	; () banked
  4581   002A0A  6F8B               	movwf	lcd_cmd@val& (0+255),b
  4582   002A0C                     
  4583                           ;lcd.c: 34: void lcd_cmd(unsigned char val);lcd.c: 35: {;lcd.c: 36:  PORTEbits.RE1=1;
  4584   002A0C  8284               	bsf	132,1,c	;volatile
  4585   002A0E                     
  4586                           ;lcd.c: 37:     lcd_wr(val);
  4587   002A0E  0100               	movlb	0	; () banked
  4588   002A10  518B               	movf	lcd_cmd@val& (0+255),w,b
  4589   002A12  ECB5  F015         	call	_lcd_wr
  4590   002A16                     
  4591                           ;lcd.c: 38:     PORTEbits.RE2=0;
  4592   002A16  9484               	bcf	132,2,c	;volatile
  4593   002A18                     
  4594                           ;lcd.c: 39:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4595   002A18  0E0D               	movlw	13
  4596   002A1A                     u4477:
  4597   002A1A  2EE8               	decfsz	wreg,f,c
  4598   002A1C  D7FE               	bra	u4477
  4599   002A1E  F000               	nop	
  4600   002A20                     
  4601                           ;lcd.c: 40:     PORTEbits.RE1=0;
  4602   002A20  9284               	bcf	132,1,c	;volatile
  4603   002A22                     
  4604                           ;lcd.c: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4605   002A22  0E0D               	movlw	13
  4606   002A24                     u4487:
  4607   002A24  2EE8               	decfsz	wreg,f,c
  4608   002A26  D7FE               	bra	u4487
  4609   002A28  F000               	nop	
  4610   002A2A                     
  4611                           ;lcd.c: 42:  PORTEbits.RE1=1;
  4612   002A2A  8284               	bsf	132,1,c	;volatile
  4613   002A2C  0012               	return		;funcret
  4614   002A2E                     __end_of_lcd_cmd:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function _lcd_wr *****************
  4618 ;; Defined at:
  4619 ;;		line 29 in file "lcd.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  val             1    wreg     unsigned char 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  val             1   10[BANK0 ] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4633 ;;      Params:         0       0       0       0       0       0       0
  4634 ;;      Locals:         0       1       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0
  4636 ;;      Totals:         0       1       0       0       0       0       0
  4637 ;;Total ram usage:        1 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 13
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_lcd_cmd
  4644 ;;		_lcd_dat
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text29
  4649   002B6A                     __ptext29:
  4650                           	callstack 0
  4651   002B6A                     _lcd_wr:
  4652                           	callstack 14
  4653                           
  4654                           ;incstack = 0
  4655                           ;lcd_wr@val stored from wreg
  4656   002B6A  0100               	movlb	0	; () banked
  4657   002B6C  6F8A               	movwf	lcd_wr@val& (0+255),b
  4658   002B6E                     
  4659                           ;lcd.c: 29: void lcd_wr(unsigned char val);lcd.c: 30: {;lcd.c: 31:   PORTD=val;
  4660   002B6E  C08A  FF83         	movff	lcd_wr@val,3971	;volatile
  4661   002B72  0012               	return		;funcret
  4662   002B74                     __end_of_lcd_wr:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _show_display *****************
  4666 ;; Defined at:
  4667 ;;		line 71 in file "main.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4681 ;;      Params:         0       0       0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 14
  4688 ;; This function calls:
  4689 ;;		___awdiv
  4690 ;;		___awmod
  4691 ;; This function is called by:
  4692 ;;		_loop
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text30
  4697   002340                     __ptext30:
  4698                           	callstack 0
  4699   002340                     _show_display:
  4700                           	callstack 15
  4701   002340                     
  4702                           ;main.c: 73:     display1 = minuto / 10;
  4703   002340  C07C  F08A         	movff	_minuto,___awdiv@dividend
  4704   002344  0100               	movlb	0	; () banked
  4705   002346  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  4706   002348  0E00               	movlw	0
  4707   00234A  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4708   00234C  0E0A               	movlw	10
  4709   00234E  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4710   002350  EC6C  F00F         	call	___awdiv	;wreg free
  4711   002354  0100               	movlb	0	; () banked
  4712   002356  518A               	movf	?___awdiv& (0+255),w,b
  4713   002358  6FED               	movwf	_display1& (0+255),b
  4714                           
  4715                           ;main.c: 74:     display2 = minuto % 10;
  4716   00235A  C07C  F08A         	movff	_minuto,___awmod@dividend
  4717   00235E  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  4718   002360  0E00               	movlw	0
  4719   002362  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  4720   002364  0E0A               	movlw	10
  4721   002366  6F8C               	movwf	___awmod@divisor& (0+255),b
  4722   002368  EC2B  F010         	call	___awmod	;wreg free
  4723   00236C  0100               	movlb	0	; () banked
  4724   00236E  518A               	movf	?___awmod& (0+255),w,b
  4725   002370  6FEC               	movwf	_display2& (0+255),b
  4726                           
  4727                           ;main.c: 75:     display3 = segundo / 10;
  4728   002372  C07B  F08A         	movff	_segundo,___awdiv@dividend
  4729   002376  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  4730   002378  0E00               	movlw	0
  4731   00237A  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  4732   00237C  0E0A               	movlw	10
  4733   00237E  6F8C               	movwf	___awdiv@divisor& (0+255),b
  4734   002380  EC6C  F00F         	call	___awdiv	;wreg free
  4735   002384  0100               	movlb	0	; () banked
  4736   002386  518A               	movf	?___awdiv& (0+255),w,b
  4737   002388  6FEB               	movwf	_display3& (0+255),b
  4738                           
  4739                           ;main.c: 76:     display4 = segundo % 10;
  4740   00238A  C07B  F08A         	movff	_segundo,___awmod@dividend
  4741   00238E  6B8B               	clrf	(___awmod@dividend+1)& (0+255),b
  4742   002390  0E00               	movlw	0
  4743   002392  6F8D               	movwf	(___awmod@divisor+1)& (0+255),b
  4744   002394  0E0A               	movlw	10
  4745   002396  6F8C               	movwf	___awmod@divisor& (0+255),b
  4746   002398  EC2B  F010         	call	___awmod	;wreg free
  4747   00239C  0100               	movlb	0	; () banked
  4748   00239E  518A               	movf	?___awmod& (0+255),w,b
  4749   0023A0  6FEA               	movwf	_display4& (0+255),b
  4750   0023A2                     
  4751                           ; BSR set to: 0
  4752   0023A2  0012               	return		;funcret
  4753   0023A4                     __end_of_show_display:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function ___awmod *****************
  4757 ;; Defined at:
  4758 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/awmod.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  dividend        2   10[BANK0 ] int 
  4761 ;;  divisor         2   12[BANK0 ] int 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  sign            1   15[BANK0 ] unsigned char 
  4764 ;;  counter         1   14[BANK0 ] unsigned char 
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  2   10[BANK0 ] int 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2, status,0
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4774 ;;      Params:         0       4       0       0       0       0       0
  4775 ;;      Locals:         0       2       0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0
  4777 ;;      Totals:         0       6       0       0       0       0       0
  4778 ;;Total ram usage:        6 bytes
  4779 ;; Hardware stack levels used: 1
  4780 ;; Hardware stack levels required when called: 13
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_show_display
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text31
  4789   002056                     __ptext31:
  4790                           	callstack 0
  4791   002056                     ___awmod:
  4792                           	callstack 15
  4793   002056  0E00               	movlw	0
  4794   002058  0100               	movlb	0	; () banked
  4795   00205A  6F8F               	movwf	___awmod@sign& (0+255),b
  4796   00205C                     
  4797                           ; BSR set to: 0
  4798   00205C  BF8B               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4799   00205E  EF35  F010         	goto	u2630
  4800   002062  EF33  F010         	goto	u2631
  4801   002066                     u2631:
  4802   002066  EF3B  F010         	goto	l3330
  4803   00206A                     u2630:
  4804   00206A                     
  4805                           ; BSR set to: 0
  4806   00206A  6D8A               	negf	___awmod@dividend& (0+255),b
  4807   00206C  1F8B               	comf	(___awmod@dividend+1)& (0+255),f,b
  4808   00206E  B0D8               	btfsc	status,0,c
  4809   002070  2B8B               	incf	(___awmod@dividend+1)& (0+255),f,b
  4810   002072                     
  4811                           ; BSR set to: 0
  4812   002072  0E01               	movlw	1
  4813   002074  6F8F               	movwf	___awmod@sign& (0+255),b
  4814   002076                     l3330:
  4815                           
  4816                           ; BSR set to: 0
  4817   002076  BF8D               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4818   002078  EF42  F010         	goto	u2640
  4819   00207C  EF40  F010         	goto	u2641
  4820   002080                     u2641:
  4821   002080  EF46  F010         	goto	l3334
  4822   002084                     u2640:
  4823   002084                     
  4824                           ; BSR set to: 0
  4825   002084  6D8C               	negf	___awmod@divisor& (0+255),b
  4826   002086  1F8D               	comf	(___awmod@divisor+1)& (0+255),f,b
  4827   002088  B0D8               	btfsc	status,0,c
  4828   00208A  2B8D               	incf	(___awmod@divisor+1)& (0+255),f,b
  4829   00208C                     l3334:
  4830                           
  4831                           ; BSR set to: 0
  4832   00208C  518C               	movf	___awmod@divisor& (0+255),w,b
  4833   00208E  118D               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4834   002090  B4D8               	btfsc	status,2,c
  4835   002092  EF4D  F010         	goto	u2651
  4836   002096  EF4F  F010         	goto	u2650
  4837   00209A                     u2651:
  4838   00209A  EF73  F010         	goto	l3350
  4839   00209E                     u2650:
  4840   00209E                     
  4841                           ; BSR set to: 0
  4842   00209E  0E01               	movlw	1
  4843   0020A0  6F8E               	movwf	___awmod@counter& (0+255),b
  4844   0020A2  EF57  F010         	goto	l3340
  4845   0020A6                     l3338:
  4846                           
  4847                           ; BSR set to: 0
  4848   0020A6  90D8               	bcf	status,0,c
  4849   0020A8  378C               	rlcf	___awmod@divisor& (0+255),f,b
  4850   0020AA  378D               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4851   0020AC  2B8E               	incf	___awmod@counter& (0+255),f,b
  4852   0020AE                     l3340:
  4853                           
  4854                           ; BSR set to: 0
  4855   0020AE  AF8D               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4856   0020B0  EF5C  F010         	goto	u2661
  4857   0020B4  EF5E  F010         	goto	u2660
  4858   0020B8                     u2661:
  4859   0020B8  EF53  F010         	goto	l3338
  4860   0020BC                     u2660:
  4861   0020BC                     l3342:
  4862                           
  4863                           ; BSR set to: 0
  4864   0020BC  518C               	movf	___awmod@divisor& (0+255),w,b
  4865   0020BE  5D8A               	subwf	___awmod@dividend& (0+255),w,b
  4866   0020C0  518D               	movf	(___awmod@divisor+1)& (0+255),w,b
  4867   0020C2  598B               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4868   0020C4  A0D8               	btfss	status,0,c
  4869   0020C6  EF67  F010         	goto	u2671
  4870   0020CA  EF69  F010         	goto	u2670
  4871   0020CE                     u2671:
  4872   0020CE  EF6D  F010         	goto	l3346
  4873   0020D2                     u2670:
  4874   0020D2                     
  4875                           ; BSR set to: 0
  4876   0020D2  518C               	movf	___awmod@divisor& (0+255),w,b
  4877   0020D4  5F8A               	subwf	___awmod@dividend& (0+255),f,b
  4878   0020D6  518D               	movf	(___awmod@divisor+1)& (0+255),w,b
  4879   0020D8  5B8B               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4880   0020DA                     l3346:
  4881                           
  4882                           ; BSR set to: 0
  4883   0020DA  90D8               	bcf	status,0,c
  4884   0020DC  338D               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4885   0020DE  338C               	rrcf	___awmod@divisor& (0+255),f,b
  4886   0020E0                     
  4887                           ; BSR set to: 0
  4888   0020E0  2F8E               	decfsz	___awmod@counter& (0+255),f,b
  4889   0020E2  EF5E  F010         	goto	l3342
  4890   0020E6                     l3350:
  4891                           
  4892                           ; BSR set to: 0
  4893   0020E6  518F               	movf	___awmod@sign& (0+255),w,b
  4894   0020E8  B4D8               	btfsc	status,2,c
  4895   0020EA  EF79  F010         	goto	u2681
  4896   0020EE  EF7B  F010         	goto	u2680
  4897   0020F2                     u2681:
  4898   0020F2  EF7F  F010         	goto	l3354
  4899   0020F6                     u2680:
  4900   0020F6                     
  4901                           ; BSR set to: 0
  4902   0020F6  6D8A               	negf	___awmod@dividend& (0+255),b
  4903   0020F8  1F8B               	comf	(___awmod@dividend+1)& (0+255),f,b
  4904   0020FA  B0D8               	btfsc	status,0,c
  4905   0020FC  2B8B               	incf	(___awmod@dividend+1)& (0+255),f,b
  4906   0020FE                     l3354:
  4907                           
  4908                           ; BSR set to: 0
  4909   0020FE  C08A  F08A         	movff	___awmod@dividend,?___awmod
  4910   002102  C08B  F08B         	movff	___awmod@dividend+1,?___awmod+1
  4911   002106                     
  4912                           ; BSR set to: 0
  4913   002106  0012               	return		;funcret
  4914   002108                     __end_of___awmod:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function ___awdiv *****************
  4918 ;; Defined at:
  4919 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/awdiv.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  dividend        2   10[BANK0 ] int 
  4922 ;;  divisor         2   12[BANK0 ] int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  quotient        2   16[BANK0 ] int 
  4925 ;;  sign            1   15[BANK0 ] unsigned char 
  4926 ;;  counter         1   14[BANK0 ] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  2   10[BANK0 ] int 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4936 ;;      Params:         0       4       0       0       0       0       0
  4937 ;;      Locals:         0       4       0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0
  4939 ;;      Totals:         0       8       0       0       0       0       0
  4940 ;;Total ram usage:        8 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 13
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_show_display
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text32
  4951   001ED8                     __ptext32:
  4952                           	callstack 0
  4953   001ED8                     ___awdiv:
  4954                           	callstack 15
  4955   001ED8  0E00               	movlw	0
  4956   001EDA  0100               	movlb	0	; () banked
  4957   001EDC  6F8F               	movwf	___awdiv@sign& (0+255),b
  4958   001EDE                     
  4959                           ; BSR set to: 0
  4960   001EDE  BF8D               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  4961   001EE0  EF76  F00F         	goto	u2570
  4962   001EE4  EF74  F00F         	goto	u2571
  4963   001EE8                     u2571:
  4964   001EE8  EF7C  F00F         	goto	l3286
  4965   001EEC                     u2570:
  4966   001EEC                     
  4967                           ; BSR set to: 0
  4968   001EEC  6D8C               	negf	___awdiv@divisor& (0+255),b
  4969   001EEE  1F8D               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4970   001EF0  B0D8               	btfsc	status,0,c
  4971   001EF2  2B8D               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4972   001EF4                     
  4973                           ; BSR set to: 0
  4974   001EF4  0E01               	movlw	1
  4975   001EF6  6F8F               	movwf	___awdiv@sign& (0+255),b
  4976   001EF8                     l3286:
  4977                           
  4978                           ; BSR set to: 0
  4979   001EF8  BF8B               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  4980   001EFA  EF83  F00F         	goto	u2580
  4981   001EFE  EF81  F00F         	goto	u2581
  4982   001F02                     u2581:
  4983   001F02  EF89  F00F         	goto	l3292
  4984   001F06                     u2580:
  4985   001F06                     
  4986                           ; BSR set to: 0
  4987   001F06  6D8A               	negf	___awdiv@dividend& (0+255),b
  4988   001F08  1F8B               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4989   001F0A  B0D8               	btfsc	status,0,c
  4990   001F0C  2B8B               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4991   001F0E                     
  4992                           ; BSR set to: 0
  4993   001F0E  0E01               	movlw	1
  4994   001F10  1B8F               	xorwf	___awdiv@sign& (0+255),f,b
  4995   001F12                     l3292:
  4996                           
  4997                           ; BSR set to: 0
  4998   001F12  0E00               	movlw	0
  4999   001F14  6F91               	movwf	(___awdiv@quotient+1)& (0+255),b
  5000   001F16  0E00               	movlw	0
  5001   001F18  6F90               	movwf	___awdiv@quotient& (0+255),b
  5002   001F1A                     
  5003                           ; BSR set to: 0
  5004   001F1A  518C               	movf	___awdiv@divisor& (0+255),w,b
  5005   001F1C  118D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5006   001F1E  B4D8               	btfsc	status,2,c
  5007   001F20  EF94  F00F         	goto	u2591
  5008   001F24  EF96  F00F         	goto	u2590
  5009   001F28                     u2591:
  5010   001F28  EFBE  F00F         	goto	l3314
  5011   001F2C                     u2590:
  5012   001F2C                     
  5013                           ; BSR set to: 0
  5014   001F2C  0E01               	movlw	1
  5015   001F2E  6F8E               	movwf	___awdiv@counter& (0+255),b
  5016   001F30  EF9E  F00F         	goto	l3300
  5017   001F34                     l3298:
  5018                           
  5019                           ; BSR set to: 0
  5020   001F34  90D8               	bcf	status,0,c
  5021   001F36  378C               	rlcf	___awdiv@divisor& (0+255),f,b
  5022   001F38  378D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5023   001F3A  2B8E               	incf	___awdiv@counter& (0+255),f,b
  5024   001F3C                     l3300:
  5025                           
  5026                           ; BSR set to: 0
  5027   001F3C  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5028   001F3E  EFA3  F00F         	goto	u2601
  5029   001F42  EFA5  F00F         	goto	u2600
  5030   001F46                     u2601:
  5031   001F46  EF9A  F00F         	goto	l3298
  5032   001F4A                     u2600:
  5033   001F4A                     l3302:
  5034                           
  5035                           ; BSR set to: 0
  5036   001F4A  90D8               	bcf	status,0,c
  5037   001F4C  3790               	rlcf	___awdiv@quotient& (0+255),f,b
  5038   001F4E  3791               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5039   001F50                     
  5040                           ; BSR set to: 0
  5041   001F50  518C               	movf	___awdiv@divisor& (0+255),w,b
  5042   001F52  5D8A               	subwf	___awdiv@dividend& (0+255),w,b
  5043   001F54  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5044   001F56  598B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5045   001F58  A0D8               	btfss	status,0,c
  5046   001F5A  EFB1  F00F         	goto	u2611
  5047   001F5E  EFB3  F00F         	goto	u2610
  5048   001F62                     u2611:
  5049   001F62  EFB8  F00F         	goto	l3310
  5050   001F66                     u2610:
  5051   001F66                     
  5052                           ; BSR set to: 0
  5053   001F66  518C               	movf	___awdiv@divisor& (0+255),w,b
  5054   001F68  5F8A               	subwf	___awdiv@dividend& (0+255),f,b
  5055   001F6A  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5056   001F6C  5B8B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5057   001F6E                     
  5058                           ; BSR set to: 0
  5059   001F6E  8190               	bsf	___awdiv@quotient& (0+255),0,b
  5060   001F70                     l3310:
  5061                           
  5062                           ; BSR set to: 0
  5063   001F70  90D8               	bcf	status,0,c
  5064   001F72  338D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5065   001F74  338C               	rrcf	___awdiv@divisor& (0+255),f,b
  5066   001F76                     
  5067                           ; BSR set to: 0
  5068   001F76  2F8E               	decfsz	___awdiv@counter& (0+255),f,b
  5069   001F78  EFA5  F00F         	goto	l3302
  5070   001F7C                     l3314:
  5071                           
  5072                           ; BSR set to: 0
  5073   001F7C  518F               	movf	___awdiv@sign& (0+255),w,b
  5074   001F7E  B4D8               	btfsc	status,2,c
  5075   001F80  EFC4  F00F         	goto	u2621
  5076   001F84  EFC6  F00F         	goto	u2620
  5077   001F88                     u2621:
  5078   001F88  EFCA  F00F         	goto	l3318
  5079   001F8C                     u2620:
  5080   001F8C                     
  5081                           ; BSR set to: 0
  5082   001F8C  6D90               	negf	___awdiv@quotient& (0+255),b
  5083   001F8E  1F91               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5084   001F90  B0D8               	btfsc	status,0,c
  5085   001F92  2B91               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5086   001F94                     l3318:
  5087                           
  5088                           ; BSR set to: 0
  5089   001F94  C090  F08A         	movff	___awdiv@quotient,?___awdiv
  5090   001F98  C091  F08B         	movff	___awdiv@quotient+1,?___awdiv+1
  5091   001F9C                     
  5092                           ; BSR set to: 0
  5093   001F9C  0012               	return		;funcret
  5094   001F9E                     __end_of___awdiv:
  5095                           	callstack 0
  5096                           
  5097 ;; *************** function _f_interrupt_high *****************
  5098 ;; Defined at:
  5099 ;;		line 40 in file "Interrupt.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5113 ;;      Params:         0       0       0       0       0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0
  5115 ;;      Temps:          0      10       0       0       0       0       0
  5116 ;;      Totals:         0      10       0       0       0       0       0
  5117 ;;Total ram usage:       10 bytes
  5118 ;; Hardware stack levels used: 1
  5119 ;; Hardware stack levels required when called: 12
  5120 ;; This function calls:
  5121 ;;		_f_timers
  5122 ;; This function is called by:
  5123 ;;		Interrupt level 2
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	intcode
  5128   000008                     __pintcode:
  5129                           	callstack 0
  5130   000008                     _f_interrupt_high:
  5131                           	callstack 8
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;incstack = 0
  5135   000008  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5136   00000A  EDA0  F00D         	call	int_func,f	;refresh shadow registers
  5137                           
  5138                           	psect	intcode_body
  5139   001B40                     __pintcode_body:
  5140                           	callstack 8
  5141   001B40                     int_func:
  5142                           	callstack 8
  5143   001B40  0006               	pop		; remove dummy address from shadow register refresh
  5144   001B42  CFE1 F080          	movff	fsr1l,??_f_interrupt_high
  5145   001B46  CFE2 F081          	movff	fsr1h,??_f_interrupt_high+1
  5146   001B4A  CFD9 F082          	movff	fsr2l,??_f_interrupt_high+2
  5147   001B4E  CFDA F083          	movff	fsr2h,??_f_interrupt_high+3
  5148   001B52  CFF3 F084          	movff	prodl,??_f_interrupt_high+4
  5149   001B56  CFF4 F085          	movff	prodh,??_f_interrupt_high+5
  5150   001B5A  CFF6 F086          	movff	tblptrl,??_f_interrupt_high+6
  5151   001B5E  CFF7 F087          	movff	tblptrh,??_f_interrupt_high+7
  5152   001B62  CFF8 F088          	movff	tblptru,??_f_interrupt_high+8
  5153   001B66  CFF5 F089          	movff	tablat,??_f_interrupt_high+9
  5154   001B6A                     
  5155                           ;Interrupt.c: 42:     if (TMR0IF && TMR0IE) {
  5156   001B6A  A4F2               	btfss	4082,2,c	;volatile
  5157   001B6C  EFBA  F00D         	goto	i2u428_41
  5158   001B70  EFBC  F00D         	goto	i2u428_40
  5159   001B74                     i2u428_41:
  5160   001B74  EFCA  F00D         	goto	i2l4554
  5161   001B78                     i2u428_40:
  5162   001B78  AAF2               	btfss	4082,5,c	;volatile
  5163   001B7A  EFC1  F00D         	goto	i2u429_41
  5164   001B7E  EFC3  F00D         	goto	i2u429_40
  5165   001B82                     i2u429_41:
  5166   001B82  EFCA  F00D         	goto	i2l4554
  5167   001B86                     i2u429_40:
  5168   001B86                     
  5169                           ;Interrupt.c: 43:         TMR0 += 0x06;
  5170   001B86  0E06               	movlw	6
  5171   001B88  26D6               	addwf	214,f,c	;volatile
  5172   001B8A  0E00               	movlw	0
  5173   001B8C  22D7               	addwfc	215,f,c	;volatile
  5174   001B8E                     
  5175                           ;Interrupt.c: 45:         f_timers();
  5176   001B8E  EC39  F00E         	call	_f_timers	;wreg free
  5177   001B92                     
  5178                           ;Interrupt.c: 48:         TMR0IF = 0x00;
  5179   001B92  94F2               	bcf	4082,2,c	;volatile
  5180   001B94                     i2l4554:
  5181                           
  5182                           ;Interrupt.c: 51:     if (INT0IF && INT0IE) {
  5183   001B94  A2F2               	btfss	4082,1,c	;volatile
  5184   001B96  EFCF  F00D         	goto	i2u430_41
  5185   001B9A  EFD1  F00D         	goto	i2u430_40
  5186   001B9E                     i2u430_41:
  5187   001B9E  EFD9  F00D         	goto	i2l283
  5188   001BA2                     i2u430_40:
  5189   001BA2  A8F2               	btfss	4082,4,c	;volatile
  5190   001BA4  EFD6  F00D         	goto	i2u431_41
  5191   001BA8  EFD8  F00D         	goto	i2u431_40
  5192   001BAC                     i2u431_41:
  5193   001BAC  EFD9  F00D         	goto	i2l283
  5194   001BB0                     i2u431_40:
  5195   001BB0                     
  5196                           ;Interrupt.c: 52:         INT0IF = 0;
  5197   001BB0  92F2               	bcf	4082,1,c	;volatile
  5198   001BB2                     i2l283:
  5199                           
  5200                           ;Interrupt.c: 55:     if (INT1IF && INT1IE) {
  5201   001BB2  A0F0               	btfss	4080,0,c	;volatile
  5202   001BB4  EFDE  F00D         	goto	i2u432_41
  5203   001BB8  EFE0  F00D         	goto	i2u432_40
  5204   001BBC                     i2u432_41:
  5205   001BBC  EFE8  F00D         	goto	i2l284
  5206   001BC0                     i2u432_40:
  5207   001BC0  A6F0               	btfss	4080,3,c	;volatile
  5208   001BC2  EFE5  F00D         	goto	i2u433_41
  5209   001BC6  EFE7  F00D         	goto	i2u433_40
  5210   001BCA                     i2u433_41:
  5211   001BCA  EFE8  F00D         	goto	i2l284
  5212   001BCE                     i2u433_40:
  5213   001BCE                     
  5214                           ;Interrupt.c: 56:         INT1IF = 0;
  5215   001BCE  90F0               	bcf	4080,0,c	;volatile
  5216   001BD0                     i2l284:
  5217                           
  5218                           ;Interrupt.c: 59:     if (INT2IF && INT2IE) {
  5219   001BD0  A2F0               	btfss	4080,1,c	;volatile
  5220   001BD2  EFED  F00D         	goto	i2u434_41
  5221   001BD6  EFEF  F00D         	goto	i2u434_40
  5222   001BDA                     i2u434_41:
  5223   001BDA  EFF7  F00D         	goto	i2l285
  5224   001BDE                     i2u434_40:
  5225   001BDE  A8F0               	btfss	4080,4,c	;volatile
  5226   001BE0  EFF4  F00D         	goto	i2u435_41
  5227   001BE4  EFF6  F00D         	goto	i2u435_40
  5228   001BE8                     i2u435_41:
  5229   001BE8  EFF7  F00D         	goto	i2l285
  5230   001BEC                     i2u435_40:
  5231   001BEC                     
  5232                           ;Interrupt.c: 60:         INT2IF = 0;
  5233   001BEC  92F0               	bcf	4080,1,c	;volatile
  5234   001BEE                     i2l285:
  5235                           
  5236                           ;Interrupt.c: 63:     if (ADIF && ADIE && PEIE) {
  5237   001BEE  AC9E               	btfss	3998,6,c	;volatile
  5238   001BF0  EFFC  F00D         	goto	i2u436_41
  5239   001BF4  EFFE  F00D         	goto	i2u436_40
  5240   001BF8                     i2u436_41:
  5241   001BF8  EF0D  F00E         	goto	i2l286
  5242   001BFC                     i2u436_40:
  5243   001BFC  AC9D               	btfss	3997,6,c	;volatile
  5244   001BFE  EF03  F00E         	goto	i2u437_41
  5245   001C02  EF05  F00E         	goto	i2u437_40
  5246   001C06                     i2u437_41:
  5247   001C06  EF0D  F00E         	goto	i2l286
  5248   001C0A                     i2u437_40:
  5249   001C0A  ACF2               	btfss	4082,6,c	;volatile
  5250   001C0C  EF0A  F00E         	goto	i2u438_41
  5251   001C10  EF0C  F00E         	goto	i2u438_40
  5252   001C14                     i2u438_41:
  5253   001C14  EF0D  F00E         	goto	i2l286
  5254   001C18                     i2u438_40:
  5255   001C18                     
  5256                           ;Interrupt.c: 64:         ADIF = 0;
  5257   001C18  9C9E               	bcf	3998,6,c	;volatile
  5258   001C1A                     i2l286:
  5259                           
  5260                           ;Interrupt.c: 67:     if (TMR2IF && TMR2IE && PEIE)
  5261   001C1A  A29E               	btfss	3998,1,c	;volatile
  5262   001C1C  EF12  F00E         	goto	i2u439_41
  5263   001C20  EF14  F00E         	goto	i2u439_40
  5264   001C24                     i2u439_41:
  5265   001C24  EF23  F00E         	goto	i2l288
  5266   001C28                     i2u439_40:
  5267   001C28  A29D               	btfss	3997,1,c	;volatile
  5268   001C2A  EF19  F00E         	goto	i2u440_41
  5269   001C2E  EF1B  F00E         	goto	i2u440_40
  5270   001C32                     i2u440_41:
  5271   001C32  EF23  F00E         	goto	i2l288
  5272   001C36                     i2u440_40:
  5273   001C36  ACF2               	btfss	4082,6,c	;volatile
  5274   001C38  EF20  F00E         	goto	i2u441_41
  5275   001C3C  EF22  F00E         	goto	i2u441_40
  5276   001C40                     i2u441_41:
  5277   001C40  EF23  F00E         	goto	i2l288
  5278   001C44                     i2u441_40:
  5279   001C44                     
  5280                           ;Interrupt.c: 68:     {;Interrupt.c: 70:         TMR2IF = 0;
  5281   001C44  929E               	bcf	3998,1,c	;volatile
  5282   001C46                     i2l288:
  5283   001C46  C089  FFF5         	movff	??_f_interrupt_high+9,tablat
  5284   001C4A  C088  FFF8         	movff	??_f_interrupt_high+8,tblptru
  5285   001C4E  C087  FFF7         	movff	??_f_interrupt_high+7,tblptrh
  5286   001C52  C086  FFF6         	movff	??_f_interrupt_high+6,tblptrl
  5287   001C56  C085  FFF4         	movff	??_f_interrupt_high+5,prodh
  5288   001C5A  C084  FFF3         	movff	??_f_interrupt_high+4,prodl
  5289   001C5E  C083  FFDA         	movff	??_f_interrupt_high+3,fsr2h
  5290   001C62  C082  FFD9         	movff	??_f_interrupt_high+2,fsr2l
  5291   001C66  C081  FFE2         	movff	??_f_interrupt_high+1,fsr1h
  5292   001C6A  C080  FFE1         	movff	??_f_interrupt_high,fsr1l
  5293   001C6E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5294   001C70  0011               	retfie		f
  5295   001C72                     __end_of_f_interrupt_high:
  5296                           	callstack 0
  5297                           
  5298 ;; *************** function _f_timers *****************
  5299 ;; Defined at:
  5300 ;;		line 108 in file "Interrupt.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5314 ;;      Params:         0       0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 11
  5321 ;; This function calls:
  5322 ;;		_ADC_maq
  5323 ;;		_calcula_minuto_e_segundo
  5324 ;;		_clock_regressive
  5325 ;;		_mux_display
  5326 ;;		_read_keyb
  5327 ;; This function is called by:
  5328 ;;		_f_interrupt_high
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text34
  5333   001C72                     __ptext34:
  5334                           	callstack 0
  5335   001C72                     _f_timers:
  5336                           	callstack 8
  5337   001C72                     
  5338                           ;Interrupt.c: 109:     static uint16_t counter1 = 1, counter2 = 1, counter3 = 1, counter
      +                          4 = 1, counter5 = 1;;Interrupt.c: 111:     RE0 ^= 1;
  5339   001C72  7084               	btg	3972,0,c	;volatile
  5340   001C74                     
  5341                           ;Interrupt.c: 113:     ADC_maq();
  5342   001C74  EC04  F012         	call	_ADC_maq	;wreg free
  5343   001C78                     
  5344                           ;Interrupt.c: 115:     if (counter1 < 5)
  5345   001C78  0101               	movlb	1	; () banked
  5346   001C7A  513C               	movf	(f_timers@counter1+1)& (0+255),w,b
  5347   001C7C  E107               	bnz	i2u421_41
  5348   001C7E  0E05               	movlw	5
  5349   001C80  5D3B               	subwf	f_timers@counter1& (0+255),w,b
  5350   001C82  B0D8               	btfsc	status,0,c
  5351   001C84  EF46  F00E         	goto	i2u421_41
  5352   001C88  EF48  F00E         	goto	i2u421_40
  5353   001C8C                     i2u421_41:
  5354   001C8C  EF4C  F00E         	goto	i2l4504
  5355   001C90                     i2u421_40:
  5356   001C90                     
  5357                           ; BSR set to: 1
  5358                           ;Interrupt.c: 116:     {;Interrupt.c: 117:         counter1++;
  5359   001C90  4B3B               	infsnz	f_timers@counter1& (0+255),f,b
  5360   001C92  2B3C               	incf	(f_timers@counter1+1)& (0+255),f,b
  5361                           
  5362                           ;Interrupt.c: 118:     }
  5363   001C94  EF53  F00E         	goto	i2l4508
  5364   001C98                     i2l4504:
  5365                           
  5366                           ; BSR set to: 1
  5367                           ;Interrupt.c: 121:     {;Interrupt.c: 122:         mux_display();
  5368   001C98  ECCF  F00F         	call	_mux_display	;wreg free
  5369   001C9C                     
  5370                           ;Interrupt.c: 123:         counter1 = 1;
  5371   001C9C  0E00               	movlw	0
  5372   001C9E  0101               	movlb	1	; () banked
  5373   001CA0  6F3C               	movwf	(f_timers@counter1+1)& (0+255),b
  5374   001CA2  0E01               	movlw	1
  5375   001CA4  6F3B               	movwf	f_timers@counter1& (0+255),b
  5376   001CA6                     i2l4508:
  5377                           
  5378                           ; BSR set to: 1
  5379                           ;Interrupt.c: 127:     if (counter2 < 10)
  5380   001CA6  513A               	movf	(f_timers@counter2+1)& (0+255),w,b
  5381   001CA8  E107               	bnz	i2u422_41
  5382   001CAA  0E0A               	movlw	10
  5383   001CAC  5D39               	subwf	f_timers@counter2& (0+255),w,b
  5384   001CAE  B0D8               	btfsc	status,0,c
  5385   001CB0  EF5C  F00E         	goto	i2u422_41
  5386   001CB4  EF5E  F00E         	goto	i2u422_40
  5387   001CB8                     i2u422_41:
  5388   001CB8  EF62  F00E         	goto	i2l4512
  5389   001CBC                     i2u422_40:
  5390   001CBC                     
  5391                           ; BSR set to: 1
  5392                           ;Interrupt.c: 128:     {;Interrupt.c: 129:         counter2++;
  5393   001CBC  4B39               	infsnz	f_timers@counter2& (0+255),f,b
  5394   001CBE  2B3A               	incf	(f_timers@counter2+1)& (0+255),f,b
  5395                           
  5396                           ;Interrupt.c: 130:     }
  5397   001CC0  EF6B  F00E         	goto	i2l4518
  5398   001CC4                     i2l4512:
  5399                           
  5400                           ; BSR set to: 1
  5401                           ;Interrupt.c: 133:     {;Interrupt.c: 134:         read_keyb();
  5402   001CC4  EC56  F00C         	call	_read_keyb	;wreg free
  5403   001CC8                     
  5404                           ;Interrupt.c: 135:         calcula_minuto_e_segundo();
  5405   001CC8  EC89  F012         	call	_calcula_minuto_e_segundo	;wreg free
  5406   001CCC                     
  5407                           ;Interrupt.c: 136:         counter2 = 1;
  5408   001CCC  0E00               	movlw	0
  5409   001CCE  0101               	movlb	1	; () banked
  5410   001CD0  6F3A               	movwf	(f_timers@counter2+1)& (0+255),b
  5411   001CD2  0E01               	movlw	1
  5412   001CD4  6F39               	movwf	f_timers@counter2& (0+255),b
  5413   001CD6                     i2l4518:
  5414                           
  5415                           ; BSR set to: 1
  5416                           ;Interrupt.c: 139:     if (counter3 < temporizacao)
  5417   001CD6  513D               	movf	_temporizacao& (0+255),w,b
  5418   001CD8  5D37               	subwf	f_timers@counter3& (0+255),w,b
  5419   001CDA  513E               	movf	(_temporizacao+1)& (0+255),w,b
  5420   001CDC  5938               	subwfb	(f_timers@counter3+1)& (0+255),w,b
  5421   001CDE  B0D8               	btfsc	status,0,c
  5422   001CE0  EF74  F00E         	goto	i2u423_41
  5423   001CE4  EF76  F00E         	goto	i2u423_40
  5424   001CE8                     i2u423_41:
  5425   001CE8  EF7A  F00E         	goto	i2l4522
  5426   001CEC                     i2u423_40:
  5427   001CEC                     
  5428                           ; BSR set to: 1
  5429                           ;Interrupt.c: 140:     {;Interrupt.c: 141:         counter3++;
  5430   001CEC  4B37               	infsnz	f_timers@counter3& (0+255),f,b
  5431   001CEE  2B38               	incf	(f_timers@counter3+1)& (0+255),f,b
  5432                           
  5433                           ;Interrupt.c: 142:     }
  5434   001CF0  EF89  F00E         	goto	i2l4528
  5435   001CF4                     i2l4522:
  5436                           
  5437                           ; BSR set to: 1
  5438                           ;Interrupt.c: 145:     {;Interrupt.c: 146:         if(start_counter)
  5439   001CF4  507A               	movf	_start_counter^0,w,c
  5440   001CF6  B4D8               	btfsc	status,2,c
  5441   001CF8  EF80  F00E         	goto	i2u424_41
  5442   001CFC  EF82  F00E         	goto	i2u424_40
  5443   001D00                     i2u424_41:
  5444   001D00  EF84  F00E         	goto	i2l4526
  5445   001D04                     i2u424_40:
  5446   001D04                     
  5447                           ; BSR set to: 1
  5448                           ;Interrupt.c: 147:             clock_regressive();
  5449   001D04  ECD2  F011         	call	_clock_regressive	;wreg free
  5450   001D08                     i2l4526:
  5451                           
  5452                           ;Interrupt.c: 148:         counter3 = 1;
  5453   001D08  0E00               	movlw	0
  5454   001D0A  0101               	movlb	1	; () banked
  5455   001D0C  6F38               	movwf	(f_timers@counter3+1)& (0+255),b
  5456   001D0E  0E01               	movlw	1
  5457   001D10  6F37               	movwf	f_timers@counter3& (0+255),b
  5458   001D12                     i2l4528:
  5459                           
  5460                           ; BSR set to: 1
  5461                           ;Interrupt.c: 151:     if (counter4 < 100)
  5462   001D12  5136               	movf	(f_timers@counter4+1)& (0+255),w,b
  5463   001D14  E107               	bnz	i2u425_41
  5464   001D16  0E64               	movlw	100
  5465   001D18  5D35               	subwf	f_timers@counter4& (0+255),w,b
  5466   001D1A  B0D8               	btfsc	status,0,c
  5467   001D1C  EF92  F00E         	goto	i2u425_41
  5468   001D20  EF94  F00E         	goto	i2u425_40
  5469   001D24                     i2u425_41:
  5470   001D24  EF98  F00E         	goto	i2l4532
  5471   001D28                     i2u425_40:
  5472   001D28                     
  5473                           ; BSR set to: 1
  5474                           ;Interrupt.c: 152:     {;Interrupt.c: 153:         counter4++;
  5475   001D28  4B35               	infsnz	f_timers@counter4& (0+255),f,b
  5476   001D2A  2B36               	incf	(f_timers@counter4+1)& (0+255),f,b
  5477                           
  5478                           ;Interrupt.c: 154:     }
  5479   001D2C  EFA0  F00E         	goto	i2l319
  5480   001D30                     i2l4532:
  5481                           
  5482                           ; BSR set to: 1
  5483                           ;Interrupt.c: 157:     {;Interrupt.c: 158:         active_line2 = 1;
  5484   001D30  0E01               	movlw	1
  5485   001D32  0100               	movlb	0	; () banked
  5486   001D34  6FE8               	movwf	_active_line2& (0+255),b
  5487                           
  5488                           ;Interrupt.c: 159:         counter4 = 1;
  5489   001D36  0E00               	movlw	0
  5490   001D38  0101               	movlb	1	; () banked
  5491   001D3A  6F36               	movwf	(f_timers@counter4+1)& (0+255),b
  5492   001D3C  0E01               	movlw	1
  5493   001D3E  6F35               	movwf	f_timers@counter4& (0+255),b
  5494   001D40                     i2l319:
  5495                           
  5496                           ; BSR set to: 1
  5497   001D40  0012               	return		;funcret
  5498   001D42                     __end_of_f_timers:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _read_keyb *****************
  5502 ;; Defined at:
  5503 ;;		line 164 in file "Interrupt.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  dado            1  118[COMRAM] unsigned char 
  5508 ;;  dado_RB5        1  117[COMRAM] unsigned char 
  5509 ;;  dado_RB4        1  116[COMRAM] unsigned char 
  5510 ;;  dado_RB3        1  115[COMRAM] unsigned char 
  5511 ;;  dado_RB2        1  114[COMRAM] unsigned char 
  5512 ;;  dado_RB1        1  113[COMRAM] unsigned char 
  5513 ;;  dado_RB0        1  112[COMRAM] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      void 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5523 ;;      Params:         0       0       0       0       0       0       0
  5524 ;;      Locals:         7       0       0       0       0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0
  5526 ;;      Totals:         7       0       0       0       0       0       0
  5527 ;;Total ram usage:        7 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; Hardware stack levels required when called: 10
  5530 ;; This function calls:
  5531 ;;		_f_int0
  5532 ;;		_f_int1
  5533 ;;		_f_int2
  5534 ;;		_f_int3
  5535 ;;		_f_int4
  5536 ;;		_f_int5
  5537 ;; This function is called by:
  5538 ;;		_f_timers
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text35
  5543   0018AC                     __ptext35:
  5544                           	callstack 0
  5545   0018AC                     _read_keyb:
  5546                           	callstack 8
  5547   0018AC                     
  5548                           ;Interrupt.c: 166:     uint8_t dado, dado_RB0, dado_RB1, dado_RB2, dado_RB3, dado_RB4, d
      +                          ado_RB5;;Interrupt.c: 168:     static uint8_t m_dado_RB0 = 1, m_dado_RB1 = 1, m_dado_RB2
      +                           = 1, m_dado_RB3 = 1, m_dado_RB4 = 1, m_dado_RB5 = 1;;Interrupt.c: 170:     dado = PORTB
      +                          ;
  5549   0018AC  CF81 F077          	movff	3969,read_keyb@dado	;volatile
  5550                           
  5551                           ;Interrupt.c: 172:     if (dado & 0b00000001)
  5552   0018B0  A077               	btfss	read_keyb@dado^0,0,c
  5553   0018B2  EF5D  F00C         	goto	i2u409_41
  5554   0018B6  EF5F  F00C         	goto	i2u409_40
  5555   0018BA                     i2u409_41:
  5556   0018BA  EF63  F00C         	goto	i2l4418
  5557   0018BE                     i2u409_40:
  5558   0018BE                     
  5559                           ;Interrupt.c: 173:     {;Interrupt.c: 174:         dado_RB0 = 1;
  5560   0018BE  0E01               	movlw	1
  5561   0018C0  6E71               	movwf	read_keyb@dado_RB0^0,c
  5562                           
  5563                           ;Interrupt.c: 175:     }
  5564   0018C2  EF65  F00C         	goto	i2l4420
  5565   0018C6                     i2l4418:
  5566                           
  5567                           ;Interrupt.c: 177:     {;Interrupt.c: 178:         dado_RB0 = 0;
  5568   0018C6  0E00               	movlw	0
  5569   0018C8  6E71               	movwf	read_keyb@dado_RB0^0,c
  5570   0018CA                     i2l4420:
  5571                           
  5572                           ;Interrupt.c: 181:     if (dado & 0b00000010)
  5573   0018CA  A277               	btfss	read_keyb@dado^0,1,c
  5574   0018CC  EF6A  F00C         	goto	i2u410_41
  5575   0018D0  EF6C  F00C         	goto	i2u410_40
  5576   0018D4                     i2u410_41:
  5577   0018D4  EF70  F00C         	goto	i2l4424
  5578   0018D8                     i2u410_40:
  5579   0018D8                     
  5580                           ;Interrupt.c: 182:     {;Interrupt.c: 183:         dado_RB1 = 1;
  5581   0018D8  0E01               	movlw	1
  5582   0018DA  6E72               	movwf	read_keyb@dado_RB1^0,c
  5583                           
  5584                           ;Interrupt.c: 184:     }
  5585   0018DC  EF72  F00C         	goto	i2l4426
  5586   0018E0                     i2l4424:
  5587                           
  5588                           ;Interrupt.c: 186:     {;Interrupt.c: 187:         dado_RB1 = 0;
  5589   0018E0  0E00               	movlw	0
  5590   0018E2  6E72               	movwf	read_keyb@dado_RB1^0,c
  5591   0018E4                     i2l4426:
  5592                           
  5593                           ;Interrupt.c: 190:     if (dado & 0b00000100)
  5594   0018E4  A477               	btfss	read_keyb@dado^0,2,c
  5595   0018E6  EF77  F00C         	goto	i2u411_41
  5596   0018EA  EF79  F00C         	goto	i2u411_40
  5597   0018EE                     i2u411_41:
  5598   0018EE  EF7D  F00C         	goto	i2l4430
  5599   0018F2                     i2u411_40:
  5600   0018F2                     
  5601                           ;Interrupt.c: 191:     {;Interrupt.c: 192:         dado_RB2 = 1;
  5602   0018F2  0E01               	movlw	1
  5603   0018F4  6E73               	movwf	read_keyb@dado_RB2^0,c
  5604                           
  5605                           ;Interrupt.c: 193:     }
  5606   0018F6  EF7F  F00C         	goto	i2l4432
  5607   0018FA                     i2l4430:
  5608                           
  5609                           ;Interrupt.c: 195:     {;Interrupt.c: 196:         dado_RB2 = 0;
  5610   0018FA  0E00               	movlw	0
  5611   0018FC  6E73               	movwf	read_keyb@dado_RB2^0,c
  5612   0018FE                     i2l4432:
  5613                           
  5614                           ;Interrupt.c: 200:     if (dado & 0b00001000)
  5615   0018FE  A677               	btfss	read_keyb@dado^0,3,c
  5616   001900  EF84  F00C         	goto	i2u412_41
  5617   001904  EF86  F00C         	goto	i2u412_40
  5618   001908                     i2u412_41:
  5619   001908  EF8A  F00C         	goto	i2l4436
  5620   00190C                     i2u412_40:
  5621   00190C                     
  5622                           ;Interrupt.c: 201:     {;Interrupt.c: 202:         dado_RB3 = 1;
  5623   00190C  0E01               	movlw	1
  5624   00190E  6E74               	movwf	read_keyb@dado_RB3^0,c
  5625                           
  5626                           ;Interrupt.c: 203:     }
  5627   001910  EF8C  F00C         	goto	i2l4438
  5628   001914                     i2l4436:
  5629                           
  5630                           ;Interrupt.c: 205:     {;Interrupt.c: 206:         dado_RB3 = 0;
  5631   001914  0E00               	movlw	0
  5632   001916  6E74               	movwf	read_keyb@dado_RB3^0,c
  5633   001918                     i2l4438:
  5634                           
  5635                           ;Interrupt.c: 209:     if (dado & 0b00010000)
  5636   001918  A877               	btfss	read_keyb@dado^0,4,c
  5637   00191A  EF91  F00C         	goto	i2u413_41
  5638   00191E  EF93  F00C         	goto	i2u413_40
  5639   001922                     i2u413_41:
  5640   001922  EF97  F00C         	goto	i2l4442
  5641   001926                     i2u413_40:
  5642   001926                     
  5643                           ;Interrupt.c: 210:     {;Interrupt.c: 211:         dado_RB4 = 1;
  5644   001926  0E01               	movlw	1
  5645   001928  6E75               	movwf	read_keyb@dado_RB4^0,c
  5646                           
  5647                           ;Interrupt.c: 212:     }
  5648   00192A  EF99  F00C         	goto	i2l4444
  5649   00192E                     i2l4442:
  5650                           
  5651                           ;Interrupt.c: 215:     {;Interrupt.c: 216:         dado_RB4 = 0;
  5652   00192E  0E00               	movlw	0
  5653   001930  6E75               	movwf	read_keyb@dado_RB4^0,c
  5654   001932                     i2l4444:
  5655                           
  5656                           ;Interrupt.c: 219:     if (dado & 0b00100000)
  5657   001932  AA77               	btfss	read_keyb@dado^0,5,c
  5658   001934  EF9E  F00C         	goto	i2u414_41
  5659   001938  EFA0  F00C         	goto	i2u414_40
  5660   00193C                     i2u414_41:
  5661   00193C  EFA4  F00C         	goto	i2l4448
  5662   001940                     i2u414_40:
  5663   001940                     
  5664                           ;Interrupt.c: 220:     {;Interrupt.c: 221:         dado_RB5 = 1;
  5665   001940  0E01               	movlw	1
  5666   001942  6E76               	movwf	read_keyb@dado_RB5^0,c
  5667                           
  5668                           ;Interrupt.c: 222:     }
  5669   001944  EFA6  F00C         	goto	i2l4450
  5670   001948                     i2l4448:
  5671                           
  5672                           ;Interrupt.c: 225:     {;Interrupt.c: 226:         dado_RB5=0;
  5673   001948  0E00               	movlw	0
  5674   00194A  6E76               	movwf	read_keyb@dado_RB5^0,c
  5675   00194C                     i2l4450:
  5676                           
  5677                           ;Interrupt.c: 229:     if (dado_RB0< m_dado_RB0)
  5678   00194C  0100               	movlb	0	; () banked
  5679   00194E  51F3               	movf	read_keyb@m_dado_RB0& (0+255),w,b
  5680   001950  5C71               	subwf	read_keyb@dado_RB0^0,w,c
  5681   001952  B0D8               	btfsc	status,0,c
  5682   001954  EFAE  F00C         	goto	i2u415_41
  5683   001958  EFB0  F00C         	goto	i2u415_40
  5684   00195C                     i2u415_41:
  5685   00195C  EFB2  F00C         	goto	i2l4454
  5686   001960                     i2u415_40:
  5687   001960                     
  5688                           ; BSR set to: 0
  5689                           ;Interrupt.c: 230:     {;Interrupt.c: 231:         f_int0();
  5690   001960  EC69  F015         	call	_f_int0	;wreg free
  5691   001964                     i2l4454:
  5692                           
  5693                           ;Interrupt.c: 234:     if (dado_RB1 < m_dado_RB1)
  5694   001964  0100               	movlb	0	; () banked
  5695   001966  51F2               	movf	read_keyb@m_dado_RB1& (0+255),w,b
  5696   001968  5C72               	subwf	read_keyb@dado_RB1^0,w,c
  5697   00196A  B0D8               	btfsc	status,0,c
  5698   00196C  EFBA  F00C         	goto	i2u416_41
  5699   001970  EFBC  F00C         	goto	i2u416_40
  5700   001974                     i2u416_41:
  5701   001974  EFBE  F00C         	goto	i2l4458
  5702   001978                     i2u416_40:
  5703   001978                     
  5704                           ; BSR set to: 0
  5705                           ;Interrupt.c: 235:     {;Interrupt.c: 236:         f_int1();
  5706   001978  EC4C  F015         	call	_f_int1	;wreg free
  5707   00197C                     i2l4458:
  5708                           
  5709                           ;Interrupt.c: 239:     if (dado_RB2 < m_dado_RB2)
  5710   00197C  0100               	movlb	0	; () banked
  5711   00197E  51F1               	movf	read_keyb@m_dado_RB2& (0+255),w,b
  5712   001980  5C73               	subwf	read_keyb@dado_RB2^0,w,c
  5713   001982  B0D8               	btfsc	status,0,c
  5714   001984  EFC6  F00C         	goto	i2u417_41
  5715   001988  EFC8  F00C         	goto	i2u417_40
  5716   00198C                     i2u417_41:
  5717   00198C  EFCA  F00C         	goto	i2l4462
  5718   001990                     i2u417_40:
  5719   001990                     
  5720                           ; BSR set to: 0
  5721                           ;Interrupt.c: 240:     {;Interrupt.c: 241:         f_int2();
  5722   001990  EC76  F015         	call	_f_int2	;wreg free
  5723   001994                     i2l4462:
  5724                           
  5725                           ;Interrupt.c: 244:     if (dado_RB3< m_dado_RB3)
  5726   001994  0100               	movlb	0	; () banked
  5727   001996  51F0               	movf	read_keyb@m_dado_RB3& (0+255),w,b
  5728   001998  5C74               	subwf	read_keyb@dado_RB3^0,w,c
  5729   00199A  B0D8               	btfsc	status,0,c
  5730   00199C  EFD2  F00C         	goto	i2u418_41
  5731   0019A0  EFD4  F00C         	goto	i2u418_40
  5732   0019A4                     i2u418_41:
  5733   0019A4  EFD6  F00C         	goto	i2l4466
  5734   0019A8                     i2u418_40:
  5735   0019A8                     
  5736                           ; BSR set to: 0
  5737                           ;Interrupt.c: 245:     {;Interrupt.c: 246:         f_int3();
  5738   0019A8  EC9A  F015         	call	_f_int3	;wreg free
  5739   0019AC                     i2l4466:
  5740                           
  5741                           ;Interrupt.c: 249:     if (dado_RB4 < m_dado_RB4)
  5742   0019AC  0100               	movlb	0	; () banked
  5743   0019AE  51EF               	movf	read_keyb@m_dado_RB4& (0+255),w,b
  5744   0019B0  5C75               	subwf	read_keyb@dado_RB4^0,w,c
  5745   0019B2  B0D8               	btfsc	status,0,c
  5746   0019B4  EFDE  F00C         	goto	i2u419_41
  5747   0019B8  EFE0  F00C         	goto	i2u419_40
  5748   0019BC                     i2u419_41:
  5749   0019BC  EFE2  F00C         	goto	i2l4470
  5750   0019C0                     i2u419_40:
  5751   0019C0                     
  5752                           ; BSR set to: 0
  5753                           ;Interrupt.c: 250:     {;Interrupt.c: 251:         f_int4();
  5754   0019C0  EC92  F015         	call	_f_int4	;wreg free
  5755   0019C4                     i2l4470:
  5756                           
  5757                           ;Interrupt.c: 254:     if (dado_RB5 < m_dado_RB5)
  5758   0019C4  0100               	movlb	0	; () banked
  5759   0019C6  51EE               	movf	read_keyb@m_dado_RB5& (0+255),w,b
  5760   0019C8  5C76               	subwf	read_keyb@dado_RB5^0,w,c
  5761   0019CA  B0D8               	btfsc	status,0,c
  5762   0019CC  EFEA  F00C         	goto	i2u420_41
  5763   0019D0  EFEC  F00C         	goto	i2u420_40
  5764   0019D4                     i2u420_41:
  5765   0019D4  EFEE  F00C         	goto	i2l4474
  5766   0019D8                     i2u420_40:
  5767   0019D8                     
  5768                           ; BSR set to: 0
  5769                           ;Interrupt.c: 255:     {;Interrupt.c: 256:         f_int5();
  5770   0019D8  EC8A  F015         	call	_f_int5	;wreg free
  5771   0019DC                     i2l4474:
  5772                           
  5773                           ;Interrupt.c: 259:     m_dado_RB0 = dado_RB0;
  5774   0019DC  C071  F0F3         	movff	read_keyb@dado_RB0,read_keyb@m_dado_RB0
  5775   0019E0                     
  5776                           ;Interrupt.c: 260:     m_dado_RB1 = dado_RB1;
  5777   0019E0  C072  F0F2         	movff	read_keyb@dado_RB1,read_keyb@m_dado_RB1
  5778   0019E4                     
  5779                           ;Interrupt.c: 261:     m_dado_RB2 = dado_RB2;
  5780   0019E4  C073  F0F1         	movff	read_keyb@dado_RB2,read_keyb@m_dado_RB2
  5781   0019E8                     
  5782                           ;Interrupt.c: 262:     m_dado_RB3 = dado_RB3;
  5783   0019E8  C074  F0F0         	movff	read_keyb@dado_RB3,read_keyb@m_dado_RB3
  5784   0019EC                     
  5785                           ;Interrupt.c: 263:     m_dado_RB4 = dado_RB4;
  5786   0019EC  C075  F0EF         	movff	read_keyb@dado_RB4,read_keyb@m_dado_RB4
  5787   0019F0                     
  5788                           ;Interrupt.c: 264:     m_dado_RB5 = dado_RB5;
  5789   0019F0  C076  F0EE         	movff	read_keyb@dado_RB5,read_keyb@m_dado_RB5
  5790   0019F4  0012               	return		;funcret
  5791   0019F6                     __end_of_read_keyb:
  5792                           	callstack 0
  5793                           
  5794 ;; *************** function _f_int5 *****************
  5795 ;; Defined at:
  5796 ;;		line 302 in file "Interrupt.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5810 ;;      Params:         0       0       0       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0
  5813 ;;      Totals:         0       0       0       0       0       0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; Hardware stack levels required when called: 9
  5817 ;; This function calls:
  5818 ;;		_show_line1
  5819 ;; This function is called by:
  5820 ;;		_read_keyb
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text36
  5825   002B14                     __ptext36:
  5826                           	callstack 0
  5827   002B14                     _f_int5:
  5828                           	callstack 8
  5829   002B14                     
  5830                           ;Interrupt.c: 304:     temporizacao = 10;
  5831   002B14  0E00               	movlw	0
  5832   002B16  0101               	movlb	1	; () banked
  5833   002B18  6F3E               	movwf	(_temporizacao+1)& (0+255),b
  5834   002B1A  0E0A               	movlw	10
  5835   002B1C  6F3D               	movwf	_temporizacao& (0+255),b
  5836   002B1E                     
  5837                           ; BSR set to: 1
  5838                           ;Interrupt.c: 305:     show_line1();
  5839   002B1E  EC2C  F014         	call	_show_line1	;wreg free
  5840   002B22  0012               	return		;funcret
  5841   002B24                     __end_of_f_int5:
  5842                           	callstack 0
  5843                           
  5844 ;; *************** function _f_int4 *****************
  5845 ;; Defined at:
  5846 ;;		line 296 in file "Interrupt.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;		None
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;		None
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5860 ;;      Params:         0       0       0       0       0       0       0
  5861 ;;      Locals:         0       0       0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0
  5863 ;;      Totals:         0       0       0       0       0       0       0
  5864 ;;Total ram usage:        0 bytes
  5865 ;; Hardware stack levels used: 1
  5866 ;; Hardware stack levels required when called: 9
  5867 ;; This function calls:
  5868 ;;		_show_line1
  5869 ;; This function is called by:
  5870 ;;		_read_keyb
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text37
  5875   002B24                     __ptext37:
  5876                           	callstack 0
  5877   002B24                     _f_int4:
  5878                           	callstack 8
  5879   002B24                     
  5880                           ;Interrupt.c: 298:     temporizacao = 100;
  5881   002B24  0E00               	movlw	0
  5882   002B26  0101               	movlb	1	; () banked
  5883   002B28  6F3E               	movwf	(_temporizacao+1)& (0+255),b
  5884   002B2A  0E64               	movlw	100
  5885   002B2C  6F3D               	movwf	_temporizacao& (0+255),b
  5886   002B2E                     
  5887                           ; BSR set to: 1
  5888                           ;Interrupt.c: 299:     show_line1();
  5889   002B2E  EC2C  F014         	call	_show_line1	;wreg free
  5890   002B32  0012               	return		;funcret
  5891   002B34                     __end_of_f_int4:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _f_int3 *****************
  5895 ;; Defined at:
  5896 ;;		line 290 in file "Interrupt.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5910 ;;      Params:         0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; Hardware stack levels required when called: 9
  5917 ;; This function calls:
  5918 ;;		_show_line1
  5919 ;; This function is called by:
  5920 ;;		_read_keyb
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text38
  5925   002B34                     __ptext38:
  5926                           	callstack 0
  5927   002B34                     _f_int3:
  5928                           	callstack 8
  5929   002B34                     
  5930                           ;Interrupt.c: 292:     temporizacao = 1000;
  5931   002B34  0E03               	movlw	3
  5932   002B36  0101               	movlb	1	; () banked
  5933   002B38  6F3E               	movwf	(_temporizacao+1)& (0+255),b
  5934   002B3A  0EE8               	movlw	232
  5935   002B3C  6F3D               	movwf	_temporizacao& (0+255),b
  5936   002B3E                     
  5937                           ; BSR set to: 1
  5938                           ;Interrupt.c: 293:     show_line1();
  5939   002B3E  EC2C  F014         	call	_show_line1	;wreg free
  5940   002B42  0012               	return		;funcret
  5941   002B44                     __end_of_f_int3:
  5942                           	callstack 0
  5943                           
  5944 ;; *************** function _f_int2 *****************
  5945 ;; Defined at:
  5946 ;;		line 283 in file "Interrupt.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5960 ;;      Params:         0       0       0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0
  5963 ;;      Totals:         0       0       0       0       0       0       0
  5964 ;;Total ram usage:        0 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; Hardware stack levels required when called: 1
  5967 ;; This function calls:
  5968 ;;		_f_pwm
  5969 ;; This function is called by:
  5970 ;;		_read_keyb
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text39
  5975   002AEC                     __ptext39:
  5976                           	callstack 0
  5977   002AEC                     _f_int2:
  5978                           	callstack 16
  5979   002AEC                     
  5980                           ;Interrupt.c: 285:     start_counter = 0;
  5981   002AEC  0E00               	movlw	0
  5982   002AEE  6E7A               	movwf	_start_counter^0,c
  5983                           
  5984                           ;Interrupt.c: 286:     enable_time_config = 1;
  5985   002AF0  0E01               	movlw	1
  5986   002AF2  0100               	movlb	0	; () banked
  5987   002AF4  6FF5               	movwf	_enable_time_config& (0+255),b
  5988   002AF6                     
  5989                           ; BSR set to: 0
  5990                           ;Interrupt.c: 287:     f_pwm(0);
  5991   002AF6  0E00               	movlw	0
  5992   002AF8  6E02               	movwf	(f_pwm@duty+1)^0,c
  5993   002AFA  0E00               	movlw	0
  5994   002AFC  6E01               	movwf	f_pwm@duty^0,c
  5995   002AFE  ECB4  F014         	call	_f_pwm	;wreg free
  5996   002B02  0012               	return		;funcret
  5997   002B04                     __end_of_f_int2:
  5998                           	callstack 0
  5999                           
  6000 ;; *************** function _f_int1 *****************
  6001 ;; Defined at:
  6002 ;;		line 274 in file "Interrupt.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6016 ;;      Params:         0       0       0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0
  6019 ;;      Totals:         0       0       0       0       0       0       0
  6020 ;;Total ram usage:        0 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 9
  6023 ;; This function calls:
  6024 ;;		_show_line1
  6025 ;; This function is called by:
  6026 ;;		_read_keyb
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text40
  6031   002A98                     __ptext40:
  6032                           	callstack 0
  6033   002A98                     _f_int1:
  6034                           	callstack 8
  6035   002A98                     
  6036                           ;Interrupt.c: 276:     enable_time_config = 0;
  6037   002A98  0E00               	movlw	0
  6038   002A9A  0100               	movlb	0	; () banked
  6039   002A9C  6FF5               	movwf	_enable_time_config& (0+255),b
  6040                           
  6041                           ;Interrupt.c: 277:     start_counter = 1;
  6042   002A9E  0E01               	movlw	1
  6043   002AA0  6E7A               	movwf	_start_counter^0,c
  6044   002AA2                     
  6045                           ; BSR set to: 0
  6046                           ;Interrupt.c: 278:     memoria_minuto = mostra_minuto = minuto;
  6047   002AA2  C07C  F079         	movff	_minuto,_mostra_minuto
  6048   002AA6  C079  F0E7         	movff	_mostra_minuto,_memoria_minuto
  6049   002AAA                     
  6050                           ; BSR set to: 0
  6051                           ;Interrupt.c: 279:     memoria_segundo = mostra_segundo = segundo;
  6052   002AAA  C07B  F078         	movff	_segundo,_mostra_segundo
  6053   002AAE  C078  F0F4         	movff	_mostra_segundo,_memoria_segundo
  6054   002AB2                     
  6055                           ; BSR set to: 0
  6056                           ;Interrupt.c: 280:     show_line1();
  6057   002AB2  EC2C  F014         	call	_show_line1	;wreg free
  6058   002AB6  0012               	return		;funcret
  6059   002AB8                     __end_of_f_int1:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _show_line1 *****************
  6063 ;; Defined at:
  6064 ;;		line 329 in file "Interrupt.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6078 ;;      Params:         0       0       0       0       0       0       0
  6079 ;;      Locals:         0       0       0       0       0       0       0
  6080 ;;      Temps:          0       0       0       0       0       0       0
  6081 ;;      Totals:         0       0       0       0       0       0       0
  6082 ;;Total ram usage:        0 bytes
  6083 ;; Hardware stack levels used: 1
  6084 ;; Hardware stack levels required when called: 8
  6085 ;; This function calls:
  6086 ;;		i2_lcd_cmd
  6087 ;;		i2_lcd_str
  6088 ;;		i2_sprintf
  6089 ;; This function is called by:
  6090 ;;		_f_int1
  6091 ;;		_f_int3
  6092 ;;		_f_int4
  6093 ;;		_f_int5
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text41
  6098   002858                     __ptext41:
  6099                           	callstack 0
  6100   002858                     _show_line1:
  6101                           	callstack 8
  6102   002858                     
  6103                           ;Interrupt.c: 331:     lcd_cmd(0x80);
  6104   002858  0E80               	movlw	128
  6105   00285A  EC3B  F015         	call	i2_lcd_cmd
  6106   00285E                     
  6107                           ;Interrupt.c: 332:     sprintf(buffer, "%2.2d:%2.2d tempo:%4d", memoria_minuto, memoria_
      +                          segundo, temporizacao);
  6108   00285E  0E70               	movlw	low _buffer
  6109   002860  6E5A               	movwf	i2sprintf@s^0,c
  6110   002862  0E01               	movlw	high _buffer
  6111   002864  6E5B               	movwf	(i2sprintf@s+1)^0,c
  6112   002866  0E01               	movlw	low STR_1
  6113   002868  6E5C               	movwf	i2sprintf@fmt^0,c
  6114   00286A  0E06               	movlw	high STR_1
  6115   00286C  6E5D               	movwf	(i2sprintf@fmt+1)^0,c
  6116   00286E  C0E7  F05E         	movff	_memoria_minuto,?i2_sprintf+4
  6117   002872  6A5F               	clrf	(?i2_sprintf+5)^0,c
  6118   002874  C0F4  F060         	movff	_memoria_segundo,?i2_sprintf+6
  6119   002878  6A61               	clrf	(?i2_sprintf+7)^0,c
  6120   00287A  C13D  F062         	movff	_temporizacao,?i2_sprintf+8
  6121   00287E  C13E  F063         	movff	_temporizacao+1,?i2_sprintf+9
  6122   002882  ECB2  F012         	call	i2_sprintf	;wreg free
  6123   002886                     
  6124                           ;Interrupt.c: 333:     lcd_str(buffer);
  6125   002886  0E70               	movlw	low _buffer
  6126   002888  6E03               	movwf	i2lcd_str@str^0,c
  6127   00288A  0E01               	movlw	high _buffer
  6128   00288C  6E04               	movwf	(i2lcd_str@str+1)^0,c
  6129   00288E  EC4A  F014         	call	i2_lcd_str	;wreg free
  6130   002892  0012               	return		;funcret
  6131   002894                     __end_of_show_line1:
  6132                           	callstack 0
  6133                           
  6134 ;; *************** function i2_sprintf *****************
  6135 ;; Defined at:
  6136 ;;		line 9 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/nf_sprintf.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  s               2   89[COMRAM] PTR unsigned char 
  6139 ;;		 -> buffer(10), 
  6140 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  6141 ;;		 -> STR_2(17), STR_1(22), 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  f              11  101[COMRAM] struct _IO_FILE
  6144 ;;  ap              2   99[COMRAM] PTR void [1]
  6145 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  6146 ;;  ret             2    0        int 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  2   89[COMRAM] int 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6156 ;;      Params:        10       0       0       0       0       0       0
  6157 ;;      Locals:        13       0       0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0
  6159 ;;      Totals:        23       0       0       0       0       0       0
  6160 ;;Total ram usage:       23 bytes
  6161 ;; Hardware stack levels used: 1
  6162 ;; Hardware stack levels required when called: 7
  6163 ;; This function calls:
  6164 ;;		i2_vfprintf
  6165 ;; This function is called by:
  6166 ;;		_show_line1
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text42
  6171   002564                     __ptext42:
  6172                           	callstack 0
  6173   002564                     i2_sprintf:
  6174                           	callstack 8
  6175   002564  0E5E               	movlw	low (?i2_sprintf+4)
  6176   002566  6E64               	movwf	i2sprintf@ap^0,c
  6177   002568  0E00               	movlw	high (?i2_sprintf+4)
  6178   00256A  6E65               	movwf	(i2sprintf@ap+1)^0,c
  6179   00256C  C05A  F066         	movff	i2sprintf@s,i2sprintf@f
  6180   002570  C05B  F067         	movff	i2sprintf@s+1,i2sprintf@f+1
  6181   002574  0E00               	movlw	0
  6182   002576  6E6A               	movwf	(i2sprintf@f+4)^0,c
  6183   002578  0E00               	movlw	0
  6184   00257A  6E69               	movwf	(i2sprintf@f+3)^0,c
  6185   00257C  0E00               	movlw	0
  6186   00257E  6E70               	movwf	(i2sprintf@f+10)^0,c
  6187   002580  0E00               	movlw	0
  6188   002582  6E6F               	movwf	(i2sprintf@f+9)^0,c
  6189   002584  0E66               	movlw	low i2sprintf@f
  6190   002586  6E52               	movwf	i2vfprintf@fp^0,c
  6191   002588  0E00               	movlw	high i2sprintf@f
  6192   00258A  6E53               	movwf	(i2vfprintf@fp+1)^0,c
  6193   00258C  C05C  F054         	movff	i2sprintf@fmt,i2vfprintf@fmt
  6194   002590  C05D  F055         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  6195   002594  0E64               	movlw	low i2sprintf@ap
  6196   002596  6E56               	movwf	i2vfprintf@ap^0,c
  6197   002598  0E00               	movlw	high i2sprintf@ap
  6198   00259A  6E57               	movwf	(i2vfprintf@ap+1)^0,c
  6199   00259C  ECD9  F012         	call	i2_vfprintf	;wreg free
  6200   0025A0  5069               	movf	(i2sprintf@f+3)^0,w,c
  6201   0025A2  245A               	addwf	i2sprintf@s^0,w,c
  6202   0025A4  6ED9               	movwf	fsr2l,c
  6203   0025A6  506A               	movf	(i2sprintf@f+4)^0,w,c
  6204   0025A8  205B               	addwfc	(i2sprintf@s+1)^0,w,c
  6205   0025AA  6EDA               	movwf	fsr2h,c
  6206   0025AC  0E00               	movlw	0
  6207   0025AE  6EDF               	movwf	indf2,c
  6208   0025B0  0012               	return		;funcret
  6209   0025B2                     __end_ofi2_sprintf:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function i2_vfprintf *****************
  6213 ;; Defined at:
  6214 ;;		line 1520 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  6217 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  6218 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  6219 ;;		 -> STR_2(17), STR_1(22), 
  6220 ;;  ap              2   85[COMRAM] PTR PTR void 
  6221 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  6224 ;;		 -> STR_2(17), STR_1(22), 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  2   81[COMRAM] int 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6234 ;;      Params:         6       0       0       0       0       0       0
  6235 ;;      Locals:         2       0       0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0
  6237 ;;      Totals:         8       0       0       0       0       0       0
  6238 ;;Total ram usage:        8 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 6
  6241 ;; This function calls:
  6242 ;;		i2_vfpfcnvrt
  6243 ;; This function is called by:
  6244 ;;		i2_sprintf
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text43
  6249   0025B2                     __ptext43:
  6250                           	callstack 0
  6251   0025B2                     i2_vfprintf:
  6252                           	callstack 8
  6253   0025B2                     
  6254                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1520: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1
      +                          521: {;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1523:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1525:     cfmt = (char *)fmt;
  6255   0025B2  C054  F058         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  6256   0025B6  C055  F059         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  6257                           
  6258                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1529:     while (*cfmt) {
  6259   0025BA  EFED  F012         	goto	i2l4284
  6260   0025BE                     i2l4282:
  6261                           
  6262                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  6263   0025BE  C052  F03F         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  6264   0025C2  C053  F040         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  6265   0025C6  0E58               	movlw	low i2vfprintf@cfmt
  6266   0025C8  6E41               	movwf	i2vfpfcnvrt@fmt^0,c
  6267   0025CA  0E00               	movlw	high i2vfprintf@cfmt
  6268   0025CC  6E42               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  6269   0025CE  C056  F043         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  6270   0025D2  C057  F044         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  6271   0025D6  ECAC  F004         	call	i2_vfpfcnvrt	;wreg free
  6272   0025DA                     i2l4284:
  6273                           
  6274                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1529:     while (*cfmt) {
  6275   0025DA  C058  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  6276   0025DE  C059  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  6277   0025E2                     	if	0	;tblptru may be non-zero
  6278   0025E2                     	endif
  6279   0025E2                     	if	0	;tblptru may be non-zero
  6280   0025E2                     	endif
  6281   0025E2  0008               	tblrd		*
  6282   0025E4  50F5               	movf	tablat,w,c
  6283   0025E6  0900               	iorlw	0
  6284   0025E8  A4D8               	btfss	status,2,c
  6285   0025EA  EFF9  F012         	goto	i2u398_41
  6286   0025EE  EFFB  F012         	goto	i2u398_40
  6287   0025F2                     i2u398_41:
  6288   0025F2  EFDF  F012         	goto	i2l4282
  6289   0025F6                     i2u398_40:
  6290   0025F6                     
  6291                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1538:  return 0;
  6292   0025F6  0E00               	movlw	0
  6293   0025F8  6E53               	movwf	(?i2_vfprintf+1)^0,c
  6294   0025FA  0E00               	movlw	0
  6295   0025FC  6E52               	movwf	?i2_vfprintf^0,c
  6296   0025FE  0012               	return		;funcret
  6297   002600                     __end_ofi2_vfprintf:
  6298                           	callstack 0
  6299                           
  6300 ;; *************** function i2_vfpfcnvrt *****************
  6301 ;; Defined at:
  6302 ;;		line 1007 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  6305 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  6306 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  6307 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  6308 ;;  ap              2   66[COMRAM] PTR PTR void 
  6309 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  convarg         8   71[COMRAM] struct .
  6312 ;;  cp              2   79[COMRAM] PTR unsigned char 
  6313 ;;		 -> STR_2(17), STR_1(22), 
  6314 ;;  i               2    0        int 
  6315 ;;  done            2    0        int 
  6316 ;;  c               1    0        unsigned char 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6326 ;;      Params:         6       0       0       0       0       0       0
  6327 ;;      Locals:        10       0       0       0       0       0       0
  6328 ;;      Temps:          3       0       0       0       0       0       0
  6329 ;;      Totals:        19       0       0       0       0       0       0
  6330 ;;Total ram usage:       19 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 5
  6333 ;; This function calls:
  6334 ;;		i2_atoi
  6335 ;;		i2_dtoa
  6336 ;;		i2_fputc
  6337 ;;		i2_isdigit
  6338 ;; This function is called by:
  6339 ;;		i2_vfprintf
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text44
  6344   000958                     __ptext44:
  6345                           	callstack 0
  6346   000958                     i2_vfpfcnvrt:
  6347                           	callstack 8
  6348   000958                     
  6349                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1007: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1008: {;
      +                          /opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1009:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1010:     int done, i;;/opt/microchip
      +                          /xc8/v2.40/pic/sources/c99/common/doprnt.c: 1016:  } convarg;;/opt/microchip/xc8/v2.40/p
      +                          ic/sources/c99/common/doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6350   000958  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6351   00095C  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6352   000960  CFDE FFF6          	movff	postinc2,tblptrl
  6353   000964  CFDD FFF7          	movff	postdec2,tblptrh
  6354   000968                     	if	0	;tblptru may be non-zero
  6355   000968                     	endif
  6356   000968                     	if	0	;tblptru may be non-zero
  6357   000968                     	endif
  6358   000968  0008               	tblrd		*
  6359   00096A  50F5               	movf	tablat,w,c
  6360   00096C  0A25               	xorlw	37
  6361   00096E  A4D8               	btfss	status,2,c
  6362   000970  EFBC  F004         	goto	i2u375_41
  6363   000974  EFBE  F004         	goto	i2u375_40
  6364   000978                     i2u375_41:
  6365   000978  EF2C  F006         	goto	i2l4190
  6366   00097C                     i2u375_40:
  6367   00097C                     
  6368                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1020:         ++*fmt;
  6369   00097C  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6370   000980  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6371   000984  2ADE               	incf	postinc2,f,c
  6372   000986  0E00               	movlw	0
  6373   000988  22DD               	addwfc	postdec2,f,c
  6374   00098A                     
  6375                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1022:         flags = width =
      +                           0;
  6376   00098A  0E00               	movlw	0
  6377   00098C  0100               	movlb	0	; () banked
  6378   00098E  6FE2               	movwf	(_width+1)& (0+255),b
  6379   000990  0E00               	movlw	0
  6380   000992  6FE1               	movwf	_width& (0+255),b
  6381   000994  C0E1  F0E5         	movff	_width,_flags
  6382   000998                     
  6383                           ; BSR set to: 0
  6384                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1023:         prec = -1;
  6385   000998  69E3               	setf	_prec& (0+255),b
  6386   00099A  69E4               	setf	(_prec+1)& (0+255),b
  6387   00099C                     
  6388                           ; BSR set to: 0
  6389                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1074:         if ((*fmt)[0] =
      +                          = '*') {
  6390   00099C  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6391   0009A0  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6392   0009A4  CFDE FFF6          	movff	postinc2,tblptrl
  6393   0009A8  CFDD FFF7          	movff	postdec2,tblptrh
  6394   0009AC                     	if	0	;tblptru may be non-zero
  6395   0009AC                     	endif
  6396   0009AC                     	if	0	;tblptru may be non-zero
  6397   0009AC                     	endif
  6398   0009AC  0008               	tblrd		*
  6399   0009AE  50F5               	movf	tablat,w,c
  6400   0009B0  0A2A               	xorlw	42
  6401   0009B2  A4D8               	btfss	status,2,c
  6402   0009B4  EFDE  F004         	goto	i2u376_41
  6403   0009B8  EFE0  F004         	goto	i2u376_40
  6404   0009BC                     i2u376_41:
  6405   0009BC  EF09  F005         	goto	i2l4148
  6406   0009C0                     i2u376_40:
  6407   0009C0                     
  6408                           ; BSR set to: 0
  6409                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1075:             ++*fmt;
  6410   0009C0  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6411   0009C4  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6412   0009C8  2ADE               	incf	postinc2,f,c
  6413   0009CA  0E00               	movlw	0
  6414   0009CC  22DD               	addwfc	postdec2,f,c
  6415                           
  6416                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1076:             width = (*(
      +                          int *)__va_arg(*(int **)ap, (int)0));
  6417   0009CE  C043  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6418   0009D2  C044  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6419   0009D6  CFDF F045          	movff	indf2,??i2_vfpfcnvrt
  6420   0009DA  0E02               	movlw	2
  6421   0009DC  26DE               	addwf	postinc2,f,c
  6422   0009DE  CFDF F046          	movff	indf2,??i2_vfpfcnvrt+1
  6423   0009E2  0E00               	movlw	0
  6424   0009E4  22DD               	addwfc	postdec2,f,c
  6425   0009E6  C045  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6426   0009EA  C046  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6427   0009EE  CFDE F0E1          	movff	postinc2,_width
  6428   0009F2  CFDD F0E2          	movff	postdec2,_width+1
  6429   0009F6                     
  6430                           ; BSR set to: 0
  6431                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1077:             if (width <
      +                           0) {
  6432   0009F6  BFE2               	btfsc	(_width+1)& (0+255),7,b
  6433   0009F8  EF02  F005         	goto	i2u377_40
  6434   0009FC  EF00  F005         	goto	i2u377_41
  6435   000A00                     i2u377_41:
  6436   000A00  EF3C  F005         	goto	i2l4156
  6437   000A04                     i2u377_40:
  6438   000A04                     
  6439                           ; BSR set to: 0
  6440                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1078:                 flags |
      +                          = (1 << 0);
  6441   000A04  81E5               	bsf	_flags& (0+255),0,b
  6442                           
  6443                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1079:                 width =
      +                           -width;
  6444   000A06  6DE1               	negf	_width& (0+255),b
  6445   000A08  1FE2               	comf	(_width+1)& (0+255),f,b
  6446   000A0A  B0D8               	btfsc	status,0,c
  6447   000A0C  2BE2               	incf	(_width+1)& (0+255),f,b
  6448   000A0E  EF3C  F005         	goto	i2l4156
  6449   000A12                     i2l4148:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1082:             width = ato
      +                          i(*fmt);
  6453   000A12  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6454   000A16  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6455   000A1A  CFDE F007          	movff	postinc2,i2atoi@s
  6456   000A1E  CFDD F008          	movff	postdec2,i2atoi@s+1
  6457   000A22  ECFB  F00C         	call	i2_atoi	;wreg free
  6458   000A26  C007  F0E1         	movff	?i2_atoi,_width
  6459   000A2A  C008  F0E2         	movff	?i2_atoi+1,_width+1
  6460                           
  6461                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1083:             while ((0 &
      +                          & isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6462   000A2E  EF20  F005         	goto	i2l4154
  6463   000A32                     i2l4150:
  6464                           
  6465                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1084:                 ++*fmt;
  6466   000A32  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6467   000A36  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6468   000A3A  2ADE               	incf	postinc2,f,c
  6469   000A3C  0E00               	movlw	0
  6470   000A3E  22DD               	addwfc	postdec2,f,c
  6471   000A40                     i2l4154:
  6472   000A40  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6473   000A44  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6474   000A48  CFDE FFF6          	movff	postinc2,tblptrl
  6475   000A4C  CFDD FFF7          	movff	postdec2,tblptrh
  6476   000A50                     	if	0	;tblptru may be non-zero
  6477   000A50                     	endif
  6478   000A50                     	if	0	;tblptru may be non-zero
  6479   000A50                     	endif
  6480   000A50  0008               	tblrd		*
  6481   000A52  CFF5 F045          	movff	tablat,??i2_vfpfcnvrt
  6482   000A56  0ED0               	movlw	208
  6483   000A58  2445               	addwf	??i2_vfpfcnvrt^0,w,c
  6484   000A5A  6E46               	movwf	(??i2_vfpfcnvrt+1)^0,c
  6485   000A5C  6A47               	clrf	(??i2_vfpfcnvrt+2)^0,c
  6486   000A5E  0EFF               	movlw	255
  6487   000A60  2247               	addwfc	(??i2_vfpfcnvrt+2)^0,f,c
  6488   000A62  5047               	movf	(??i2_vfpfcnvrt+2)^0,w,c
  6489   000A64  E109               	bnz	i2u378_40
  6490   000A66  0E0A               	movlw	10
  6491   000A68  5C46               	subwf	(??i2_vfpfcnvrt+1)^0,w,c
  6492   000A6A  A0D8               	btfss	status,0,c
  6493   000A6C  EF3A  F005         	goto	i2u378_41
  6494   000A70  EF3C  F005         	goto	i2u378_40
  6495   000A74                     i2u378_41:
  6496   000A74  EF19  F005         	goto	i2l4150
  6497   000A78                     i2u378_40:
  6498   000A78                     i2l4156:
  6499                           
  6500                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1091:         if ((*fmt)[0] =
      +                          = '.') {
  6501   000A78  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6502   000A7C  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6503   000A80  CFDE FFF6          	movff	postinc2,tblptrl
  6504   000A84  CFDD FFF7          	movff	postdec2,tblptrh
  6505   000A88                     	if	0	;tblptru may be non-zero
  6506   000A88                     	endif
  6507   000A88                     	if	0	;tblptru may be non-zero
  6508   000A88                     	endif
  6509   000A88  0008               	tblrd		*
  6510   000A8A  50F5               	movf	tablat,w,c
  6511   000A8C  0A2E               	xorlw	46
  6512   000A8E  A4D8               	btfss	status,2,c
  6513   000A90  EF4C  F005         	goto	i2u379_41
  6514   000A94  EF4E  F005         	goto	i2u379_40
  6515   000A98                     i2u379_41:
  6516   000A98  EFBC  F005         	goto	i2l4174
  6517   000A9C                     i2u379_40:
  6518   000A9C                     
  6519                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1092:             prec = 0;
  6520   000A9C  0E00               	movlw	0
  6521   000A9E  0100               	movlb	0	; () banked
  6522   000AA0  6FE4               	movwf	(_prec+1)& (0+255),b
  6523   000AA2  0E00               	movlw	0
  6524   000AA4  6FE3               	movwf	_prec& (0+255),b
  6525   000AA6                     
  6526                           ; BSR set to: 0
  6527                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1093:             ++*fmt;
  6528   000AA6  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6529   000AAA  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6530   000AAE  2ADE               	incf	postinc2,f,c
  6531   000AB0  0E00               	movlw	0
  6532   000AB2  22DD               	addwfc	postdec2,f,c
  6533   000AB4                     
  6534                           ; BSR set to: 0
  6535                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1094:             if ((*fmt)[
      +                          0] == '*') {
  6536   000AB4  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6537   000AB8  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6538   000ABC  CFDE FFF6          	movff	postinc2,tblptrl
  6539   000AC0  CFDD FFF7          	movff	postdec2,tblptrh
  6540   000AC4                     	if	0	;tblptru may be non-zero
  6541   000AC4                     	endif
  6542   000AC4                     	if	0	;tblptru may be non-zero
  6543   000AC4                     	endif
  6544   000AC4  0008               	tblrd		*
  6545   000AC6  50F5               	movf	tablat,w,c
  6546   000AC8  0A2A               	xorlw	42
  6547   000ACA  A4D8               	btfss	status,2,c
  6548   000ACC  EF6A  F005         	goto	i2u380_41
  6549   000AD0  EF6C  F005         	goto	i2u380_40
  6550   000AD4                     i2u380_41:
  6551   000AD4  EF89  F005         	goto	i2l4166
  6552   000AD8                     i2u380_40:
  6553   000AD8                     
  6554                           ; BSR set to: 0
  6555                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1095:                 ++*fmt;
  6556   000AD8  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6557   000ADC  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6558   000AE0  2ADE               	incf	postinc2,f,c
  6559   000AE2  0E00               	movlw	0
  6560   000AE4  22DD               	addwfc	postdec2,f,c
  6561                           
  6562                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1096:                 prec = 
      +                          (*(int *)__va_arg(*(int **)ap, (int)0));
  6563   000AE6  C043  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6564   000AEA  C044  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6565   000AEE  CFDF F045          	movff	indf2,??i2_vfpfcnvrt
  6566   000AF2  0E02               	movlw	2
  6567   000AF4  26DE               	addwf	postinc2,f,c
  6568   000AF6  CFDF F046          	movff	indf2,??i2_vfpfcnvrt+1
  6569   000AFA  0E00               	movlw	0
  6570   000AFC  22DD               	addwfc	postdec2,f,c
  6571   000AFE  C045  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6572   000B02  C046  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6573   000B06  CFDE F0E3          	movff	postinc2,_prec
  6574   000B0A  CFDD F0E4          	movff	postdec2,_prec+1
  6575                           
  6576                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1097:             } else {
  6577   000B0E  EFBC  F005         	goto	i2l4174
  6578   000B12                     i2l4166:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1098:                 prec = 
      +                          atoi(*fmt);
  6582   000B12  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6583   000B16  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6584   000B1A  CFDE F007          	movff	postinc2,i2atoi@s
  6585   000B1E  CFDD F008          	movff	postdec2,i2atoi@s+1
  6586   000B22  ECFB  F00C         	call	i2_atoi	;wreg free
  6587   000B26  C007  F0E3         	movff	?i2_atoi,_prec
  6588   000B2A  C008  F0E4         	movff	?i2_atoi+1,_prec+1
  6589                           
  6590                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1099:                 while (
      +                          (0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  6591   000B2E  EFA0  F005         	goto	i2l4172
  6592   000B32                     i2l4168:
  6593                           
  6594                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1100:                     ++*
      +                          fmt;
  6595   000B32  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6596   000B36  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6597   000B3A  2ADE               	incf	postinc2,f,c
  6598   000B3C  0E00               	movlw	0
  6599   000B3E  22DD               	addwfc	postdec2,f,c
  6600   000B40                     i2l4172:
  6601   000B40  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6602   000B44  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6603   000B48  CFDE FFF6          	movff	postinc2,tblptrl
  6604   000B4C  CFDD FFF7          	movff	postdec2,tblptrh
  6605   000B50                     	if	0	;tblptru may be non-zero
  6606   000B50                     	endif
  6607   000B50                     	if	0	;tblptru may be non-zero
  6608   000B50                     	endif
  6609   000B50  0008               	tblrd		*
  6610   000B52  CFF5 F045          	movff	tablat,??i2_vfpfcnvrt
  6611   000B56  0ED0               	movlw	208
  6612   000B58  2445               	addwf	??i2_vfpfcnvrt^0,w,c
  6613   000B5A  6E46               	movwf	(??i2_vfpfcnvrt+1)^0,c
  6614   000B5C  6A47               	clrf	(??i2_vfpfcnvrt+2)^0,c
  6615   000B5E  0EFF               	movlw	255
  6616   000B60  2247               	addwfc	(??i2_vfpfcnvrt+2)^0,f,c
  6617   000B62  5047               	movf	(??i2_vfpfcnvrt+2)^0,w,c
  6618   000B64  E109               	bnz	i2u381_40
  6619   000B66  0E0A               	movlw	10
  6620   000B68  5C46               	subwf	(??i2_vfpfcnvrt+1)^0,w,c
  6621   000B6A  A0D8               	btfss	status,0,c
  6622   000B6C  EFBA  F005         	goto	i2u381_41
  6623   000B70  EFBC  F005         	goto	i2u381_40
  6624   000B74                     i2u381_41:
  6625   000B74  EF99  F005         	goto	i2l4168
  6626   000B78                     i2u381_40:
  6627   000B78                     i2l4174:
  6628                           
  6629                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1117:   cp = *fmt;
  6630   000B78  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6631   000B7C  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6632   000B80  CFDE F050          	movff	postinc2,i2vfpfcnvrt@cp
  6633   000B84  CFDD F051          	movff	postdec2,i2vfpfcnvrt@cp+1
  6634   000B88                     
  6635                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1187:   if (*cp == 'd' || *cp
      +                           == 'i') {
  6636   000B88  C050  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  6637   000B8C  C051  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  6638   000B90                     	if	0	;tblptru may be non-zero
  6639   000B90                     	endif
  6640   000B90                     	if	0	;tblptru may be non-zero
  6641   000B90                     	endif
  6642   000B90  0008               	tblrd		*
  6643   000B92  50F5               	movf	tablat,w,c
  6644   000B94  0A64               	xorlw	100
  6645   000B96  B4D8               	btfsc	status,2,c
  6646   000B98  EFD0  F005         	goto	i2u382_41
  6647   000B9C  EFD2  F005         	goto	i2u382_40
  6648   000BA0                     i2u382_41:
  6649   000BA0  EFE0  F005         	goto	i2l4180
  6650   000BA4                     i2u382_40:
  6651   000BA4  C050  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  6652   000BA8  C051  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  6653   000BAC                     	if	0	;tblptru may be non-zero
  6654   000BAC                     	endif
  6655   000BAC                     	if	0	;tblptru may be non-zero
  6656   000BAC                     	endif
  6657   000BAC  0008               	tblrd		*
  6658   000BAE  50F5               	movf	tablat,w,c
  6659   000BB0  0A69               	xorlw	105
  6660   000BB2  A4D8               	btfss	status,2,c
  6661   000BB4  EFDE  F005         	goto	i2u383_41
  6662   000BB8  EFE0  F005         	goto	i2u383_40
  6663   000BBC                     i2u383_41:
  6664   000BBC  EF23  F006         	goto	i2l4186
  6665   000BC0                     i2u383_40:
  6666   000BC0                     i2l4180:
  6667                           
  6668                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1230:    convarg.ll = (long l
      +                          ong)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6669   000BC0  C043  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  6670   000BC4  C044  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  6671   000BC8  CFDF F045          	movff	indf2,??i2_vfpfcnvrt
  6672   000BCC  0E02               	movlw	2
  6673   000BCE  26DE               	addwf	postinc2,f,c
  6674   000BD0  CFDF F046          	movff	indf2,??i2_vfpfcnvrt+1
  6675   000BD4  0E00               	movlw	0
  6676   000BD6  22DD               	addwfc	postdec2,f,c
  6677   000BD8  C045  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  6678   000BDC  C046  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  6679   000BE0  CFDE F048          	movff	postinc2,i2vfpfcnvrt@convarg
  6680   000BE4  CFDD F049          	movff	postdec2,i2vfpfcnvrt@convarg+1
  6681   000BE8  0E00               	movlw	0
  6682   000BEA  BE49               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
  6683   000BEC  0EFF               	movlw	-1
  6684   000BEE  6E4A               	movwf	(i2vfpfcnvrt@convarg+2)^0,c
  6685   000BF0  6E4B               	movwf	(i2vfpfcnvrt@convarg+3)^0,c
  6686   000BF2  6E4C               	movwf	(i2vfpfcnvrt@convarg+4)^0,c
  6687   000BF4  6E4D               	movwf	(i2vfpfcnvrt@convarg+5)^0,c
  6688   000BF6  6E4E               	movwf	(i2vfpfcnvrt@convarg+6)^0,c
  6689   000BF8  6E4F               	movwf	(i2vfpfcnvrt@convarg+7)^0,c
  6690                           
  6691                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1232:    *fmt = cp+1;
  6692   000BFA  0E01               	movlw	1
  6693   000BFC  2450               	addwf	i2vfpfcnvrt@cp^0,w,c
  6694   000BFE  6E45               	movwf	??i2_vfpfcnvrt^0,c
  6695   000C00  0E00               	movlw	0
  6696   000C02  2051               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  6697   000C04  6E46               	movwf	(??i2_vfpfcnvrt+1)^0,c
  6698   000C06  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6699   000C0A  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6700   000C0E  C045  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  6701   000C12  C046  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  6702   000C16                     
  6703                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1233:    return (void) dtoa(f
      +                          p, convarg.ll);;	Return value of i2_vfpfcnvrt is never used
  6704   000C16  C03F  F01C         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  6705   000C1A  C040  F01D         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  6706   000C1E  C048  F01E         	movff	i2vfpfcnvrt@convarg,i2dtoa@d
  6707   000C22  C049  F01F         	movff	i2vfpfcnvrt@convarg+1,i2dtoa@d+1
  6708   000C26  C04A  F020         	movff	i2vfpfcnvrt@convarg+2,i2dtoa@d+2
  6709   000C2A  C04B  F021         	movff	i2vfpfcnvrt@convarg+3,i2dtoa@d+3
  6710   000C2E  C04C  F022         	movff	i2vfpfcnvrt@convarg+4,i2dtoa@d+4
  6711   000C32  C04D  F023         	movff	i2vfpfcnvrt@convarg+5,i2dtoa@d+5
  6712   000C36  C04E  F024         	movff	i2vfpfcnvrt@convarg+6,i2dtoa@d+6
  6713   000C3A  C04F  F025         	movff	i2vfpfcnvrt@convarg+7,i2dtoa@d+7
  6714   000C3E  EC82  F007         	call	i2_dtoa	;wreg free
  6715   000C42  EF40  F006         	goto	i2l1235
  6716   000C46                     i2l4186:
  6717                           
  6718                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1509:         ++*fmt;
  6719   000C46  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6720   000C4A  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6721   000C4E  2ADE               	incf	postinc2,f,c
  6722   000C50  0E00               	movlw	0
  6723   000C52  22DD               	addwfc	postdec2,f,c
  6724   000C54  EF40  F006         	goto	i2l1235
  6725   000C58                     i2l4190:
  6726                           
  6727                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 1514:     fputc((int)(*fmt)[0
      +                          ], fp);
  6728   000C58  C041  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  6729   000C5C  C042  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  6730   000C60  CFDE FFF6          	movff	postinc2,tblptrl
  6731   000C64  CFDD FFF7          	movff	postdec2,tblptrh
  6732   000C68                     	if	0	;tblptru may be non-zero
  6733   000C68                     	endif
  6734   000C68                     	if	0	;tblptru may be non-zero
  6735   000C68                     	endif
  6736   000C68  0008               	tblrd		*
  6737   000C6A  50F5               	movf	tablat,w,c
  6738   000C6C  6E01               	movwf	i2fputc@c^0,c
  6739   000C6E  6A02               	clrf	(i2fputc@c+1)^0,c
  6740   000C70  C03F  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6741   000C74  C040  F004         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  6742   000C78  EC07  F00F         	call	i2_fputc	;wreg free
  6743   000C7C  EF23  F006         	goto	i2l4186
  6744   000C80                     i2l1235:
  6745   000C80  0012               	return		;funcret
  6746   000C82                     __end_ofi2_vfpfcnvrt:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function i2_dtoa *****************
  6750 ;; Defined at:
  6751 ;;		line 443 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6754 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  6755 ;;  d               8   29[COMRAM] long long 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  n               8   51[COMRAM] long long 
  6758 ;;  i               2   60[COMRAM] int 
  6759 ;;  w               2   49[COMRAM] int 
  6760 ;;  p               2   47[COMRAM] int 
  6761 ;;  s               1   59[COMRAM] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      void 
  6764 ;; Registers used:
  6765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6771 ;;      Params:        10       0       0       0       0       0       0
  6772 ;;      Locals:        17       0       0       0       0       0       0
  6773 ;;      Temps:          8       0       0       0       0       0       0
  6774 ;;      Totals:        35       0       0       0       0       0       0
  6775 ;;Total ram usage:       35 bytes
  6776 ;; Hardware stack levels used: 1
  6777 ;; Hardware stack levels required when called: 4
  6778 ;; This function calls:
  6779 ;;		i2___aodiv
  6780 ;;		i2___aomod
  6781 ;;		i2_abs
  6782 ;;		i2_pad
  6783 ;; This function is called by:
  6784 ;;		i2_vfpfcnvrt
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text45
  6789   000F04                     __ptext45:
  6790                           	callstack 0
  6791   000F04                     i2_dtoa:
  6792                           	callstack 8
  6793   000F04                     
  6794                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 443: static void dtoa(FILE *f
      +                          p, long long d);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 444: {;/opt/mi
      +                          crochip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 445:  char s;;/opt/microchip/xc8/v2.4
      +                          0/pic/sources/c99/common/doprnt.c: 446:     int i, p, w;;/opt/microchip/xc8/v2.40/pic/so
      +                          urces/c99/common/doprnt.c: 447:     long long n;;/opt/microchip/xc8/v2.40/pic/sources/c9
      +                          9/common/doprnt.c: 450:     n = d;
  6795   000F04  C01E  F034         	movff	i2dtoa@d,i2dtoa@n
  6796   000F08  C01F  F035         	movff	i2dtoa@d+1,i2dtoa@n+1
  6797   000F0C  C020  F036         	movff	i2dtoa@d+2,i2dtoa@n+2
  6798   000F10  C021  F037         	movff	i2dtoa@d+3,i2dtoa@n+3
  6799   000F14  C022  F038         	movff	i2dtoa@d+4,i2dtoa@n+4
  6800   000F18  C023  F039         	movff	i2dtoa@d+5,i2dtoa@n+5
  6801   000F1C  C024  F03A         	movff	i2dtoa@d+6,i2dtoa@n+6
  6802   000F20  C025  F03B         	movff	i2dtoa@d+7,i2dtoa@n+7
  6803   000F24                     
  6804                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 451:     s = n < 0 ? 1 : 0;
  6805   000F24  BE3B               	btfsc	(i2dtoa@n+7)^0,7,c
  6806   000F26  EF97  F007         	goto	i2u339_41
  6807   000F2A  EF9A  F007         	goto	i2u339_40
  6808   000F2E                     i2u339_41:
  6809   000F2E  0E01               	movlw	1
  6810   000F30  EF9B  F007         	goto	i2u340_40
  6811   000F34                     i2u339_40:
  6812   000F34  0E00               	movlw	0
  6813   000F36                     i2u340_40:
  6814   000F36  6E3C               	movwf	i2dtoa@s^0,c
  6815   000F38                     
  6816                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 452:     if (s) {
  6817   000F38  503C               	movf	i2dtoa@s^0,w,c
  6818   000F3A  B4D8               	btfsc	status,2,c
  6819   000F3C  EFA2  F007         	goto	i2u341_41
  6820   000F40  EFA4  F007         	goto	i2u341_40
  6821   000F44                     i2u341_41:
  6822   000F44  EFB4  F007         	goto	i2l3932
  6823   000F48                     i2u341_40:
  6824   000F48                     
  6825                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 453:         n = -n;
  6826   000F48  1E3B               	comf	(i2dtoa@n+7)^0,f,c
  6827   000F4A  1E3A               	comf	(i2dtoa@n+6)^0,f,c
  6828   000F4C  1E39               	comf	(i2dtoa@n+5)^0,f,c
  6829   000F4E  1E38               	comf	(i2dtoa@n+4)^0,f,c
  6830   000F50  1E37               	comf	(i2dtoa@n+3)^0,f,c
  6831   000F52  1E36               	comf	(i2dtoa@n+2)^0,f,c
  6832   000F54  1E35               	comf	(i2dtoa@n+1)^0,f,c
  6833   000F56  6C34               	negf	i2dtoa@n^0,c
  6834   000F58  0E00               	movlw	0
  6835   000F5A  2235               	addwfc	(i2dtoa@n+1)^0,f,c
  6836   000F5C  2236               	addwfc	(i2dtoa@n+2)^0,f,c
  6837   000F5E  2237               	addwfc	(i2dtoa@n+3)^0,f,c
  6838   000F60  2238               	addwfc	(i2dtoa@n+4)^0,f,c
  6839   000F62  2239               	addwfc	(i2dtoa@n+5)^0,f,c
  6840   000F64  223A               	addwfc	(i2dtoa@n+6)^0,f,c
  6841   000F66  223B               	addwfc	(i2dtoa@n+7)^0,f,c
  6842   000F68                     i2l3932:
  6843                           
  6844                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 462:     p = (0 < prec) ? pre
      +                          c : 1;
  6845   000F68  0100               	movlb	0	; () banked
  6846   000F6A  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  6847   000F6C  EFC2  F007         	goto	i2u342_40
  6848   000F70  51E4               	movf	(_prec+1)& (0+255),w,b
  6849   000F72  E106               	bnz	i2u342_41
  6850   000F74  05E3               	decf	_prec& (0+255),w,b
  6851   000F76  B0D8               	btfsc	status,0,c
  6852   000F78  EFC0  F007         	goto	i2u342_41
  6853   000F7C  EFC2  F007         	goto	i2u342_40
  6854   000F80                     i2u342_41:
  6855   000F80  EFC8  F007         	goto	i2l1198
  6856   000F84                     i2u342_40:
  6857   000F84                     
  6858                           ; BSR set to: 0
  6859   000F84  0E00               	movlw	0
  6860   000F86  6E31               	movwf	(i2dtoa@p+1)^0,c
  6861   000F88  0E01               	movlw	1
  6862   000F8A  6E30               	movwf	i2dtoa@p^0,c
  6863   000F8C  EFCC  F007         	goto	i2l1200
  6864   000F90                     i2l1198:
  6865                           
  6866                           ; BSR set to: 0
  6867   000F90  C0E3  F030         	movff	_prec,i2dtoa@p
  6868   000F94  C0E4  F031         	movff	_prec+1,i2dtoa@p+1
  6869   000F98                     i2l1200:
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 463:     w = width;
  6873   000F98  C0E1  F032         	movff	_width,i2dtoa@w
  6874   000F9C  C0E2  F033         	movff	_width+1,i2dtoa@w+1
  6875   000FA0                     
  6876                           ; BSR set to: 0
  6877                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 464:     if (s
  6878   000FA0  503C               	movf	i2dtoa@s^0,w,c
  6879   000FA2  B4D8               	btfsc	status,2,c
  6880   000FA4  EFD6  F007         	goto	i2u343_41
  6881   000FA8  EFD8  F007         	goto	i2u343_40
  6882   000FAC                     i2u343_41:
  6883   000FAC  EFEF  F007         	goto	i2l1201
  6884   000FB0                     i2u343_40:
  6885   000FB0                     
  6886                           ; BSR set to: 0
  6887                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 468:     ) {;/opt/microchip/x
      +                          c8/v2.40/pic/sources/c99/common/doprnt.c: 469:         --w;
  6888   000FB0  0632               	decf	i2dtoa@w^0,f,c
  6889   000FB2  A0D8               	btfss	status,0,c
  6890   000FB4  0633               	decf	(i2dtoa@w+1)^0,f,c
  6891   000FB6                     
  6892                           ; BSR set to: 0
  6893                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 470:   s = s ? '-' : '+';
  6894   000FB6  503C               	movf	i2dtoa@s^0,w,c
  6895   000FB8  A4D8               	btfss	status,2,c
  6896   000FBA  EFE1  F007         	goto	i2u344_41
  6897   000FBE  EFE3  F007         	goto	i2u344_40
  6898   000FC2                     i2u344_41:
  6899   000FC2  EFE9  F007         	goto	i2l3944
  6900   000FC6                     i2u344_40:
  6901   000FC6                     
  6902                           ; BSR set to: 0
  6903   000FC6  0E00               	movlw	0
  6904   000FC8  6E2F               	movwf	(i2_dtoa$953+1)^0,c
  6905   000FCA  0E2B               	movlw	43
  6906   000FCC  6E2E               	movwf	i2_dtoa$953^0,c
  6907   000FCE  EFED  F007         	goto	i2l3946
  6908   000FD2                     i2l3944:
  6909                           
  6910                           ; BSR set to: 0
  6911   000FD2  0E00               	movlw	0
  6912   000FD4  6E2F               	movwf	(i2_dtoa$953+1)^0,c
  6913   000FD6  0E2D               	movlw	45
  6914   000FD8  6E2E               	movwf	i2_dtoa$953^0,c
  6915   000FDA                     i2l3946:
  6916                           
  6917                           ; BSR set to: 0
  6918   000FDA  C02E  F03C         	movff	i2_dtoa$953,i2dtoa@s
  6919   000FDE                     i2l1201:
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 480:     i = sizeof(dbuf) - 1
      +                          ;
  6923   000FDE  0E00               	movlw	0
  6924   000FE0  6E3E               	movwf	(i2dtoa@i+1)^0,c
  6925   000FE2  0E1F               	movlw	31
  6926   000FE4  6E3D               	movwf	i2dtoa@i^0,c
  6927   000FE6                     
  6928                           ; BSR set to: 0
  6929                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 481:     dbuf[i] = '\0';
  6930   000FE6  0E00               	movlw	0
  6931   000FE8  0101               	movlb	1	; () banked
  6932   000FEA  6F6F               	movwf	(_dbuf+31)& (0+255),b
  6933                           
  6934                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 482:     while (!(i < 1) && (
      +                          n || (0 < p)
  6935   000FEC  EF74  F008         	goto	i2l3960
  6936   000FF0                     i2l3950:
  6937                           
  6938                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 486:     )) {;/opt/microchip/
      +                          xc8/v2.40/pic/sources/c99/common/doprnt.c: 487:         --i;
  6939   000FF0  063D               	decf	i2dtoa@i^0,f,c
  6940   000FF2  A0D8               	btfss	status,0,c
  6941   000FF4  063E               	decf	(i2dtoa@i+1)^0,f,c
  6942   000FF6                     
  6943                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 488:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  6944   000FF6  0E50               	movlw	low _dbuf
  6945   000FF8  243D               	addwf	i2dtoa@i^0,w,c
  6946   000FFA  6ED9               	movwf	fsr2l,c
  6947   000FFC  0E01               	movlw	high _dbuf
  6948   000FFE  203E               	addwfc	(i2dtoa@i+1)^0,w,c
  6949   001000  6EDA               	movwf	fsr2h,c
  6950   001002  C034  F001         	movff	i2dtoa@n,i2___aomod@dividend
  6951   001006  C035  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  6952   00100A  C036  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  6953   00100E  C037  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  6954   001012  C038  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  6955   001016  C039  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  6956   00101A  C03A  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  6957   00101E  C03B  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  6958   001022  0E0A               	movlw	10
  6959   001024  6E09               	movwf	i2___aomod@divisor^0,c
  6960   001026  0E00               	movlw	0
  6961   001028  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  6962   00102A  0E00               	movlw	0
  6963   00102C  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  6964   00102E  0E00               	movlw	0
  6965   001030  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  6966   001032  0E00               	movlw	0
  6967   001034  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  6968   001036  0E00               	movlw	0
  6969   001038  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  6970   00103A  0E00               	movlw	0
  6971   00103C  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  6972   00103E  0E00               	movlw	0
  6973   001040  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  6974   001042  ECFD  F00A         	call	i2___aomod	;wreg free
  6975   001046  C001  F026         	movff	?i2___aomod,??i2_dtoa
  6976   00104A  C002  F027         	movff	?i2___aomod+1,??i2_dtoa+1
  6977   00104E  C003  F028         	movff	?i2___aomod+2,??i2_dtoa+2
  6978   001052  C004  F029         	movff	?i2___aomod+3,??i2_dtoa+3
  6979   001056  C005  F02A         	movff	?i2___aomod+4,??i2_dtoa+4
  6980   00105A  C006  F02B         	movff	?i2___aomod+5,??i2_dtoa+5
  6981   00105E  C007  F02C         	movff	?i2___aomod+6,??i2_dtoa+6
  6982   001062  C008  F02D         	movff	?i2___aomod+7,??i2_dtoa+7
  6983   001066  C026  F013         	movff	??i2_dtoa,i2abs@a
  6984   00106A  C027  F014         	movff	??i2_dtoa+1,i2abs@a+1
  6985   00106E  ECCD  F013         	call	i2_abs	;wreg free
  6986   001072  5013               	movf	?i2_abs^0,w,c
  6987   001074  0F30               	addlw	48
  6988   001076  6EDF               	movwf	indf2,c
  6989   001078                     
  6990                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 489:         --p;
  6991   001078  0630               	decf	i2dtoa@p^0,f,c
  6992   00107A  A0D8               	btfss	status,0,c
  6993   00107C  0631               	decf	(i2dtoa@p+1)^0,f,c
  6994   00107E                     
  6995                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 490:         --w;
  6996   00107E  0632               	decf	i2dtoa@w^0,f,c
  6997   001080  A0D8               	btfss	status,0,c
  6998   001082  0633               	decf	(i2dtoa@w+1)^0,f,c
  6999   001084                     
  7000                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 491:         n = n / 10;
  7001   001084  C034  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  7002   001088  C035  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  7003   00108C  C036  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  7004   001090  C037  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  7005   001094  C038  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  7006   001098  C039  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  7007   00109C  C03A  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  7008   0010A0  C03B  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  7009   0010A4  0E0A               	movlw	10
  7010   0010A6  6E09               	movwf	i2___aodiv@divisor^0,c
  7011   0010A8  0E00               	movlw	0
  7012   0010AA  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  7013   0010AC  0E00               	movlw	0
  7014   0010AE  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  7015   0010B0  0E00               	movlw	0
  7016   0010B2  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  7017   0010B4  0E00               	movlw	0
  7018   0010B6  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  7019   0010B8  0E00               	movlw	0
  7020   0010BA  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  7021   0010BC  0E00               	movlw	0
  7022   0010BE  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  7023   0010C0  0E00               	movlw	0
  7024   0010C2  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  7025   0010C4  EC86  F009         	call	i2___aodiv	;wreg free
  7026   0010C8  C001  F034         	movff	?i2___aodiv,i2dtoa@n
  7027   0010CC  C002  F035         	movff	?i2___aodiv+1,i2dtoa@n+1
  7028   0010D0  C003  F036         	movff	?i2___aodiv+2,i2dtoa@n+2
  7029   0010D4  C004  F037         	movff	?i2___aodiv+3,i2dtoa@n+3
  7030   0010D8  C005  F038         	movff	?i2___aodiv+4,i2dtoa@n+4
  7031   0010DC  C006  F039         	movff	?i2___aodiv+5,i2dtoa@n+5
  7032   0010E0  C007  F03A         	movff	?i2___aodiv+6,i2dtoa@n+6
  7033   0010E4  C008  F03B         	movff	?i2___aodiv+7,i2dtoa@n+7
  7034   0010E8                     i2l3960:
  7035                           
  7036                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 482:     while (!(i < 1) && (
      +                          n || (0 < p)
  7037   0010E8  BE3E               	btfsc	(i2dtoa@i+1)^0,7,c
  7038   0010EA  EF7F  F008         	goto	i2u345_41
  7039   0010EE  503E               	movf	(i2dtoa@i+1)^0,w,c
  7040   0010F0  E108               	bnz	i2u345_40
  7041   0010F2  043D               	decf	i2dtoa@i^0,w,c
  7042   0010F4  A0D8               	btfss	status,0,c
  7043   0010F6  EF7F  F008         	goto	i2u345_41
  7044   0010FA  EF81  F008         	goto	i2u345_40
  7045   0010FE                     i2u345_41:
  7046   0010FE  EF9D  F008         	goto	i2l3966
  7047   001102                     i2u345_40:
  7048   001102  5034               	movf	i2dtoa@n^0,w,c
  7049   001104  1035               	iorwf	(i2dtoa@n+1)^0,w,c
  7050   001106  1036               	iorwf	(i2dtoa@n+2)^0,w,c
  7051   001108  1037               	iorwf	(i2dtoa@n+3)^0,w,c
  7052   00110A  1038               	iorwf	(i2dtoa@n+4)^0,w,c
  7053   00110C  1039               	iorwf	(i2dtoa@n+5)^0,w,c
  7054   00110E  103A               	iorwf	(i2dtoa@n+6)^0,w,c
  7055   001110  103B               	iorwf	(i2dtoa@n+7)^0,w,c
  7056   001112  A4D8               	btfss	status,2,c
  7057   001114  EF8E  F008         	goto	i2u346_41
  7058   001118  EF90  F008         	goto	i2u346_40
  7059   00111C                     i2u346_41:
  7060   00111C  EFF8  F007         	goto	i2l3950
  7061   001120                     i2u346_40:
  7062   001120  BE31               	btfsc	(i2dtoa@p+1)^0,7,c
  7063   001122  EF9D  F008         	goto	i2u347_40
  7064   001126  5031               	movf	(i2dtoa@p+1)^0,w,c
  7065   001128  E106               	bnz	i2u347_41
  7066   00112A  0430               	decf	i2dtoa@p^0,w,c
  7067   00112C  B0D8               	btfsc	status,0,c
  7068   00112E  EF9B  F008         	goto	i2u347_41
  7069   001132  EF9D  F008         	goto	i2u347_40
  7070   001136                     i2u347_41:
  7071   001136  EFF8  F007         	goto	i2l3950
  7072   00113A                     i2u347_40:
  7073   00113A                     i2l3966:
  7074                           
  7075                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 495:     if (s != 0) {
  7076   00113A  503C               	movf	i2dtoa@s^0,w,c
  7077   00113C  B4D8               	btfsc	status,2,c
  7078   00113E  EFA3  F008         	goto	i2u348_41
  7079   001142  EFA5  F008         	goto	i2u348_40
  7080   001146                     i2u348_41:
  7081   001146  EFB0  F008         	goto	i2l3972
  7082   00114A                     i2u348_40:
  7083   00114A                     
  7084                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 496:         --i;
  7085   00114A  063D               	decf	i2dtoa@i^0,f,c
  7086   00114C  A0D8               	btfss	status,0,c
  7087   00114E  063E               	decf	(i2dtoa@i+1)^0,f,c
  7088   001150                     
  7089                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 497:         dbuf[i] = s;
  7090   001150  0E50               	movlw	low _dbuf
  7091   001152  243D               	addwf	i2dtoa@i^0,w,c
  7092   001154  6ED9               	movwf	fsr2l,c
  7093   001156  0E01               	movlw	high _dbuf
  7094   001158  203E               	addwfc	(i2dtoa@i+1)^0,w,c
  7095   00115A  6EDA               	movwf	fsr2h,c
  7096   00115C  C03C  FFDF         	movff	i2dtoa@s,indf2
  7097   001160                     i2l3972:
  7098                           
  7099                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 501:     return (void) pad(fp
      +                          , &dbuf[i], w);
  7100   001160  C01C  F011         	movff	i2dtoa@fp,i2pad@fp
  7101   001164  C01D  F012         	movff	i2dtoa@fp+1,i2pad@fp+1
  7102   001168  0E50               	movlw	low _dbuf
  7103   00116A  243D               	addwf	i2dtoa@i^0,w,c
  7104   00116C  6E13               	movwf	i2pad@buf^0,c
  7105   00116E  0E01               	movlw	high _dbuf
  7106   001170  203E               	addwfc	(i2dtoa@i+1)^0,w,c
  7107   001172  6E14               	movwf	(i2pad@buf+1)^0,c
  7108   001174  C032  F015         	movff	i2dtoa@w,i2pad@p
  7109   001178  C033  F016         	movff	i2dtoa@w+1,i2pad@p+1
  7110   00117C  ECDC  F010         	call	i2_pad	;wreg free
  7111   001180  0012               	return		;funcret
  7112   001182                     __end_ofi2_dtoa:
  7113                           	callstack 0
  7114                           
  7115 ;; *************** function i2_pad *****************
  7116 ;; Defined at:
  7117 ;;		line 133 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7120 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7121 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7122 ;;		 -> dbuf(32), 
  7123 ;;  p               2   20[COMRAM] int 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  w               2   25[COMRAM] int 
  7126 ;;  i               2   23[COMRAM] int 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7136 ;;      Params:         6       0       0       0       0       0       0
  7137 ;;      Locals:         4       0       0       0       0       0       0
  7138 ;;      Temps:          1       0       0       0       0       0       0
  7139 ;;      Totals:        11       0       0       0       0       0       0
  7140 ;;Total ram usage:       11 bytes
  7141 ;; Hardware stack levels used: 1
  7142 ;; Hardware stack levels required when called: 3
  7143 ;; This function calls:
  7144 ;;		i2_fputc
  7145 ;;		i2_fputs
  7146 ;; This function is called by:
  7147 ;;		i2_dtoa
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text46
  7152   0021B8                     __ptext46:
  7153                           	callstack 0
  7154   0021B8                     i2_pad:
  7155                           	callstack 8
  7156   0021B8                     
  7157                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 133: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 134: {;/op
      +                          t/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 135:     int i, w;;/opt/microchip
      +                          /xc8/v2.40/pic/sources/c99/common/doprnt.c: 139:     if (flags & (1 << 0)) {
  7158   0021B8  0100               	movlb	0	; () banked
  7159   0021BA  A1E5               	btfss	_flags& (0+255),0,b
  7160   0021BC  EFE2  F010         	goto	i2u331_41
  7161   0021C0  EFE4  F010         	goto	i2u331_40
  7162   0021C4                     i2u331_41:
  7163   0021C4  EFEE  F010         	goto	i2l3886
  7164   0021C8                     i2u331_40:
  7165   0021C8                     
  7166                           ; BSR set to: 0
  7167                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 140:         fputs((const cha
      +                          r *)buf, fp);
  7168   0021C8  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7169   0021CC  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7170   0021D0  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7171   0021D4  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7172   0021D8  EC6A  F013         	call	i2_fputs	;wreg free
  7173   0021DC                     i2l3886:
  7174                           
  7175                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 145:     w = (p < 0) ? 0 : p;
  7176   0021DC  BE16               	btfsc	(i2pad@p+1)^0,7,c
  7177   0021DE  EFF3  F010         	goto	i2u332_41
  7178   0021E2  EFF5  F010         	goto	i2u332_40
  7179   0021E6                     i2u332_41:
  7180   0021E6  EFFB  F010         	goto	i2l3890
  7181   0021EA                     i2u332_40:
  7182   0021EA  C015  F01A         	movff	i2pad@p,i2pad@w
  7183   0021EE  C016  F01B         	movff	i2pad@p+1,i2pad@w+1
  7184   0021F2  EFFF  F010         	goto	i2l1188
  7185   0021F6                     i2l3890:
  7186   0021F6  0E00               	movlw	0
  7187   0021F8  6E1B               	movwf	(i2pad@w+1)^0,c
  7188   0021FA  0E00               	movlw	0
  7189   0021FC  6E1A               	movwf	i2pad@w^0,c
  7190   0021FE                     i2l1188:
  7191                           
  7192                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 146:     i = 0;
  7193   0021FE  0E00               	movlw	0
  7194   002200  6E19               	movwf	(i2pad@i+1)^0,c
  7195   002202  0E00               	movlw	0
  7196   002204  6E18               	movwf	i2pad@i^0,c
  7197                           
  7198                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 147:     while (i < w) {
  7199   002206  EF11  F011         	goto	i2l3896
  7200   00220A                     i2l3892:
  7201                           
  7202                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 148:         fputc(' ', fp);
  7203   00220A  0E00               	movlw	0
  7204   00220C  6E02               	movwf	(i2fputc@c+1)^0,c
  7205   00220E  0E20               	movlw	32
  7206   002210  6E01               	movwf	i2fputc@c^0,c
  7207   002212  C011  F003         	movff	i2pad@fp,i2fputc@fp
  7208   002216  C012  F004         	movff	i2pad@fp+1,i2fputc@fp+1
  7209   00221A  EC07  F00F         	call	i2_fputc	;wreg free
  7210   00221E                     
  7211                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 149:         ++i;
  7212   00221E  4A18               	infsnz	i2pad@i^0,f,c
  7213   002220  2A19               	incf	(i2pad@i+1)^0,f,c
  7214   002222                     i2l3896:
  7215                           
  7216                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 147:     while (i < w) {
  7217   002222  501A               	movf	i2pad@w^0,w,c
  7218   002224  5C18               	subwf	i2pad@i^0,w,c
  7219   002226  5019               	movf	(i2pad@i+1)^0,w,c
  7220   002228  0A80               	xorlw	128
  7221   00222A  6E17               	movwf	??i2_pad^0,c
  7222   00222C  501B               	movf	(i2pad@w+1)^0,w,c
  7223   00222E  0A80               	xorlw	128
  7224   002230  5817               	subwfb	??i2_pad^0,w,c
  7225   002232  A0D8               	btfss	status,0,c
  7226   002234  EF1E  F011         	goto	i2u333_41
  7227   002238  EF20  F011         	goto	i2u333_40
  7228   00223C                     i2u333_41:
  7229   00223C  EF05  F011         	goto	i2l3892
  7230   002240                     i2u333_40:
  7231   002240                     
  7232                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 154:     if (!(flags & (1 << 
      +                          0))) {
  7233   002240  0100               	movlb	0	; () banked
  7234   002242  B1E5               	btfsc	_flags& (0+255),0,b
  7235   002244  EF26  F011         	goto	i2u334_41
  7236   002248  EF28  F011         	goto	i2u334_40
  7237   00224C                     i2u334_41:
  7238   00224C  EF32  F011         	goto	i2l1193
  7239   002250                     i2u334_40:
  7240   002250                     
  7241                           ; BSR set to: 0
  7242                           ;/opt/microchip/xc8/v2.40/pic/sources/c99/common/doprnt.c: 156:         fputs((const cha
      +                          r *)buf, fp);
  7243   002250  C013  F00A         	movff	i2pad@buf,i2fputs@s
  7244   002254  C014  F00B         	movff	i2pad@buf+1,i2fputs@s+1
  7245   002258  C011  F00C         	movff	i2pad@fp,i2fputs@fp
  7246   00225C  C012  F00D         	movff	i2pad@fp+1,i2fputs@fp+1
  7247   002260  EC6A  F013         	call	i2_fputs	;wreg free
  7248   002264                     i2l1193:
  7249   002264  0012               	return		;funcret
  7250   002266                     __end_ofi2_pad:
  7251                           	callstack 0
  7252                           
  7253 ;; *************** function i2_fputs *****************
  7254 ;; Defined at:
  7255 ;;		line 8 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/nf_fputs.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7258 ;;		 -> dbuf(32), 
  7259 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7260 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  i               2   14[COMRAM] int 
  7263 ;;  c               1   13[COMRAM] unsigned char 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  2    9[COMRAM] int 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7273 ;;      Params:         4       0       0       0       0       0       0
  7274 ;;      Locals:         3       0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0
  7276 ;;      Totals:         7       0       0       0       0       0       0
  7277 ;;Total ram usage:        7 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; Hardware stack levels required when called: 2
  7280 ;; This function calls:
  7281 ;;		i2_fputc
  7282 ;; This function is called by:
  7283 ;;		i2_pad
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text47
  7288   0026D4                     __ptext47:
  7289                           	callstack 0
  7290   0026D4                     i2_fputs:
  7291                           	callstack 8
  7292   0026D4  0E00               	movlw	0
  7293   0026D6  6E10               	movwf	(i2fputs@i+1)^0,c
  7294   0026D8  0E00               	movlw	0
  7295   0026DA  6E0F               	movwf	i2fputs@i^0,c
  7296   0026DC  EF7B  F013         	goto	i2l3780
  7297   0026E0                     i2l3776:
  7298   0026E0  C00E  F001         	movff	i2fputs@c,i2fputc@c
  7299   0026E4  6A02               	clrf	(i2fputc@c+1)^0,c
  7300   0026E6  C00C  F003         	movff	i2fputs@fp,i2fputc@fp
  7301   0026EA  C00D  F004         	movff	i2fputs@fp+1,i2fputc@fp+1
  7302   0026EE  EC07  F00F         	call	i2_fputc	;wreg free
  7303   0026F2  4A0F               	infsnz	i2fputs@i^0,f,c
  7304   0026F4  2A10               	incf	(i2fputs@i+1)^0,f,c
  7305   0026F6                     i2l3780:
  7306   0026F6  500F               	movf	i2fputs@i^0,w,c
  7307   0026F8  240A               	addwf	i2fputs@s^0,w,c
  7308   0026FA  6ED9               	movwf	fsr2l,c
  7309   0026FC  5010               	movf	(i2fputs@i+1)^0,w,c
  7310   0026FE  200B               	addwfc	(i2fputs@s+1)^0,w,c
  7311   002700  6EDA               	movwf	fsr2h,c
  7312   002702  50DF               	movf	indf2,w,c
  7313   002704  6E0E               	movwf	i2fputs@c^0,c
  7314   002706  500E               	movf	i2fputs@c^0,w,c
  7315   002708  A4D8               	btfss	status,2,c
  7316   00270A  EF89  F013         	goto	i2u313_41
  7317   00270E  EF8B  F013         	goto	i2u313_40
  7318   002712                     i2u313_41:
  7319   002712  EF70  F013         	goto	i2l3776
  7320   002716                     i2u313_40:
  7321   002716  0012               	return		;funcret
  7322   002718                     __end_ofi2_fputs:
  7323                           	callstack 0
  7324                           
  7325 ;; *************** function i2_fputc *****************
  7326 ;; Defined at:
  7327 ;;		line 8 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/nf_fputc.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  c               2    0[COMRAM] int 
  7330 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7331 ;;		 -> i2sprintf@f(11), sprintf@f(11), 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  2    0[COMRAM] int 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7343 ;;      Params:         4       0       0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0
  7345 ;;      Temps:          5       0       0       0       0       0       0
  7346 ;;      Totals:         9       0       0       0       0       0       0
  7347 ;;Total ram usage:        9 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; Hardware stack levels required when called: 1
  7350 ;; This function calls:
  7351 ;;		i2_putch
  7352 ;; This function is called by:
  7353 ;;		i2_pad
  7354 ;;		i2_vfpfcnvrt
  7355 ;;		i2_fputs
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text48
  7360   001E0E                     __ptext48:
  7361                           	callstack 0
  7362   001E0E                     i2_fputc:
  7363                           	callstack 11
  7364   001E0E  5003               	movf	i2fputc@fp^0,w,c
  7365   001E10  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  7366   001E12  B4D8               	btfsc	status,2,c
  7367   001E14  EF0E  F00F         	goto	i2u309_41
  7368   001E18  EF10  F00F         	goto	i2u309_40
  7369   001E1C                     i2u309_41:
  7370   001E1C  EF19  F00F         	goto	i2l3764
  7371   001E20                     i2u309_40:
  7372   001E20  5003               	movf	i2fputc@fp^0,w,c
  7373   001E22  1004               	iorwf	(i2fputc@fp+1)^0,w,c
  7374   001E24  A4D8               	btfss	status,2,c
  7375   001E26  EF17  F00F         	goto	i2u310_41
  7376   001E2A  EF19  F00F         	goto	i2u310_40
  7377   001E2E                     i2u310_41:
  7378   001E2E  EF1E  F00F         	goto	i2l3766
  7379   001E32                     i2u310_40:
  7380   001E32                     i2l3764:
  7381   001E32  5001               	movf	i2fputc@c^0,w,c
  7382   001E34  ECCB  F015         	call	i2_putch
  7383   001E38  EF6B  F00F         	goto	i2l1299
  7384   001E3C                     i2l3766:
  7385   001E3C  EE20 F009          	lfsr	2,9
  7386   001E40  5003               	movf	i2fputc@fp^0,w,c
  7387   001E42  26D9               	addwf	fsr2l,f,c
  7388   001E44  5004               	movf	(i2fputc@fp+1)^0,w,c
  7389   001E46  22DA               	addwfc	fsr2h,f,c
  7390   001E48  50DE               	movf	postinc2,w,c
  7391   001E4A  10DE               	iorwf	postinc2,w,c
  7392   001E4C  B4D8               	btfsc	status,2,c
  7393   001E4E  EF2B  F00F         	goto	i2u311_41
  7394   001E52  EF2D  F00F         	goto	i2u311_40
  7395   001E56                     i2u311_41:
  7396   001E56  EF48  F00F         	goto	i2l3770
  7397   001E5A                     i2u311_40:
  7398   001E5A  EE20 F009          	lfsr	2,9
  7399   001E5E  5003               	movf	i2fputc@fp^0,w,c
  7400   001E60  26D9               	addwf	fsr2l,f,c
  7401   001E62  5004               	movf	(i2fputc@fp+1)^0,w,c
  7402   001E64  22DA               	addwfc	fsr2h,f,c
  7403   001E66  EE10 F003          	lfsr	1,3
  7404   001E6A  5003               	movf	i2fputc@fp^0,w,c
  7405   001E6C  26E1               	addwf	fsr1l,f,c
  7406   001E6E  5004               	movf	(i2fputc@fp+1)^0,w,c
  7407   001E70  22E2               	addwfc	fsr1h,f,c
  7408   001E72  50DE               	movf	postinc2,w,c
  7409   001E74  5CE6               	subwf	postinc1,w,c
  7410   001E76  50E6               	movf	postinc1,w,c
  7411   001E78  0A80               	xorlw	128
  7412   001E7A  6E09               	movwf	(??i2_fputc+4)^0,c
  7413   001E7C  50DE               	movf	postinc2,w,c
  7414   001E7E  0A80               	xorlw	128
  7415   001E80  5809               	subwfb	(??i2_fputc+4)^0,w,c
  7416   001E82  B0D8               	btfsc	status,0,c
  7417   001E84  EF46  F00F         	goto	i2u312_41
  7418   001E88  EF48  F00F         	goto	i2u312_40
  7419   001E8C                     i2u312_41:
  7420   001E8C  EF6B  F00F         	goto	i2l1299
  7421   001E90                     i2u312_40:
  7422   001E90                     i2l3770:
  7423   001E90  EE20 F003          	lfsr	2,3
  7424   001E94  5003               	movf	i2fputc@fp^0,w,c
  7425   001E96  26D9               	addwf	fsr2l,f,c
  7426   001E98  5004               	movf	(i2fputc@fp+1)^0,w,c
  7427   001E9A  22DA               	addwfc	fsr2h,f,c
  7428   001E9C  CFDE F005          	movff	postinc2,??i2_fputc
  7429   001EA0  CFDD F006          	movff	postdec2,??i2_fputc+1
  7430   001EA4  C003  FFD9         	movff	i2fputc@fp,fsr2l
  7431   001EA8  C004  FFDA         	movff	i2fputc@fp+1,fsr2h
  7432   001EAC  CFDE F007          	movff	postinc2,??i2_fputc+2
  7433   001EB0  CFDD F008          	movff	postdec2,??i2_fputc+3
  7434   001EB4  5005               	movf	??i2_fputc^0,w,c
  7435   001EB6  2407               	addwf	(??i2_fputc+2)^0,w,c
  7436   001EB8  6ED9               	movwf	fsr2l,c
  7437   001EBA  5006               	movf	(??i2_fputc+1)^0,w,c
  7438   001EBC  2008               	addwfc	(??i2_fputc+3)^0,w,c
  7439   001EBE  6EDA               	movwf	fsr2h,c
  7440   001EC0  C001  FFDF         	movff	i2fputc@c,indf2
  7441   001EC4  EE20 F003          	lfsr	2,3
  7442   001EC8  5003               	movf	i2fputc@fp^0,w,c
  7443   001ECA  26D9               	addwf	fsr2l,f,c
  7444   001ECC  5004               	movf	(i2fputc@fp+1)^0,w,c
  7445   001ECE  22DA               	addwfc	fsr2h,f,c
  7446   001ED0  2ADE               	incf	postinc2,f,c
  7447   001ED2  0E00               	movlw	0
  7448   001ED4  22DD               	addwfc	postdec2,f,c
  7449   001ED6                     i2l1299:
  7450   001ED6  0012               	return		;funcret
  7451   001ED8                     __end_ofi2_fputc:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function i2_putch *****************
  7455 ;; Defined at:
  7456 ;;		line 7 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/putch.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  c               1    wreg     unsigned char 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;  c               1  (no storage) unsigned char 
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7470 ;;      Params:         0       0       0       0       0       0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0
  7473 ;;      Totals:         0       0       0       0       0       0       0
  7474 ;;Total ram usage:        0 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		i2_fputc
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text49
  7484   002B96                     __ptext49:
  7485                           	callstack 0
  7486   002B96                     i2_putch:
  7487                           	callstack 11
  7488   002B96  0012               	return		;funcret
  7489   002B98                     __end_ofi2_putch:
  7490                           	callstack 0
  7491                           
  7492 ;; *************** function i2_abs *****************
  7493 ;; Defined at:
  7494 ;;		line 1 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/abs.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  a               2   18[COMRAM] int 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  2   18[COMRAM] int 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, status,0
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7508 ;;      Params:         2       0       0       0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0
  7510 ;;      Temps:          2       0       0       0       0       0       0
  7511 ;;      Totals:         4       0       0       0       0       0       0
  7512 ;;Total ram usage:        4 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		i2_dtoa
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text50
  7522   00279A                     __ptext50:
  7523                           	callstack 0
  7524   00279A                     i2_abs:
  7525                           	callstack 11
  7526   00279A  BE14               	btfsc	(i2abs@a+1)^0,7,c
  7527   00279C  EFDA  F013         	goto	i2u335_40
  7528   0027A0  5014               	movf	(i2abs@a+1)^0,w,c
  7529   0027A2  E106               	bnz	i2u335_41
  7530   0027A4  0413               	decf	i2abs@a^0,w,c
  7531   0027A6  B0D8               	btfsc	status,0,c
  7532   0027A8  EFD8  F013         	goto	i2u335_41
  7533   0027AC  EFDA  F013         	goto	i2u335_40
  7534   0027B0                     i2u335_41:
  7535   0027B0  EFE8  F013         	goto	i2l1245
  7536   0027B4                     i2u335_40:
  7537   0027B4  C013  F015         	movff	i2abs@a,??i2_abs
  7538   0027B8  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  7539   0027BC  1E15               	comf	??i2_abs^0,f,c
  7540   0027BE  1E16               	comf	(??i2_abs+1)^0,f,c
  7541   0027C0  4A15               	infsnz	??i2_abs^0,f,c
  7542   0027C2  2A16               	incf	(??i2_abs+1)^0,f,c
  7543   0027C4  C015  F013         	movff	??i2_abs,?i2_abs
  7544   0027C8  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  7545   0027CC  EFEC  F013         	goto	i2l1248
  7546   0027D0                     i2l1245:
  7547   0027D0  C013  F013         	movff	i2abs@a,?i2_abs
  7548   0027D4  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  7549   0027D8                     i2l1248:
  7550   0027D8  0012               	return		;funcret
  7551   0027DA                     __end_ofi2_abs:
  7552                           	callstack 0
  7553                           
  7554 ;; *************** function i2___aomod *****************
  7555 ;; Defined at:
  7556 ;;		line 9 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/aomod.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  dividend        8    0[COMRAM] long long 
  7559 ;;  divisor         8    8[COMRAM] long long 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  sign            1   17[COMRAM] unsigned char 
  7562 ;;  counter         1   16[COMRAM] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  8    0[COMRAM] long long 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7572 ;;      Params:        16       0       0       0       0       0       0
  7573 ;;      Locals:         2       0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0
  7575 ;;      Totals:        18       0       0       0       0       0       0
  7576 ;;Total ram usage:       18 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		i2_dtoa
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text51
  7586   0015FA                     __ptext51:
  7587                           	callstack 0
  7588   0015FA                     i2___aomod:
  7589                           	callstack 11
  7590   0015FA  0E00               	movlw	0
  7591   0015FC  6E12               	movwf	i2___aomod@sign^0,c
  7592   0015FE  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  7593   001600  EF06  F00B         	goto	i2u325_40
  7594   001604  EF04  F00B         	goto	i2u325_41
  7595   001608                     i2u325_41:
  7596   001608  EF18  F00B         	goto	i2l3854
  7597   00160C                     i2u325_40:
  7598   00160C  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  7599   00160E  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  7600   001610  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  7601   001612  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  7602   001614  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  7603   001616  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  7604   001618  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  7605   00161A  6C01               	negf	i2___aomod@dividend^0,c
  7606   00161C  0E00               	movlw	0
  7607   00161E  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  7608   001620  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  7609   001622  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  7610   001624  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  7611   001626  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  7612   001628  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  7613   00162A  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  7614   00162C  0E01               	movlw	1
  7615   00162E  6E12               	movwf	i2___aomod@sign^0,c
  7616   001630                     i2l3854:
  7617   001630  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  7618   001632  EF1F  F00B         	goto	i2u326_40
  7619   001636  EF1D  F00B         	goto	i2u326_41
  7620   00163A                     i2u326_41:
  7621   00163A  EF2F  F00B         	goto	i2l3858
  7622   00163E                     i2u326_40:
  7623   00163E  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  7624   001640  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  7625   001642  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  7626   001644  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  7627   001646  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  7628   001648  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  7629   00164A  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  7630   00164C  6C09               	negf	i2___aomod@divisor^0,c
  7631   00164E  0E00               	movlw	0
  7632   001650  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  7633   001652  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  7634   001654  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  7635   001656  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  7636   001658  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  7637   00165A  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  7638   00165C  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  7639   00165E                     i2l3858:
  7640   00165E  5009               	movf	i2___aomod@divisor^0,w,c
  7641   001660  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  7642   001662  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  7643   001664  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  7644   001666  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  7645   001668  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  7646   00166A  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  7647   00166C  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  7648   00166E  B4D8               	btfsc	status,2,c
  7649   001670  EF3C  F00B         	goto	i2u327_41
  7650   001674  EF3E  F00B         	goto	i2u327_40
  7651   001678                     i2u327_41:
  7652   001678  EF86  F00B         	goto	i2l3874
  7653   00167C                     i2u327_40:
  7654   00167C  0E01               	movlw	1
  7655   00167E  6E11               	movwf	i2___aomod@counter^0,c
  7656   001680  EF4C  F00B         	goto	i2l3864
  7657   001684                     i2l3862:
  7658   001684  90D8               	bcf	status,0,c
  7659   001686  3609               	rlcf	i2___aomod@divisor^0,f,c
  7660   001688  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  7661   00168A  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  7662   00168C  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  7663   00168E  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  7664   001690  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  7665   001692  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  7666   001694  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  7667   001696  2A11               	incf	i2___aomod@counter^0,f,c
  7668   001698                     i2l3864:
  7669   001698  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  7670   00169A  EF51  F00B         	goto	i2u328_41
  7671   00169E  EF53  F00B         	goto	i2u328_40
  7672   0016A2                     i2u328_41:
  7673   0016A2  EF42  F00B         	goto	i2l3862
  7674   0016A6                     i2u328_40:
  7675   0016A6                     i2l3866:
  7676   0016A6  5009               	movf	i2___aomod@divisor^0,w,c
  7677   0016A8  5C01               	subwf	i2___aomod@dividend^0,w,c
  7678   0016AA  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7679   0016AC  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  7680   0016AE  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7681   0016B0  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  7682   0016B2  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7683   0016B4  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  7684   0016B6  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7685   0016B8  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  7686   0016BA  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7687   0016BC  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  7688   0016BE  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7689   0016C0  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  7690   0016C2  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7691   0016C4  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  7692   0016C6  A0D8               	btfss	status,0,c
  7693   0016C8  EF68  F00B         	goto	i2u329_41
  7694   0016CC  EF6A  F00B         	goto	i2u329_40
  7695   0016D0                     i2u329_41:
  7696   0016D0  EF7A  F00B         	goto	i2l3870
  7697   0016D4                     i2u329_40:
  7698   0016D4  5009               	movf	i2___aomod@divisor^0,w,c
  7699   0016D6  5E01               	subwf	i2___aomod@dividend^0,f,c
  7700   0016D8  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  7701   0016DA  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  7702   0016DC  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  7703   0016DE  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  7704   0016E0  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  7705   0016E2  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  7706   0016E4  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  7707   0016E6  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  7708   0016E8  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  7709   0016EA  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  7710   0016EC  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  7711   0016EE  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  7712   0016F0  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  7713   0016F2  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  7714   0016F4                     i2l3870:
  7715   0016F4  90D8               	bcf	status,0,c
  7716   0016F6  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  7717   0016F8  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  7718   0016FA  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  7719   0016FC  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  7720   0016FE  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  7721   001700  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  7722   001702  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  7723   001704  3209               	rrcf	i2___aomod@divisor^0,f,c
  7724   001706  2E11               	decfsz	i2___aomod@counter^0,f,c
  7725   001708  EF53  F00B         	goto	i2l3866
  7726   00170C                     i2l3874:
  7727   00170C  5012               	movf	i2___aomod@sign^0,w,c
  7728   00170E  B4D8               	btfsc	status,2,c
  7729   001710  EF8C  F00B         	goto	i2u330_41
  7730   001714  EF8E  F00B         	goto	i2u330_40
  7731   001718                     i2u330_41:
  7732   001718  EF9E  F00B         	goto	i2l3878
  7733   00171C                     i2u330_40:
  7734   00171C  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  7735   00171E  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  7736   001720  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  7737   001722  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  7738   001724  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  7739   001726  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  7740   001728  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  7741   00172A  6C01               	negf	i2___aomod@dividend^0,c
  7742   00172C  0E00               	movlw	0
  7743   00172E  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  7744   001730  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  7745   001732  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  7746   001734  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  7747   001736  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  7748   001738  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  7749   00173A  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  7750   00173C                     i2l3878:
  7751   00173C  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  7752   001740  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  7753   001744  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  7754   001748  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  7755   00174C  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  7756   001750  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  7757   001754  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  7758   001758  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  7759   00175C  0012               	return		;funcret
  7760   00175E                     __end_ofi2___aomod:
  7761                           	callstack 0
  7762                           
  7763 ;; *************** function i2___aodiv *****************
  7764 ;; Defined at:
  7765 ;;		line 9 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/aodiv.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  dividend        8    0[COMRAM] long long 
  7768 ;;  divisor         8    8[COMRAM] long long 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  quotient        8   18[COMRAM] long long 
  7771 ;;  sign            1   17[COMRAM] unsigned char 
  7772 ;;  counter         1   16[COMRAM] unsigned char 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  8    0[COMRAM] long long 
  7775 ;; Registers used:
  7776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7782 ;;      Params:        16       0       0       0       0       0       0
  7783 ;;      Locals:        10       0       0       0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0
  7785 ;;      Totals:        26       0       0       0       0       0       0
  7786 ;;Total ram usage:       26 bytes
  7787 ;; Hardware stack levels used: 1
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		i2_dtoa
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text52
  7796   00130C                     __ptext52:
  7797                           	callstack 0
  7798   00130C                     i2___aodiv:
  7799                           	callstack 11
  7800   00130C  0E00               	movlw	0
  7801   00130E  6E12               	movwf	i2___aodiv@sign^0,c
  7802   001310  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  7803   001312  EF8F  F009         	goto	i2u318_40
  7804   001316  EF8D  F009         	goto	i2u318_41
  7805   00131A                     i2u318_41:
  7806   00131A  EFA1  F009         	goto	i2l3810
  7807   00131E                     i2u318_40:
  7808   00131E  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  7809   001320  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  7810   001322  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  7811   001324  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  7812   001326  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  7813   001328  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  7814   00132A  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  7815   00132C  6C09               	negf	i2___aodiv@divisor^0,c
  7816   00132E  0E00               	movlw	0
  7817   001330  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  7818   001332  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  7819   001334  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  7820   001336  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  7821   001338  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  7822   00133A  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  7823   00133C  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  7824   00133E  0E01               	movlw	1
  7825   001340  6E12               	movwf	i2___aodiv@sign^0,c
  7826   001342                     i2l3810:
  7827   001342  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  7828   001344  EFA8  F009         	goto	i2u319_40
  7829   001348  EFA6  F009         	goto	i2u319_41
  7830   00134C                     i2u319_41:
  7831   00134C  EFBA  F009         	goto	i2l3816
  7832   001350                     i2u319_40:
  7833   001350  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  7834   001352  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  7835   001354  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  7836   001356  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  7837   001358  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  7838   00135A  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  7839   00135C  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  7840   00135E  6C01               	negf	i2___aodiv@dividend^0,c
  7841   001360  0E00               	movlw	0
  7842   001362  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  7843   001364  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  7844   001366  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  7845   001368  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  7846   00136A  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  7847   00136C  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  7848   00136E  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  7849   001370  0E01               	movlw	1
  7850   001372  1A12               	xorwf	i2___aodiv@sign^0,f,c
  7851   001374                     i2l3816:
  7852   001374  EE20  F013         	lfsr	2,i2___aodiv@quotient
  7853   001378  0E07               	movlw	7
  7854   00137A                     i2u320_41:
  7855   00137A  6ADE               	clrf	postinc2,c
  7856   00137C  06E8               	decf	wreg,f,c
  7857   00137E  E2FD               	bc	i2u320_41
  7858   001380  5009               	movf	i2___aodiv@divisor^0,w,c
  7859   001382  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  7860   001384  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  7861   001386  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  7862   001388  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  7863   00138A  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  7864   00138C  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  7865   00138E  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  7866   001390  B4D8               	btfsc	status,2,c
  7867   001392  EFCD  F009         	goto	i2u321_41
  7868   001396  EFCF  F009         	goto	i2u321_40
  7869   00139A                     i2u321_41:
  7870   00139A  EF21  F00A         	goto	i2l3838
  7871   00139E                     i2u321_40:
  7872   00139E  0E01               	movlw	1
  7873   0013A0  6E11               	movwf	i2___aodiv@counter^0,c
  7874   0013A2  EFDD  F009         	goto	i2l3824
  7875   0013A6                     i2l3822:
  7876   0013A6  90D8               	bcf	status,0,c
  7877   0013A8  3609               	rlcf	i2___aodiv@divisor^0,f,c
  7878   0013AA  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  7879   0013AC  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  7880   0013AE  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  7881   0013B0  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  7882   0013B2  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  7883   0013B4  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  7884   0013B6  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  7885   0013B8  2A11               	incf	i2___aodiv@counter^0,f,c
  7886   0013BA                     i2l3824:
  7887   0013BA  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  7888   0013BC  EFE2  F009         	goto	i2u322_41
  7889   0013C0  EFE4  F009         	goto	i2u322_40
  7890   0013C4                     i2u322_41:
  7891   0013C4  EFD3  F009         	goto	i2l3822
  7892   0013C8                     i2u322_40:
  7893   0013C8                     i2l3826:
  7894   0013C8  90D8               	bcf	status,0,c
  7895   0013CA  3613               	rlcf	i2___aodiv@quotient^0,f,c
  7896   0013CC  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  7897   0013CE  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  7898   0013D0  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  7899   0013D2  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  7900   0013D4  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  7901   0013D6  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  7902   0013D8  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  7903   0013DA  5009               	movf	i2___aodiv@divisor^0,w,c
  7904   0013DC  5C01               	subwf	i2___aodiv@dividend^0,w,c
  7905   0013DE  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7906   0013E0  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  7907   0013E2  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7908   0013E4  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  7909   0013E6  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7910   0013E8  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  7911   0013EA  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7912   0013EC  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  7913   0013EE  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7914   0013F0  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  7915   0013F2  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7916   0013F4  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  7917   0013F6  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7918   0013F8  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  7919   0013FA  A0D8               	btfss	status,0,c
  7920   0013FC  EF02  F00A         	goto	i2u323_41
  7921   001400  EF04  F00A         	goto	i2u323_40
  7922   001404                     i2u323_41:
  7923   001404  EF15  F00A         	goto	i2l3834
  7924   001408                     i2u323_40:
  7925   001408  5009               	movf	i2___aodiv@divisor^0,w,c
  7926   00140A  5E01               	subwf	i2___aodiv@dividend^0,f,c
  7927   00140C  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  7928   00140E  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  7929   001410  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  7930   001412  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  7931   001414  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  7932   001416  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  7933   001418  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  7934   00141A  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  7935   00141C  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  7936   00141E  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  7937   001420  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  7938   001422  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  7939   001424  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  7940   001426  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  7941   001428  8013               	bsf	i2___aodiv@quotient^0,0,c
  7942   00142A                     i2l3834:
  7943   00142A  90D8               	bcf	status,0,c
  7944   00142C  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  7945   00142E  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  7946   001430  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  7947   001432  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  7948   001434  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  7949   001436  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  7950   001438  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  7951   00143A  3209               	rrcf	i2___aodiv@divisor^0,f,c
  7952   00143C  2E11               	decfsz	i2___aodiv@counter^0,f,c
  7953   00143E  EFE4  F009         	goto	i2l3826
  7954   001442                     i2l3838:
  7955   001442  5012               	movf	i2___aodiv@sign^0,w,c
  7956   001444  B4D8               	btfsc	status,2,c
  7957   001446  EF27  F00A         	goto	i2u324_41
  7958   00144A  EF29  F00A         	goto	i2u324_40
  7959   00144E                     i2u324_41:
  7960   00144E  EF39  F00A         	goto	i2l3842
  7961   001452                     i2u324_40:
  7962   001452  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  7963   001454  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  7964   001456  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  7965   001458  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  7966   00145A  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  7967   00145C  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  7968   00145E  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  7969   001460  6C13               	negf	i2___aodiv@quotient^0,c
  7970   001462  0E00               	movlw	0
  7971   001464  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  7972   001466  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  7973   001468  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  7974   00146A  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  7975   00146C  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  7976   00146E  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  7977   001470  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  7978   001472                     i2l3842:
  7979   001472  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  7980   001476  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  7981   00147A  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  7982   00147E  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  7983   001482  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  7984   001486  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  7985   00148A  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  7986   00148E  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  7987   001492  0012               	return		;funcret
  7988   001494                     __end_ofi2___aodiv:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function i2_atoi *****************
  7992 ;; Defined at:
  7993 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/atoi.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7996 ;;		 -> STR_2(17), STR_1(22), 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  n               2   13[COMRAM] int 
  7999 ;;  neg             2   11[COMRAM] int 
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  2    6[COMRAM] int 
  8002 ;; Registers used:
  8003 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8009 ;;      Params:         2       0       0       0       0       0       0
  8010 ;;      Locals:         4       0       0       0       0       0       0
  8011 ;;      Temps:          3       0       0       0       0       0       0
  8012 ;;      Totals:         9       0       0       0       0       0       0
  8013 ;;Total ram usage:        9 bytes
  8014 ;; Hardware stack levels used: 1
  8015 ;; Hardware stack levels required when called: 1
  8016 ;; This function calls:
  8017 ;;		i2___wmul
  8018 ;;		i2_isdigit
  8019 ;;		i2_isspace
  8020 ;; This function is called by:
  8021 ;;		i2_vfpfcnvrt
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           	psect	text53
  8026   0019F6                     __ptext53:
  8027                           	callstack 0
  8028   0019F6                     i2_atoi:
  8029                           	callstack 11
  8030   0019F6  0E00               	movlw	0
  8031   0019F8  6E0F               	movwf	(i2atoi@n+1)^0,c
  8032   0019FA  0E00               	movlw	0
  8033   0019FC  6E0E               	movwf	i2atoi@n^0,c
  8034   0019FE  0E00               	movlw	0
  8035   001A00  6E0D               	movwf	(i2atoi@neg+1)^0,c
  8036   001A02  0E00               	movlw	0
  8037   001A04  6E0C               	movwf	i2atoi@neg^0,c
  8038   001A06  EF07  F00D         	goto	i2l3982
  8039   001A0A                     i2l3978:
  8040   001A0A  4A07               	infsnz	i2atoi@s^0,f,c
  8041   001A0C  2A08               	incf	(i2atoi@s+1)^0,f,c
  8042   001A0E                     i2l3982:
  8043   001A0E  C007  FFF6         	movff	i2atoi@s,tblptrl
  8044   001A12  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  8045   001A16                     	if	0	;tblptru may be non-zero
  8046   001A16                     	endif
  8047   001A16                     	if	0	;tblptru may be non-zero
  8048   001A16                     	endif
  8049   001A16  0008               	tblrd		*
  8050   001A18  50F5               	movf	tablat,w,c
  8051   001A1A  0A20               	xorlw	32
  8052   001A1C  B4D8               	btfsc	status,2,c
  8053   001A1E  EF13  F00D         	goto	i2u349_41
  8054   001A22  EF15  F00D         	goto	i2u349_40
  8055   001A26                     i2u349_41:
  8056   001A26  EF05  F00D         	goto	i2l3978
  8057   001A2A                     i2u349_40:
  8058   001A2A  C007  FFF6         	movff	i2atoi@s,tblptrl
  8059   001A2E  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  8060   001A32                     	if	0	;tblptru may be non-zero
  8061   001A32                     	endif
  8062   001A32                     	if	0	;tblptru may be non-zero
  8063   001A32                     	endif
  8064   001A32  0008               	tblrd		*
  8065   001A34  CFF5 F009          	movff	tablat,??i2_atoi
  8066   001A38  0EF7               	movlw	247
  8067   001A3A  2409               	addwf	??i2_atoi^0,w,c
  8068   001A3C  6E0A               	movwf	(??i2_atoi+1)^0,c
  8069   001A3E  6A0B               	clrf	(??i2_atoi+2)^0,c
  8070   001A40  0EFF               	movlw	255
  8071   001A42  220B               	addwfc	(??i2_atoi+2)^0,f,c
  8072   001A44  500B               	movf	(??i2_atoi+2)^0,w,c
  8073   001A46  E109               	bnz	i2u350_40
  8074   001A48  0E05               	movlw	5
  8075   001A4A  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  8076   001A4C  A0D8               	btfss	status,0,c
  8077   001A4E  EF2B  F00D         	goto	i2u350_41
  8078   001A52  EF2D  F00D         	goto	i2u350_40
  8079   001A56                     i2u350_41:
  8080   001A56  EF05  F00D         	goto	i2l3978
  8081   001A5A                     i2u350_40:
  8082   001A5A  EF37  F00D         	goto	i2l3990
  8083   001A5E                     i2l3986:
  8084   001A5E  0E00               	movlw	0
  8085   001A60  6E0D               	movwf	(i2atoi@neg+1)^0,c
  8086   001A62  0E01               	movlw	1
  8087   001A64  6E0C               	movwf	i2atoi@neg^0,c
  8088   001A66                     i2l3988:
  8089   001A66  4A07               	infsnz	i2atoi@s^0,f,c
  8090   001A68  2A08               	incf	(i2atoi@s+1)^0,f,c
  8091   001A6A  EF6C  F00D         	goto	i2l3998
  8092   001A6E                     i2l3990:
  8093   001A6E  C007  FFF6         	movff	i2atoi@s,tblptrl
  8094   001A72  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  8095   001A76                     	if	0	;tblptru may be non-zero
  8096   001A76                     	endif
  8097   001A76                     	if	0	;tblptru may be non-zero
  8098   001A76                     	endif
  8099   001A76  0008               	tblrd		*
  8100   001A78  50F5               	movf	tablat,w,c
  8101   001A7A  6E09               	movwf	??i2_atoi^0,c
  8102   001A7C  6A0A               	clrf	(??i2_atoi+1)^0,c
  8103                           
  8104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8105                           ; Switch size 1, requested type "simple"
  8106                           ; Number of cases is 1, Range of values is 0 to 0
  8107                           ; switch strategies available:
  8108                           ; Name         Instructions Cycles
  8109                           ; simple_byte            4     3 (average)
  8110                           ;	Chosen strategy is simple_byte
  8111   001A7E  500A               	movf	(??i2_atoi+1)^0,w,c
  8112   001A80  0A00               	xorlw	0	; case 0
  8113   001A82  B4D8               	btfsc	status,2,c
  8114   001A84  EF46  F00D         	goto	i2l4666
  8115   001A88  EF6C  F00D         	goto	i2l3998
  8116   001A8C                     i2l4666:
  8117                           
  8118                           ; Switch size 1, requested type "simple"
  8119                           ; Number of cases is 2, Range of values is 43 to 45
  8120                           ; switch strategies available:
  8121                           ; Name         Instructions Cycles
  8122                           ; simple_byte            7     4 (average)
  8123                           ;	Chosen strategy is simple_byte
  8124   001A8C  5009               	movf	??i2_atoi^0,w,c
  8125   001A8E  0A2B               	xorlw	43	; case 43
  8126   001A90  B4D8               	btfsc	status,2,c
  8127   001A92  EF33  F00D         	goto	i2l3988
  8128   001A96  0A06               	xorlw	6	; case 45
  8129   001A98  B4D8               	btfsc	status,2,c
  8130   001A9A  EF2F  F00D         	goto	i2l3986
  8131   001A9E  EF6C  F00D         	goto	i2l3998
  8132   001AA2                     i2l3992:
  8133   001AA2  C00E  F001         	movff	i2atoi@n,i2___wmul@multiplier
  8134   001AA6  C00F  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  8135   001AAA  0E00               	movlw	0
  8136   001AAC  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  8137   001AAE  0E0A               	movlw	10
  8138   001AB0  6E03               	movwf	i2___wmul@multiplicand^0,c
  8139   001AB2  EC17  F015         	call	i2___wmul	;wreg free
  8140   001AB6  C007  FFF6         	movff	i2atoi@s,tblptrl
  8141   001ABA  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  8142   001ABE                     	if	0	;tblptru may be non-zero
  8143   001ABE                     	endif
  8144   001ABE                     	if	0	;tblptru may be non-zero
  8145   001ABE                     	endif
  8146   001ABE  0008               	tblrd		*
  8147   001AC0  50F5               	movf	tablat,w,c
  8148   001AC2  5E01               	subwf	?i2___wmul^0,f,c
  8149   001AC4  0E00               	movlw	0
  8150   001AC6  5A02               	subwfb	(?i2___wmul+1)^0,f,c
  8151   001AC8  0E30               	movlw	48
  8152   001ACA  2401               	addwf	?i2___wmul^0,w,c
  8153   001ACC  6E0E               	movwf	i2atoi@n^0,c
  8154   001ACE  0E00               	movlw	0
  8155   001AD0  2002               	addwfc	(?i2___wmul+1)^0,w,c
  8156   001AD2  6E0F               	movwf	(i2atoi@n+1)^0,c
  8157   001AD4  EF33  F00D         	goto	i2l3988
  8158   001AD8                     i2l3998:
  8159   001AD8  C007  FFF6         	movff	i2atoi@s,tblptrl
  8160   001ADC  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  8161   001AE0                     	if	0	;tblptru may be non-zero
  8162   001AE0                     	endif
  8163   001AE0                     	if	0	;tblptru may be non-zero
  8164   001AE0                     	endif
  8165   001AE0  0008               	tblrd		*
  8166   001AE2  CFF5 F009          	movff	tablat,??i2_atoi
  8167   001AE6  0ED0               	movlw	208
  8168   001AE8  2409               	addwf	??i2_atoi^0,w,c
  8169   001AEA  6E0A               	movwf	(??i2_atoi+1)^0,c
  8170   001AEC  6A0B               	clrf	(??i2_atoi+2)^0,c
  8171   001AEE  0EFF               	movlw	255
  8172   001AF0  220B               	addwfc	(??i2_atoi+2)^0,f,c
  8173   001AF2  500B               	movf	(??i2_atoi+2)^0,w,c
  8174   001AF4  E109               	bnz	i2u351_40
  8175   001AF6  0E0A               	movlw	10
  8176   001AF8  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  8177   001AFA  A0D8               	btfss	status,0,c
  8178   001AFC  EF82  F00D         	goto	i2u351_41
  8179   001B00  EF84  F00D         	goto	i2u351_40
  8180   001B04                     i2u351_41:
  8181   001B04  EF51  F00D         	goto	i2l3992
  8182   001B08                     i2u351_40:
  8183   001B08  500C               	movf	i2atoi@neg^0,w,c
  8184   001B0A  100D               	iorwf	(i2atoi@neg+1)^0,w,c
  8185   001B0C  A4D8               	btfss	status,2,c
  8186   001B0E  EF8B  F00D         	goto	i2u352_41
  8187   001B12  EF8D  F00D         	goto	i2u352_40
  8188   001B16                     i2u352_41:
  8189   001B16  EF9B  F00D         	goto	i2l1270
  8190   001B1A                     i2u352_40:
  8191   001B1A  C00E  F009         	movff	i2atoi@n,??i2_atoi
  8192   001B1E  C00F  F00A         	movff	i2atoi@n+1,??i2_atoi+1
  8193   001B22  1E09               	comf	??i2_atoi^0,f,c
  8194   001B24  1E0A               	comf	(??i2_atoi+1)^0,f,c
  8195   001B26  4A09               	infsnz	??i2_atoi^0,f,c
  8196   001B28  2A0A               	incf	(??i2_atoi+1)^0,f,c
  8197   001B2A  C009  F007         	movff	??i2_atoi,?i2_atoi
  8198   001B2E  C00A  F008         	movff	??i2_atoi+1,?i2_atoi+1
  8199   001B32  EF9F  F00D         	goto	i2l1273
  8200   001B36                     i2l1270:
  8201   001B36  C00E  F007         	movff	i2atoi@n,?i2_atoi
  8202   001B3A  C00F  F008         	movff	i2atoi@n+1,?i2_atoi+1
  8203   001B3E                     i2l1273:
  8204   001B3E  0012               	return		;funcret
  8205   001B40                     __end_ofi2_atoi:
  8206                           	callstack 0
  8207                           
  8208 ;; *************** function i2_isspace *****************
  8209 ;; Defined at:
  8210 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/isspace.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  c               2    0[COMRAM] int 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  2    0[COMRAM] int 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8224 ;;      Params:         2       0       0       0       0       0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0
  8226 ;;      Temps:          2       0       0       0       0       0       0
  8227 ;;      Totals:         4       0       0       0       0       0       0
  8228 ;;Total ram usage:        4 bytes
  8229 ;; Hardware stack levels used: 1
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		i2_atoi
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text54
  8238   0028CE                     __ptext54:
  8239                           	callstack 0
  8240   0028CE                     i2_isspace:
  8241                           	callstack 11
  8242   0028CE  0E20               	movlw	32
  8243   0028D0  1801               	xorwf	i2isspace@c^0,w,c
  8244   0028D2  1002               	iorwf	(i2isspace@c+1)^0,w,c
  8245   0028D4  B4D8               	btfsc	status,2,c
  8246   0028D6  EF6F  F014         	goto	i2u336_41
  8247   0028DA  EF71  F014         	goto	i2u336_40
  8248   0028DE                     i2u336_41:
  8249   0028DE  EF82  F014         	goto	i2l1284
  8250   0028E2                     i2u336_40:
  8251   0028E2  0EF7               	movlw	247
  8252   0028E4  2401               	addwf	i2isspace@c^0,w,c
  8253   0028E6  6E03               	movwf	??i2_isspace^0,c
  8254   0028E8  0EFF               	movlw	255
  8255   0028EA  2002               	addwfc	(i2isspace@c+1)^0,w,c
  8256   0028EC  6E04               	movwf	(??i2_isspace+1)^0,c
  8257   0028EE  5004               	movf	(??i2_isspace+1)^0,w,c
  8258   0028F0  E109               	bnz	i2u337_40
  8259   0028F2  0E05               	movlw	5
  8260   0028F4  5C03               	subwf	??i2_isspace^0,w,c
  8261   0028F6  A0D8               	btfss	status,0,c
  8262   0028F8  EF80  F014         	goto	i2u337_41
  8263   0028FC  EF82  F014         	goto	i2u337_40
  8264   002900                     i2u337_41:
  8265   002900  EF82  F014         	goto	i2l1284
  8266   002904                     i2u337_40:
  8267   002904                     i2l1284:
  8268   002904  0012               	return		;funcret
  8269   002906                     __end_ofi2_isspace:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function i2_isdigit *****************
  8273 ;; Defined at:
  8274 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/isdigit.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  c               2    0[COMRAM] int 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  2    0[COMRAM] int 
  8281 ;; Registers used:
  8282 ;;		None
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8288 ;;      Params:         2       0       0       0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0
  8291 ;;      Totals:         2       0       0       0       0       0       0
  8292 ;;Total ram usage:        2 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		i2_vfpfcnvrt
  8298 ;;		i2_atoi
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text55
  8303   002B98                     __ptext55:
  8304                           	callstack 0
  8305   002B98                     i2_isdigit:
  8306                           	callstack 12
  8307   002B98  0012               	return		;funcret
  8308   002B9A                     __end_ofi2_isdigit:
  8309                           	callstack 0
  8310                           
  8311 ;; *************** function i2___wmul *****************
  8312 ;; Defined at:
  8313 ;;		line 15 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/Umul16.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  multiplier      2    0[COMRAM] unsigned int 
  8316 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  product         2    4[COMRAM] unsigned int 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  2    0[COMRAM] unsigned int 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0, prodl, prodh
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8328 ;;      Params:         4       0       0       0       0       0       0
  8329 ;;      Locals:         2       0       0       0       0       0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0
  8331 ;;      Totals:         6       0       0       0       0       0       0
  8332 ;;Total ram usage:        6 bytes
  8333 ;; Hardware stack levels used: 1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		i2_atoi
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text56
  8342   002A2E                     __ptext56:
  8343                           	callstack 0
  8344   002A2E                     i2___wmul:
  8345                           	callstack 11
  8346   002A2E  5001               	movf	i2___wmul@multiplier^0,w,c
  8347   002A30  0203               	mulwf	i2___wmul@multiplicand^0,c
  8348   002A32  CFF3 F005          	movff	prodl,i2___wmul@product
  8349   002A36  CFF4 F006          	movff	prodh,i2___wmul@product+1
  8350   002A3A  5001               	movf	i2___wmul@multiplier^0,w,c
  8351   002A3C  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  8352   002A3E  50F3               	movf	243,w,c
  8353   002A40  2606               	addwf	(i2___wmul@product+1)^0,f,c
  8354   002A42  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  8355   002A44  0203               	mulwf	i2___wmul@multiplicand^0,c
  8356   002A46  50F3               	movf	243,w,c
  8357   002A48  2606               	addwf	(i2___wmul@product+1)^0,f,c
  8358   002A4A  C005  F001         	movff	i2___wmul@product,?i2___wmul
  8359   002A4E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  8360   002A52  0012               	return		;funcret
  8361   002A54                     __end_ofi2___wmul:
  8362                           	callstack 0
  8363                           
  8364 ;; *************** function i2_lcd_str *****************
  8365 ;; Defined at:
  8366 ;;		line 76 in file "lcd.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  str             2    2[COMRAM] PTR const unsigned char 
  8369 ;;		 -> buffer(10), 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  i               1    4[COMRAM] unsigned char 
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      void 
  8374 ;; Registers used:
  8375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8381 ;;      Params:         2       0       0       0       0       0       0
  8382 ;;      Locals:         1       0       0       0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0
  8384 ;;      Totals:         3       0       0       0       0       0       0
  8385 ;;Total ram usage:        3 bytes
  8386 ;; Hardware stack levels used: 1
  8387 ;; Hardware stack levels required when called: 2
  8388 ;; This function calls:
  8389 ;;		i2_lcd_dat
  8390 ;; This function is called by:
  8391 ;;		_show_line1
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text57
  8396   002894                     __ptext57:
  8397                           	callstack 0
  8398   002894                     i2_lcd_str:
  8399                           	callstack 13
  8400   002894                     
  8401                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  8402   002894  0E00               	movlw	0
  8403   002896  6E05               	movwf	i2lcd_str@i^0,c
  8404                           
  8405                           ;lcd.c: 80:  while(str[i] != 0 )
  8406   002898  EF58  F014         	goto	i2l3168
  8407   00289C                     i2l3164:
  8408                           
  8409                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  8410   00289C  5005               	movf	i2lcd_str@i^0,w,c
  8411   00289E  2403               	addwf	i2lcd_str@str^0,w,c
  8412   0028A0  6ED9               	movwf	fsr2l,c
  8413   0028A2  0E00               	movlw	0
  8414   0028A4  2004               	addwfc	(i2lcd_str@str+1)^0,w,c
  8415   0028A6  6EDA               	movwf	fsr2h,c
  8416   0028A8  50DF               	movf	indf2,w,c
  8417   0028AA  EC2A  F015         	call	i2_lcd_dat
  8418   0028AE                     
  8419                           ;lcd.c: 83:    i++;
  8420   0028AE  2A05               	incf	i2lcd_str@i^0,f,c
  8421   0028B0                     i2l3168:
  8422                           
  8423                           ;lcd.c: 80:  while(str[i] != 0 )
  8424   0028B0  5005               	movf	i2lcd_str@i^0,w,c
  8425   0028B2  2403               	addwf	i2lcd_str@str^0,w,c
  8426   0028B4  6ED9               	movwf	fsr2l,c
  8427   0028B6  0E00               	movlw	0
  8428   0028B8  2004               	addwfc	(i2lcd_str@str+1)^0,w,c
  8429   0028BA  6EDA               	movwf	fsr2h,c
  8430   0028BC  50DF               	movf	indf2,w,c
  8431   0028BE  A4D8               	btfss	status,2,c
  8432   0028C0  EF64  F014         	goto	i2u254_41
  8433   0028C4  EF66  F014         	goto	i2u254_40
  8434   0028C8                     i2u254_41:
  8435   0028C8  EF4E  F014         	goto	i2l3164
  8436   0028CC                     i2u254_40:
  8437   0028CC  0012               	return		;funcret
  8438   0028CE                     __end_ofi2_lcd_str:
  8439                           	callstack 0
  8440                           
  8441 ;; *************** function i2_lcd_dat *****************
  8442 ;; Defined at:
  8443 ;;		line 45 in file "lcd.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  val             1    wreg     unsigned char 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  val             1    1[COMRAM] unsigned char 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg, status,2, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8457 ;;      Params:         0       0       0       0       0       0       0
  8458 ;;      Locals:         1       0       0       0       0       0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0
  8460 ;;      Totals:         1       0       0       0       0       0       0
  8461 ;;Total ram usage:        1 bytes
  8462 ;; Hardware stack levels used: 1
  8463 ;; Hardware stack levels required when called: 1
  8464 ;; This function calls:
  8465 ;;		i2_lcd_wr
  8466 ;; This function is called by:
  8467 ;;		i2_lcd_str
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           	psect	text58
  8472   002A54                     __ptext58:
  8473                           	callstack 0
  8474   002A54                     i2_lcd_dat:
  8475                           	callstack 13
  8476                           
  8477                           ;incstack = 0
  8478                           ;i2lcd_dat@val stored from wreg
  8479   002A54  6E02               	movwf	i2lcd_dat@val^0,c
  8480   002A56                     
  8481                           ;lcd.c: 45: void lcd_dat(unsigned char val);lcd.c: 46: {;lcd.c: 47:  PORTEbits.RE1=1;
  8482   002A56  8284               	bsf	132,1,c	;volatile
  8483   002A58                     
  8484                           ;lcd.c: 48:     lcd_wr(val);
  8485   002A58  5002               	movf	i2lcd_dat@val^0,w,c
  8486   002A5A  ECC2  F015         	call	i2_lcd_wr
  8487   002A5E                     
  8488                           ;lcd.c: 49:     PORTEbits.RE2=1;
  8489   002A5E  8484               	bsf	132,2,c	;volatile
  8490   002A60                     
  8491                           ;lcd.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8492   002A60  0E0D               	movlw	13
  8493   002A62                     i2u449_47:
  8494   002A62  2EE8               	decfsz	wreg,f,c
  8495   002A64  D7FE               	bra	i2u449_47
  8496   002A66  F000               	nop	
  8497   002A68                     
  8498                           ;lcd.c: 51:     PORTEbits.RE1=0;
  8499   002A68  9284               	bcf	132,1,c	;volatile
  8500   002A6A                     
  8501                           ;lcd.c: 52:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8502   002A6A  0E0D               	movlw	13
  8503   002A6C                     i2u450_47:
  8504   002A6C  2EE8               	decfsz	wreg,f,c
  8505   002A6E  D7FE               	bra	i2u450_47
  8506   002A70  F000               	nop	
  8507   002A72                     
  8508                           ;lcd.c: 53:  PORTEbits.RE1=1;
  8509   002A72  8284               	bsf	132,1,c	;volatile
  8510   002A74  0012               	return		;funcret
  8511   002A76                     __end_ofi2_lcd_dat:
  8512                           	callstack 0
  8513                           
  8514 ;; *************** function i2_lcd_cmd *****************
  8515 ;; Defined at:
  8516 ;;		line 34 in file "lcd.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;  val             1    wreg     unsigned char 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  val             1    1[COMRAM] unsigned char 
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  1    wreg      void 
  8523 ;; Registers used:
  8524 ;;		wreg, status,2, cstack
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8530 ;;      Params:         0       0       0       0       0       0       0
  8531 ;;      Locals:         1       0       0       0       0       0       0
  8532 ;;      Temps:          0       0       0       0       0       0       0
  8533 ;;      Totals:         1       0       0       0       0       0       0
  8534 ;;Total ram usage:        1 bytes
  8535 ;; Hardware stack levels used: 1
  8536 ;; Hardware stack levels required when called: 1
  8537 ;; This function calls:
  8538 ;;		i2_lcd_wr
  8539 ;; This function is called by:
  8540 ;;		_show_line1
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text59
  8545   002A76                     __ptext59:
  8546                           	callstack 0
  8547   002A76                     i2_lcd_cmd:
  8548                           	callstack 14
  8549                           
  8550                           ;incstack = 0
  8551                           ;i2lcd_cmd@val stored from wreg
  8552   002A76  6E02               	movwf	i2lcd_cmd@val^0,c
  8553   002A78                     
  8554                           ;lcd.c: 34: void lcd_cmd(unsigned char val);lcd.c: 35: {;lcd.c: 36:  PORTEbits.RE1=1;
  8555   002A78  8284               	bsf	132,1,c	;volatile
  8556   002A7A                     
  8557                           ;lcd.c: 37:     lcd_wr(val);
  8558   002A7A  5002               	movf	i2lcd_cmd@val^0,w,c
  8559   002A7C  ECC2  F015         	call	i2_lcd_wr
  8560   002A80                     
  8561                           ;lcd.c: 38:     PORTEbits.RE2=0;
  8562   002A80  9484               	bcf	132,2,c	;volatile
  8563   002A82                     
  8564                           ;lcd.c: 39:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8565   002A82  0E0D               	movlw	13
  8566   002A84                     i2u451_47:
  8567   002A84  2EE8               	decfsz	wreg,f,c
  8568   002A86  D7FE               	bra	i2u451_47
  8569   002A88  F000               	nop	
  8570   002A8A                     
  8571                           ;lcd.c: 40:     PORTEbits.RE1=0;
  8572   002A8A  9284               	bcf	132,1,c	;volatile
  8573   002A8C                     
  8574                           ;lcd.c: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8575   002A8C  0E0D               	movlw	13
  8576   002A8E                     i2u452_47:
  8577   002A8E  2EE8               	decfsz	wreg,f,c
  8578   002A90  D7FE               	bra	i2u452_47
  8579   002A92  F000               	nop	
  8580   002A94                     
  8581                           ;lcd.c: 42:  PORTEbits.RE1=1;
  8582   002A94  8284               	bsf	132,1,c	;volatile
  8583   002A96  0012               	return		;funcret
  8584   002A98                     __end_ofi2_lcd_cmd:
  8585                           	callstack 0
  8586                           
  8587 ;; *************** function i2_lcd_wr *****************
  8588 ;; Defined at:
  8589 ;;		line 29 in file "lcd.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  val             1    wreg     unsigned char 
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;  val             1    0[COMRAM] unsigned char 
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  1    wreg      void 
  8596 ;; Registers used:
  8597 ;;		wreg
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8603 ;;      Params:         0       0       0       0       0       0       0
  8604 ;;      Locals:         1       0       0       0       0       0       0
  8605 ;;      Temps:          0       0       0       0       0       0       0
  8606 ;;      Totals:         1       0       0       0       0       0       0
  8607 ;;Total ram usage:        1 bytes
  8608 ;; Hardware stack levels used: 1
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		i2_lcd_cmd
  8613 ;;		i2_lcd_dat
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text60
  8618   002B84                     __ptext60:
  8619                           	callstack 0
  8620   002B84                     i2_lcd_wr:
  8621                           	callstack 13
  8622                           
  8623                           ;incstack = 0
  8624                           ;i2lcd_wr@val stored from wreg
  8625   002B84  6E01               	movwf	i2lcd_wr@val^0,c
  8626   002B86                     
  8627                           ;lcd.c: 29: void lcd_wr(unsigned char val);lcd.c: 30: {;lcd.c: 31:   PORTD=val;
  8628   002B86  C001  FF83         	movff	i2lcd_wr@val,3971	;volatile
  8629   002B8A  0012               	return		;funcret
  8630   002B8C                     __end_ofi2_lcd_wr:
  8631                           	callstack 0
  8632                           
  8633 ;; *************** function _f_int0 *****************
  8634 ;; Defined at:
  8635 ;;		line 267 in file "Interrupt.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8649 ;;      Params:         0       0       0       0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 1
  8656 ;; This function calls:
  8657 ;;		_f_pwm
  8658 ;; This function is called by:
  8659 ;;		_read_keyb
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           	psect	text61
  8664   002AD2                     __ptext61:
  8665                           	callstack 0
  8666   002AD2                     _f_int0:
  8667                           	callstack 16
  8668   002AD2                     
  8669                           ;Interrupt.c: 269:     mostra_minuto = mostra_segundo = 0;
  8670   002AD2  0E00               	movlw	0
  8671   002AD4  6E78               	movwf	_mostra_segundo^0,c
  8672   002AD6  C078  F079         	movff	_mostra_segundo,_mostra_minuto
  8673                           
  8674                           ;Interrupt.c: 270:     enable_time_config = 0;
  8675   002ADA  0E00               	movlw	0
  8676   002ADC  0100               	movlb	0	; () banked
  8677   002ADE  6FF5               	movwf	_enable_time_config& (0+255),b
  8678   002AE0                     
  8679                           ; BSR set to: 0
  8680                           ;Interrupt.c: 271:     f_pwm(1023);
  8681   002AE0  0E03               	movlw	3
  8682   002AE2  6E02               	movwf	(f_pwm@duty+1)^0,c
  8683   002AE4  6801               	setf	f_pwm@duty^0,c
  8684   002AE6  ECB4  F014         	call	_f_pwm	;wreg free
  8685   002AEA  0012               	return		;funcret
  8686   002AEC                     __end_of_f_int0:
  8687                           	callstack 0
  8688                           
  8689 ;; *************** function _mux_display *****************
  8690 ;; Defined at:
  8691 ;;		line 14 in file "Display.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;		None
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8705 ;;      Params:         0       0       0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0
  8707 ;;      Temps:          2       0       0       0       0       0       0
  8708 ;;      Totals:         2       0       0       0       0       0       0
  8709 ;;Total ram usage:        2 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; This function calls:
  8712 ;;		Nothing
  8713 ;; This function is called by:
  8714 ;;		_f_timers
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           	psect	text62
  8719   001F9E                     __ptext62:
  8720                           	callstack 0
  8721   001F9E                     _mux_display:
  8722                           	callstack 18
  8723   001F9E                     
  8724                           ;Display.c: 15:     static uint8_t estado = 0;;Display.c: 19:     switch (estado)
  8725   001F9E  EF0D  F010         	goto	i2l3406
  8726   001FA2                     i2l60:
  8727                           
  8728                           ;Display.c: 22:             LATA2 = 1;
  8729   001FA2  8489               	bsf	3977,2,c	;volatile
  8730                           
  8731                           ;Display.c: 23:             LATA5 = 0;
  8732   001FA4  9A89               	bcf	3977,5,c	;volatile
  8733   001FA6                     
  8734                           ;Display.c: 24:             LATD = conv7seg[display1];
  8735   001FA6  0E22               	movlw	low _conv7seg
  8736   001FA8  0100               	movlb	0	; () banked
  8737   001FAA  25ED               	addwf	_display1& (0+255),w,b
  8738   001FAC  6ED9               	movwf	fsr2l,c
  8739   001FAE  6ADA               	clrf	fsr2h,c
  8740   001FB0  0E01               	movlw	high _conv7seg
  8741   001FB2  22DA               	addwfc	fsr2h,f,c
  8742   001FB4  50DF               	movf	indf2,w,c
  8743   001FB6  6E8C               	movwf	140,c	;volatile
  8744   001FB8                     
  8745                           ; BSR set to: 0
  8746                           ;Display.c: 25:             estado = 1;
  8747   001FB8  0E01               	movlw	1
  8748   001FBA  6E7D               	movwf	mux_display@estado^0,c
  8749                           
  8750                           ;Display.c: 26:             break;
  8751   001FBC  EF2A  F010         	goto	i2l65
  8752   001FC0                     i2l62:
  8753                           
  8754                           ;Display.c: 29:             LATA2 = 0;
  8755   001FC0  9489               	bcf	3977,2,c	;volatile
  8756                           
  8757                           ;Display.c: 30:             LATA3 = 1;
  8758   001FC2  8689               	bsf	3977,3,c	;volatile
  8759   001FC4                     
  8760                           ;Display.c: 31:             LATD = conv7seg[display2];
  8761   001FC4  0E22               	movlw	low _conv7seg
  8762   001FC6  0100               	movlb	0	; () banked
  8763   001FC8  25EC               	addwf	_display2& (0+255),w,b
  8764   001FCA  6ED9               	movwf	fsr2l,c
  8765   001FCC  6ADA               	clrf	fsr2h,c
  8766   001FCE  0E01               	movlw	high _conv7seg
  8767   001FD0  22DA               	addwfc	fsr2h,f,c
  8768   001FD2  50DF               	movf	indf2,w,c
  8769   001FD4  6E8C               	movwf	140,c	;volatile
  8770   001FD6                     
  8771                           ; BSR set to: 0
  8772                           ;Display.c: 32:             estado = 2;
  8773   001FD6  0E02               	movlw	2
  8774   001FD8  6E7D               	movwf	mux_display@estado^0,c
  8775                           
  8776                           ;Display.c: 33:             break;
  8777   001FDA  EF2A  F010         	goto	i2l65
  8778   001FDE                     i2l63:
  8779                           
  8780                           ;Display.c: 36:             LATA3 = 0;
  8781   001FDE  9689               	bcf	3977,3,c	;volatile
  8782                           
  8783                           ;Display.c: 37:             LATA4 = 1;
  8784   001FE0  8889               	bsf	3977,4,c	;volatile
  8785   001FE2                     
  8786                           ;Display.c: 38:             LATD = conv7seg[display3];
  8787   001FE2  0E22               	movlw	low _conv7seg
  8788   001FE4  0100               	movlb	0	; () banked
  8789   001FE6  25EB               	addwf	_display3& (0+255),w,b
  8790   001FE8  6ED9               	movwf	fsr2l,c
  8791   001FEA  6ADA               	clrf	fsr2h,c
  8792   001FEC  0E01               	movlw	high _conv7seg
  8793   001FEE  22DA               	addwfc	fsr2h,f,c
  8794   001FF0  50DF               	movf	indf2,w,c
  8795   001FF2  6E8C               	movwf	140,c	;volatile
  8796   001FF4                     
  8797                           ; BSR set to: 0
  8798                           ;Display.c: 39:             estado = 3;
  8799   001FF4  0E03               	movlw	3
  8800   001FF6  6E7D               	movwf	mux_display@estado^0,c
  8801                           
  8802                           ;Display.c: 40:             break;
  8803   001FF8  EF2A  F010         	goto	i2l65
  8804   001FFC                     i2l64:
  8805                           
  8806                           ;Display.c: 43:             LATA4 = 0;
  8807   001FFC  9889               	bcf	3977,4,c	;volatile
  8808                           
  8809                           ;Display.c: 44:             LATA5 = 1;
  8810   001FFE  8A89               	bsf	3977,5,c	;volatile
  8811   002000                     
  8812                           ;Display.c: 45:             LATD = conv7seg[display4];
  8813   002000  0E22               	movlw	low _conv7seg
  8814   002002  0100               	movlb	0	; () banked
  8815   002004  25EA               	addwf	_display4& (0+255),w,b
  8816   002006  6ED9               	movwf	fsr2l,c
  8817   002008  6ADA               	clrf	fsr2h,c
  8818   00200A  0E01               	movlw	high _conv7seg
  8819   00200C  22DA               	addwfc	fsr2h,f,c
  8820   00200E  50DF               	movf	indf2,w,c
  8821   002010  6E8C               	movwf	140,c	;volatile
  8822   002012                     
  8823                           ; BSR set to: 0
  8824                           ;Display.c: 46:             estado = 0;
  8825   002012  0E00               	movlw	0
  8826   002014  6E7D               	movwf	mux_display@estado^0,c
  8827                           
  8828                           ;Display.c: 47:             break;
  8829   002016  EF2A  F010         	goto	i2l65
  8830   00201A                     i2l3406:
  8831   00201A  507D               	movf	mux_display@estado^0,w,c
  8832   00201C  6E01               	movwf	??_mux_display^0,c
  8833   00201E  6A02               	clrf	(??_mux_display+1)^0,c
  8834                           
  8835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8836                           ; Switch size 1, requested type "simple"
  8837                           ; Number of cases is 1, Range of values is 0 to 0
  8838                           ; switch strategies available:
  8839                           ; Name         Instructions Cycles
  8840                           ; simple_byte            4     3 (average)
  8841                           ;	Chosen strategy is simple_byte
  8842   002020  5002               	movf	(??_mux_display+1)^0,w,c
  8843   002022  0A00               	xorlw	0	; case 0
  8844   002024  B4D8               	btfsc	status,2,c
  8845   002026  EF17  F010         	goto	i2l4668
  8846   00202A  EF2A  F010         	goto	i2l65
  8847   00202E                     i2l4668:
  8848                           
  8849                           ; Switch size 1, requested type "simple"
  8850                           ; Number of cases is 4, Range of values is 0 to 3
  8851                           ; switch strategies available:
  8852                           ; Name         Instructions Cycles
  8853                           ; simple_byte           13     7 (average)
  8854                           ;	Chosen strategy is simple_byte
  8855   00202E  5001               	movf	??_mux_display^0,w,c
  8856   002030  0A00               	xorlw	0	; case 0
  8857   002032  B4D8               	btfsc	status,2,c
  8858   002034  EFD1  F00F         	goto	i2l60
  8859   002038  0A01               	xorlw	1	; case 1
  8860   00203A  B4D8               	btfsc	status,2,c
  8861   00203C  EFE0  F00F         	goto	i2l62
  8862   002040  0A03               	xorlw	3	; case 2
  8863   002042  B4D8               	btfsc	status,2,c
  8864   002044  EFEF  F00F         	goto	i2l63
  8865   002048  0A01               	xorlw	1	; case 3
  8866   00204A  B4D8               	btfsc	status,2,c
  8867   00204C  EFFE  F00F         	goto	i2l64
  8868   002050  EF2A  F010         	goto	i2l65
  8869   002054                     i2l65:
  8870   002054  0012               	return		;funcret
  8871   002056                     __end_of_mux_display:
  8872                           	callstack 0
  8873                           
  8874 ;; *************** function _clock_regressive *****************
  8875 ;; Defined at:
  8876 ;;		line 308 in file "Interrupt.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2, status,0, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8890 ;;      Params:         0       0       0       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0
  8893 ;;      Totals:         0       0       0       0       0       0       0
  8894 ;;Total ram usage:        0 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 1
  8897 ;; This function calls:
  8898 ;;		_f_pwm
  8899 ;; This function is called by:
  8900 ;;		_f_timers
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text63
  8905   0023A4                     __ptext63:
  8906                           	callstack 0
  8907   0023A4                     _clock_regressive:
  8908                           	callstack 17
  8909   0023A4                     
  8910                           ;Interrupt.c: 311:     if(mostra_segundo < 1 && mostra_minuto)
  8911   0023A4  5078               	movf	_mostra_segundo^0,w,c
  8912   0023A6  A4D8               	btfss	status,2,c
  8913   0023A8  EFD8  F011         	goto	i2u284_41
  8914   0023AC  EFDA  F011         	goto	i2u284_40
  8915   0023B0                     i2u284_41:
  8916   0023B0  EFE7  F011         	goto	i2l3536
  8917   0023B4                     i2u284_40:
  8918   0023B4  5079               	movf	_mostra_minuto^0,w,c
  8919   0023B6  B4D8               	btfsc	status,2,c
  8920   0023B8  EFE0  F011         	goto	i2u285_41
  8921   0023BC  EFE2  F011         	goto	i2u285_40
  8922   0023C0                     i2u285_41:
  8923   0023C0  EFE7  F011         	goto	i2l3536
  8924   0023C4                     i2u285_40:
  8925   0023C4                     
  8926                           ;Interrupt.c: 312:     {;Interrupt.c: 313:         mostra_segundo = 59;
  8927   0023C4  0E3B               	movlw	59
  8928   0023C6  6E78               	movwf	_mostra_segundo^0,c
  8929   0023C8                     
  8930                           ;Interrupt.c: 314:         mostra_minuto--;
  8931   0023C8  0679               	decf	_mostra_minuto^0,f,c
  8932   0023CA  EF03  F012         	goto	i2l374
  8933   0023CE                     i2l3536:
  8934                           
  8935                           ;Interrupt.c: 318:     mostra_segundo--;
  8936   0023CE  0678               	decf	_mostra_segundo^0,f,c
  8937   0023D0                     
  8938                           ;Interrupt.c: 320:     if(mostra_minuto < 1 && mostra_segundo < 1)
  8939   0023D0  5079               	movf	_mostra_minuto^0,w,c
  8940   0023D2  A4D8               	btfss	status,2,c
  8941   0023D4  EFEE  F011         	goto	i2u286_41
  8942   0023D8  EFF0  F011         	goto	i2u286_40
  8943   0023DC                     i2u286_41:
  8944   0023DC  EF03  F012         	goto	i2l374
  8945   0023E0                     i2u286_40:
  8946   0023E0  5078               	movf	_mostra_segundo^0,w,c
  8947   0023E2  A4D8               	btfss	status,2,c
  8948   0023E4  EFF6  F011         	goto	i2u287_41
  8949   0023E8  EFF8  F011         	goto	i2u287_40
  8950   0023EC                     i2u287_41:
  8951   0023EC  EF03  F012         	goto	i2l374
  8952   0023F0                     i2u287_40:
  8953   0023F0                     
  8954                           ;Interrupt.c: 321:     {;Interrupt.c: 322:         mostra_minuto = mostra_segundo = 0;
  8955   0023F0  0E00               	movlw	0
  8956   0023F2  6E78               	movwf	_mostra_segundo^0,c
  8957   0023F4  C078  F079         	movff	_mostra_segundo,_mostra_minuto
  8958                           
  8959                           ;Interrupt.c: 323:         start_counter = 0;
  8960   0023F8  0E00               	movlw	0
  8961   0023FA  6E7A               	movwf	_start_counter^0,c
  8962   0023FC                     
  8963                           ;Interrupt.c: 324:         f_pwm(1023);
  8964   0023FC  0E03               	movlw	3
  8965   0023FE  6E02               	movwf	(f_pwm@duty+1)^0,c
  8966   002400  6801               	setf	f_pwm@duty^0,c
  8967   002402  ECB4  F014         	call	_f_pwm	;wreg free
  8968   002406                     i2l374:
  8969   002406  0012               	return		;funcret
  8970   002408                     __end_of_clock_regressive:
  8971                           	callstack 0
  8972                           
  8973 ;; *************** function _f_pwm *****************
  8974 ;; Defined at:
  8975 ;;		line 36 in file "main.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  duty            2    0[COMRAM] unsigned short 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8989 ;;      Params:         2       0       0       0       0       0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0
  8991 ;;      Temps:          2       0       0       0       0       0       0
  8992 ;;      Totals:         4       0       0       0       0       0       0
  8993 ;;Total ram usage:        4 bytes
  8994 ;; Hardware stack levels used: 1
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_f_int0
  8999 ;;		_f_int2
  9000 ;;		_clock_regressive
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text64
  9005   002968                     __ptext64:
  9006                           	callstack 0
  9007   002968                     _f_pwm:
  9008                           	callstack 16
  9009   002968                     
  9010                           ;main.c: 36: void f_pwm(uint16_t duty);main.c: 37: {;main.c: 38:     CCP1CON &= 0b110011
      +                          11;
  9011   002968  0ECF               	movlw	207
  9012   00296A  16BD               	andwf	189,f,c	;volatile
  9013                           
  9014                           ;main.c: 39:     CCP1CON |= ((duty & 0b11) << 4);
  9015   00296C  C001  F003         	movff	f_pwm@duty,??_f_pwm	;volatile
  9016   002970  0E03               	movlw	3
  9017   002972  1603               	andwf	??_f_pwm^0,f,c
  9018   002974  3803               	swapf	??_f_pwm^0,w,c
  9019   002976  0BF0               	andlw	240
  9020   002978  12BD               	iorwf	189,f,c	;volatile
  9021                           
  9022                           ;main.c: 40:     CCPR1L = duty >> 2;
  9023   00297A  C001  F003         	movff	f_pwm@duty,??_f_pwm
  9024   00297E  C002  F004         	movff	f_pwm@duty+1,??_f_pwm+1
  9025   002982  90D8               	bcf	status,0,c
  9026   002984  3204               	rrcf	(??_f_pwm+1)^0,f,c
  9027   002986  3203               	rrcf	??_f_pwm^0,f,c
  9028   002988  90D8               	bcf	status,0,c
  9029   00298A  3204               	rrcf	(??_f_pwm+1)^0,f,c
  9030   00298C  3203               	rrcf	??_f_pwm^0,f,c
  9031   00298E  5003               	movf	??_f_pwm^0,w,c
  9032   002990  6EBE               	movwf	190,c	;volatile
  9033   002992  0012               	return		;funcret
  9034   002994                     __end_of_f_pwm:
  9035                           	callstack 0
  9036                           
  9037 ;; *************** function _calcula_minuto_e_segundo *****************
  9038 ;; Defined at:
  9039 ;;		line 64 in file "main.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;		None
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      void 
  9046 ;; Registers used:
  9047 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9053 ;;      Params:         0       0       0       0       0       0       0
  9054 ;;      Locals:         0       0       0       0       0       0       0
  9055 ;;      Temps:          3       0       0       0       0       0       0
  9056 ;;      Totals:         3       0       0       0       0       0       0
  9057 ;;Total ram usage:        3 bytes
  9058 ;; Hardware stack levels used: 1
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_f_timers
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           	psect	text65
  9067   002512                     __ptext65:
  9068                           	callstack 0
  9069   002512                     _calcula_minuto_e_segundo:
  9070                           	callstack 18
  9071   002512                     
  9072                           ;main.c: 66:     minuto = AD_data[0] >> 6;
  9073   002512  C13F  F001         	movff	_AD_data,??_calcula_minuto_e_segundo
  9074   002516  C140  F002         	movff	_AD_data+1,??_calcula_minuto_e_segundo+1
  9075   00251A  0E06               	movlw	6
  9076   00251C  6E03               	movwf	(??_calcula_minuto_e_segundo+2)^0,c
  9077   00251E                     i2u281_45:
  9078   00251E  90D8               	bcf	status,0,c
  9079   002520  3202               	rrcf	(??_calcula_minuto_e_segundo+1)^0,f,c
  9080   002522  3201               	rrcf	??_calcula_minuto_e_segundo^0,f,c
  9081   002524  2E03               	decfsz	(??_calcula_minuto_e_segundo+2)^0,f,c
  9082   002526  EF8F  F012         	goto	i2u281_45
  9083   00252A  5001               	movf	??_calcula_minuto_e_segundo^0,w,c
  9084   00252C  6E7C               	movwf	_minuto^0,c
  9085   00252E                     
  9086                           ;main.c: 67:     segundo = (AD_data[1] >> 4);
  9087   00252E  EE21  F041         	lfsr	2,_AD_data+2
  9088   002532  CFDE F001          	movff	postinc2,??_calcula_minuto_e_segundo
  9089   002536  CFDD F002          	movff	postdec2,??_calcula_minuto_e_segundo+1
  9090   00253A  0E04               	movlw	4
  9091   00253C  6E03               	movwf	(??_calcula_minuto_e_segundo+2)^0,c
  9092   00253E                     i2u282_45:
  9093   00253E  90D8               	bcf	status,0,c
  9094   002540  3202               	rrcf	(??_calcula_minuto_e_segundo+1)^0,f,c
  9095   002542  3201               	rrcf	??_calcula_minuto_e_segundo^0,f,c
  9096   002544  2E03               	decfsz	(??_calcula_minuto_e_segundo+2)^0,f,c
  9097   002546  EF9F  F012         	goto	i2u282_45
  9098   00254A  5001               	movf	??_calcula_minuto_e_segundo^0,w,c
  9099   00254C  6E7B               	movwf	_segundo^0,c
  9100   00254E                     
  9101                           ;main.c: 68:     if(segundo > 59) segundo = 59;
  9102   00254E  0E3B               	movlw	59
  9103   002550  647B               	cpfsgt	_segundo^0,c
  9104   002552  EFAD  F012         	goto	i2u283_41
  9105   002556  EFAF  F012         	goto	i2u283_40
  9106   00255A                     i2u283_41:
  9107   00255A  EFB1  F012         	goto	i2l477
  9108   00255E                     i2u283_40:
  9109   00255E  0E3B               	movlw	59
  9110   002560  6E7B               	movwf	_segundo^0,c
  9111   002562                     i2l477:
  9112   002562  0012               	return		;funcret
  9113   002564                     __end_of_calcula_minuto_e_segundo:
  9114                           	callstack 0
  9115                           
  9116 ;; *************** function _ADC_maq *****************
  9117 ;; Defined at:
  9118 ;;		line 32 in file "ADC.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;		None
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg, status,2, status,0, cstack
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9132 ;;      Params:         0       0       0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0
  9134 ;;      Temps:          2       0       0       0       0       0       0
  9135 ;;      Totals:         2       0       0       0       0       0       0
  9136 ;;Total ram usage:        2 bytes
  9137 ;; Hardware stack levels used: 1
  9138 ;; Hardware stack levels required when called: 1
  9139 ;; This function calls:
  9140 ;;		_select_channel
  9141 ;;		i2_start_AD_conversion
  9142 ;; This function is called by:
  9143 ;;		_f_timers
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text66
  9148   002408                     __ptext66:
  9149                           	callstack 0
  9150   002408                     _ADC_maq:
  9151                           	callstack 17
  9152   002408                     
  9153                           ;ADC.c: 34:     static uint8_t estado = 0;;ADC.c: 36:     switch (estado)
  9154   002408  EF20  F012         	goto	i2l3380
  9155   00240C                     i2l27:
  9156                           
  9157                           ;ADC.c: 39:             AD_data[0] = ADRES;
  9158   00240C  CFC3 F13F          	movff	4035,_AD_data	;volatile
  9159   002410  CFC4 F140          	movff	4036,_AD_data+1	;volatile
  9160   002414                     
  9161                           ;ADC.c: 40:             select_channel(1);
  9162   002414  0E01               	movlw	1
  9163   002416  ECA9  F015         	call	_select_channel
  9164   00241A                     
  9165                           ;ADC.c: 41:             start_AD_conversion();
  9166   00241A  ECC8  F015         	call	i2_start_AD_conversion	;wreg free
  9167   00241E                     
  9168                           ;ADC.c: 42:             estado = 1;
  9169   00241E  0E01               	movlw	1
  9170   002420  6E7E               	movwf	ADC_maq@estado^0,c
  9171                           
  9172                           ;ADC.c: 43:             break;
  9173   002422  EF35  F012         	goto	i2l30
  9174   002426                     i2l29:
  9175                           
  9176                           ;ADC.c: 46:             AD_data[1] = ADRES;
  9177   002426  CFC3 F141          	movff	4035,_AD_data+2	;volatile
  9178   00242A  CFC4 F142          	movff	4036,_AD_data+3	;volatile
  9179   00242E                     
  9180                           ;ADC.c: 47:             select_channel(0);
  9181   00242E  0E00               	movlw	0
  9182   002430  ECA9  F015         	call	_select_channel
  9183   002434                     
  9184                           ;ADC.c: 48:             start_AD_conversion();
  9185   002434  ECC8  F015         	call	i2_start_AD_conversion	;wreg free
  9186   002438                     
  9187                           ;ADC.c: 49:             estado = 0;
  9188   002438  0E00               	movlw	0
  9189   00243A  6E7E               	movwf	ADC_maq@estado^0,c
  9190                           
  9191                           ;ADC.c: 50:             break;
  9192   00243C  EF35  F012         	goto	i2l30
  9193   002440                     i2l3380:
  9194   002440  507E               	movf	ADC_maq@estado^0,w,c
  9195   002442  6E02               	movwf	??_ADC_maq^0,c
  9196   002444  6A03               	clrf	(??_ADC_maq+1)^0,c
  9197                           
  9198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9199                           ; Switch size 1, requested type "simple"
  9200                           ; Number of cases is 1, Range of values is 0 to 0
  9201                           ; switch strategies available:
  9202                           ; Name         Instructions Cycles
  9203                           ; simple_byte            4     3 (average)
  9204                           ;	Chosen strategy is simple_byte
  9205   002446  5003               	movf	(??_ADC_maq+1)^0,w,c
  9206   002448  0A00               	xorlw	0	; case 0
  9207   00244A  B4D8               	btfsc	status,2,c
  9208   00244C  EF2A  F012         	goto	i2l4670
  9209   002450  EF35  F012         	goto	i2l30
  9210   002454                     i2l4670:
  9211                           
  9212                           ; Switch size 1, requested type "simple"
  9213                           ; Number of cases is 2, Range of values is 0 to 1
  9214                           ; switch strategies available:
  9215                           ; Name         Instructions Cycles
  9216                           ; simple_byte            7     4 (average)
  9217                           ;	Chosen strategy is simple_byte
  9218   002454  5002               	movf	??_ADC_maq^0,w,c
  9219   002456  0A00               	xorlw	0	; case 0
  9220   002458  B4D8               	btfsc	status,2,c
  9221   00245A  EF06  F012         	goto	i2l27
  9222   00245E  0A01               	xorlw	1	; case 1
  9223   002460  B4D8               	btfsc	status,2,c
  9224   002462  EF13  F012         	goto	i2l29
  9225   002466  EF35  F012         	goto	i2l30
  9226   00246A                     i2l30:
  9227   00246A  0012               	return		;funcret
  9228   00246C                     __end_of_ADC_maq:
  9229                           	callstack 0
  9230                           
  9231 ;; *************** function i2_start_AD_conversion *****************
  9232 ;; Defined at:
  9233 ;;		line 19 in file "ADC.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      void 
  9240 ;; Registers used:
  9241 ;;		None
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9247 ;;      Params:         0       0       0       0       0       0       0
  9248 ;;      Locals:         0       0       0       0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0
  9250 ;;      Totals:         0       0       0       0       0       0       0
  9251 ;;Total ram usage:        0 bytes
  9252 ;; Hardware stack levels used: 1
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_ADC_maq
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text67
  9261   002B90                     __ptext67:
  9262                           	callstack 0
  9263   002B90                     i2_start_AD_conversion:
  9264                           	callstack 17
  9265   002B90                     
  9266                           ;ADC.c: 21:     GO = 1;
  9267   002B90  82C2               	bsf	4034,1,c	;volatile
  9268   002B92  0012               	return		;funcret
  9269   002B94                     __end_ofi2_start_AD_conversion:
  9270                           	callstack 0
  9271                           
  9272 ;; *************** function _select_channel *****************
  9273 ;; Defined at:
  9274 ;;		line 24 in file "ADC.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  channel         1    wreg     unsigned char 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  channel         1    0[COMRAM] unsigned char 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9288 ;;      Params:         0       0       0       0       0       0       0
  9289 ;;      Locals:         1       0       0       0       0       0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0
  9291 ;;      Totals:         1       0       0       0       0       0       0
  9292 ;;Total ram usage:        1 bytes
  9293 ;; Hardware stack levels used: 1
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_ADC_maq
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text68
  9302   002B52                     __ptext68:
  9303                           	callstack 0
  9304   002B52                     _select_channel:
  9305                           	callstack 17
  9306                           
  9307                           ;incstack = 0
  9308                           ;select_channel@channel stored from wreg
  9309   002B52  6E01               	movwf	select_channel@channel^0,c
  9310   002B54                     
  9311                           ;ADC.c: 24: void select_channel(uint8_t channel);ADC.c: 25: {;ADC.c: 29:     ADCON0 = 0b
      +                          00000001 | (channel << 2);
  9312   002B54  4401               	rlncf	select_channel@channel^0,w,c
  9313   002B56  46E8               	rlncf	wreg,f,c
  9314   002B58  0BFC               	andlw	252
  9315   002B5A  0901               	iorlw	1
  9316   002B5C  6EC2               	movwf	194,c	;volatile
  9317   002B5E  0012               	return		;funcret
  9318   002B60                     __end_of_select_channel:
  9319                           	callstack 0
  9320                           
  9321                           	psect	rparam
  9322   000000                     
  9323                           	psect	temp
  9324   00007F                     btemp:
  9325                           	callstack 0
  9326   00007F                     	ds	1
  9327   000000                     int$flags	set	btemp
  9328   000000                     wtemp8	set	btemp+1
  9329   000000                     ttemp5	set	btemp+1
  9330   000000                     ttemp6	set	btemp+4
  9331   000000                     ttemp7	set	btemp+8
  9332                           
  9333                           	psect	idloc
  9334                           
  9335                           ;Config register IDLOC0 @ 0x200000
  9336                           ;	unspecified, using default values
  9337   200000                     	org	2097152
  9338   200000  FF                 	db	255
  9339                           
  9340                           ;Config register IDLOC1 @ 0x200001
  9341                           ;	unspecified, using default values
  9342   200001                     	org	2097153
  9343   200001  FF                 	db	255
  9344                           
  9345                           ;Config register IDLOC2 @ 0x200002
  9346                           ;	unspecified, using default values
  9347   200002                     	org	2097154
  9348   200002  FF                 	db	255
  9349                           
  9350                           ;Config register IDLOC3 @ 0x200003
  9351                           ;	unspecified, using default values
  9352   200003                     	org	2097155
  9353   200003  FF                 	db	255
  9354                           
  9355                           ;Config register IDLOC4 @ 0x200004
  9356                           ;	unspecified, using default values
  9357   200004                     	org	2097156
  9358   200004  FF                 	db	255
  9359                           
  9360                           ;Config register IDLOC5 @ 0x200005
  9361                           ;	unspecified, using default values
  9362   200005                     	org	2097157
  9363   200005  FF                 	db	255
  9364                           
  9365                           ;Config register IDLOC6 @ 0x200006
  9366                           ;	unspecified, using default values
  9367   200006                     	org	2097158
  9368   200006  FF                 	db	255
  9369                           
  9370                           ;Config register IDLOC7 @ 0x200007
  9371                           ;	unspecified, using default values
  9372   200007                     	org	2097159
  9373   200007  FF                 	db	255
  9374                           
  9375                           	psect	config
  9376                           
  9377                           ; Padding undefined space
  9378   300000                     	org	3145728
  9379   300000  FF                 	db	255
  9380                           
  9381                           ;Config register CONFIG1H @ 0x300001
  9382                           ;	Oscillator Selection bits
  9383                           ;	OSC = HS, HS oscillator
  9384                           ;	Fail-Safe Clock Monitor Enable bit
  9385                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9386                           ;	Internal/External Oscillator Switchover bit
  9387                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9388   300001                     	org	3145729
  9389   300001  02                 	db	2
  9390                           
  9391                           ;Config register CONFIG2L @ 0x300002
  9392                           ;	Power-up Timer Enable bit
  9393                           ;	PWRT = OFF, PWRT disabled
  9394                           ;	Brown-out Reset Enable bits
  9395                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9396                           ;	Brown Out Reset Voltage bits
  9397                           ;	BORV = 3, Minimum setting
  9398   300002                     	org	3145730
  9399   300002  1F                 	db	31
  9400                           
  9401                           ;Config register CONFIG2H @ 0x300003
  9402                           ;	Watchdog Timer Enable bit
  9403                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9404                           ;	Watchdog Timer Postscale Select bits
  9405                           ;	WDTPS = 32768, 1:32768
  9406   300003                     	org	3145731
  9407   300003  1E                 	db	30
  9408                           
  9409                           ; Padding undefined space
  9410   300004                     	org	3145732
  9411   300004  FF                 	db	255
  9412                           
  9413                           ;Config register CONFIG3H @ 0x300005
  9414                           ;	CCP2 MUX bit
  9415                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9416                           ;	PORTB A/D Enable bit
  9417                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  9418                           ;	Low-Power Timer1 Oscillator Enable bit
  9419                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9420                           ;	MCLR Pin Enable bit
  9421                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9422   300005                     	org	3145733
  9423   300005  83                 	db	131
  9424                           
  9425                           ;Config register CONFIG4L @ 0x300006
  9426                           ;	Stack Full/Underflow Reset Enable bit
  9427                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9428                           ;	Single-Supply ICSP Enable bit
  9429                           ;	LVP = OFF, Single-Supply ICSP disabled
  9430                           ;	Extended Instruction Set Enable bit
  9431                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9432                           ;	Background Debugger Enable bit
  9433                           ;	DEBUG = 0x1, unprogrammed default
  9434   300006                     	org	3145734
  9435   300006  81                 	db	129
  9436                           
  9437                           ; Padding undefined space
  9438   300007                     	org	3145735
  9439   300007  FF                 	db	255
  9440                           
  9441                           ;Config register CONFIG5L @ 0x300008
  9442                           ;	Code Protection bit
  9443                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  9444                           ;	Code Protection bit
  9445                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  9446                           ;	Code Protection bit
  9447                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  9448                           ;	Code Protection bit
  9449                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  9450   300008                     	org	3145736
  9451   300008  0F                 	db	15
  9452                           
  9453                           ;Config register CONFIG5H @ 0x300009
  9454                           ;	Boot Block Code Protection bit
  9455                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9456                           ;	Data EEPROM Code Protection bit
  9457                           ;	CPD = OFF, Data EEPROM not code-protected
  9458   300009                     	org	3145737
  9459   300009  C0                 	db	192
  9460                           
  9461                           ;Config register CONFIG6L @ 0x30000A
  9462                           ;	Write Protection bit
  9463                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  9464                           ;	Write Protection bit
  9465                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  9466                           ;	Write Protection bit
  9467                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  9468                           ;	Write Protection bit
  9469                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  9470   30000A                     	org	3145738
  9471   30000A  0F                 	db	15
  9472                           
  9473                           ;Config register CONFIG6H @ 0x30000B
  9474                           ;	Configuration Register Write Protection bit
  9475                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9476                           ;	Boot Block Write Protection bit
  9477                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  9478                           ;	Data EEPROM Write Protection bit
  9479                           ;	WRTD = OFF, Data EEPROM not write-protected
  9480   30000B                     	org	3145739
  9481   30000B  E0                 	db	224
  9482                           
  9483                           ;Config register CONFIG7L @ 0x30000C
  9484                           ;	Table Read Protection bit
  9485                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  9486                           ;	Table Read Protection bit
  9487                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  9488                           ;	Table Read Protection bit
  9489                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  9490                           ;	Table Read Protection bit
  9491                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9492   30000C                     	org	3145740
  9493   30000C  0F                 	db	15
  9494                           
  9495                           ;Config register CONFIG7H @ 0x30000D
  9496                           ;	Boot Block Table Read Protection bit
  9497                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9498   30000D                     	org	3145741
  9499   30000D  40                 	db	64
  9500                           tosu	equ	0xFFF
  9501                           tosh	equ	0xFFE
  9502                           tosl	equ	0xFFD
  9503                           stkptr	equ	0xFFC
  9504                           pclatu	equ	0xFFB
  9505                           pclath	equ	0xFFA
  9506                           pcl	equ	0xFF9
  9507                           tblptru	equ	0xFF8
  9508                           tblptrh	equ	0xFF7
  9509                           tblptrl	equ	0xFF6
  9510                           tablat	equ	0xFF5
  9511                           prodh	equ	0xFF4
  9512                           prodl	equ	0xFF3
  9513                           indf0	equ	0xFEF
  9514                           postinc0	equ	0xFEE
  9515                           postdec0	equ	0xFED
  9516                           preinc0	equ	0xFEC
  9517                           plusw0	equ	0xFEB
  9518                           fsr0h	equ	0xFEA
  9519                           fsr0l	equ	0xFE9
  9520                           wreg	equ	0xFE8
  9521                           indf1	equ	0xFE7
  9522                           postinc1	equ	0xFE6
  9523                           postdec1	equ	0xFE5
  9524                           preinc1	equ	0xFE4
  9525                           plusw1	equ	0xFE3
  9526                           fsr1h	equ	0xFE2
  9527                           fsr1l	equ	0xFE1
  9528                           bsr	equ	0xFE0
  9529                           indf2	equ	0xFDF
  9530                           postinc2	equ	0xFDE
  9531                           postdec2	equ	0xFDD
  9532                           preinc2	equ	0xFDC
  9533                           plusw2	equ	0xFDB
  9534                           fsr2h	equ	0xFDA
  9535                           fsr2l	equ	0xFD9
  9536                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        71
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    119     126
    BANK0           128     97     118
    BANK1           256     23     145
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    i2sprintf@f...source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f...buffer	PTR unsigned char  size(2) Largest target is 0

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[17]), STR_1(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[17]), STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[17]), STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[17]), STR_1(CODE[22]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    S915$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[17]), STR_1(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> buffer(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S862$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S862$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 10
		 -> buffer(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _f_interrupt_high in COMRAM

    _f_timers->_read_keyb
    _f_int2->_f_pwm
    _show_line1->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_atoi->i2___wmul
    i2_lcd_str->i2_lcd_dat
    i2_lcd_dat->i2_lcd_wr
    i2_lcd_cmd->i2_lcd_wr
    _f_int0->_f_pwm
    _clock_regressive->_f_pwm
    _ADC_maq->_select_channel

Critical Paths under _main in BANK0

    _setup->_lcd_init
    _lcd_init->_lcd_cmd
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr
    _show_display->___awdiv

Critical Paths under _f_interrupt_high in BANK0

    None.

Critical Paths under _main in BANK1

    _show_line2->_sprintf
    _sprintf->_vfprintf

Critical Paths under _f_interrupt_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _f_interrupt_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _f_interrupt_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _f_interrupt_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _f_interrupt_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11869
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      44
                            _AD_init
                 _disable_interrupts
                  _enable_interrupts
                     _interrupt_init
                           _lcd_init
                           _setup_io
                _start_AD_conversion
 ---------------------------------------------------------------------------------
 (2) _start_AD_conversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0      44
                                             12 BANK0      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_interrupts                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   11825
                       _show_display
                         _show_line2
 ---------------------------------------------------------------------------------
 (2) _show_line2                                           0     0      0   10621
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    15      8   10317
                                              2 BANK1     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    9670
                                             91 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           24    18      6    9062
                                             72 BANK0     19    13      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    25     10    5044
                                             37 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2775
                                             26 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1357
                                             19 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     857
                                             10 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             28 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             10 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             10 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 9     7      2    1584
                                             16 BANK0      9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                             10 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              4     2      2     371
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     412
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcd_str                                              3     1      2     260
                                             12 BANK0      3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (4) _lcd_dat                                              1     1      0      44
                                             11 BANK0      1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      44
                                             11 BANK0      1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _show_display                                         0     0      0    1204
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             10 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _f_interrupt_high                                   10    10      0   30215
                                              0 BANK0     10    10      0
                           _f_timers
 ---------------------------------------------------------------------------------
 (12) _f_timers                                            0     0      0   30215
                            _ADC_maq
           _calcula_minuto_e_segundo
                   _clock_regressive
                        _mux_display
                          _read_keyb
 ---------------------------------------------------------------------------------
 (13) _read_keyb                                           7     7      0   29921
                                            112 COMRAM     7     7      0
                             _f_int0
                             _f_int1
                             _f_int2
                             _f_int3
                             _f_int4
                             _f_int5
 ---------------------------------------------------------------------------------
 (14) _f_int5                                              0     0      0    7195
                         _show_line1
 ---------------------------------------------------------------------------------
 (14) _f_int4                                              0     0      0    7195
                         _show_line1
 ---------------------------------------------------------------------------------
 (14) _f_int3                                              0     0      0    7195
                         _show_line1
 ---------------------------------------------------------------------------------
 (14) _f_int2                                              0     0      0     272
                              _f_pwm
 ---------------------------------------------------------------------------------
 (14) _f_int1                                              0     0      0    7195
                         _show_line1
 ---------------------------------------------------------------------------------
 (15) _show_line1                                          0     0      0    7195
                          i2_lcd_cmd
                          i2_lcd_str
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (16) i2_sprintf                                          25    15     10    6991
                                             89 COMRAM    23    13     10
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (17) i2_vfprintf                                          8     2      6    6603
                                             81 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (18) i2_vfpfcnvrt                                        24    18      6    6250
                                             62 COMRAM    19    13      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (19) i2_dtoa                                             35    25     10    3614
                                             27 COMRAM    35    25     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (20) i2_pad                                              11     5      6    1730
                                             16 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (21) i2_fputs                                             7     3      4     807
                                              9 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (19) i2_fputc                                             9     5      4     527
                                              0 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (20) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (20) i2_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (20) i2___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (20) i2___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (19) i2_atoi                                              9     7      2     956
                                              6 COMRAM     9     7      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (20) i2_isspace                                           5     3      2     110
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (19) i2_isdigit                                           2     0      2     112
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (20) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2_lcd_str                                           3     1      2     160
                                              2 COMRAM     3     1      2
                          i2_lcd_dat
 ---------------------------------------------------------------------------------
 (17) i2_lcd_dat                                           1     1      0      44
                                              1 COMRAM     1     1      0
                           i2_lcd_wr
 ---------------------------------------------------------------------------------
 (16) i2_lcd_cmd                                           1     1      0      44
                                              1 COMRAM     1     1      0
                           i2_lcd_wr
 ---------------------------------------------------------------------------------
 (18) i2_lcd_wr                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _f_int0                                              0     0      0     272
                              _f_pwm
 ---------------------------------------------------------------------------------
 (13) _mux_display                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _clock_regressive                                    0     0      0     272
                              _f_pwm
 ---------------------------------------------------------------------------------
 (15) _f_pwm                                               4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _calcula_minuto_e_segundo                            3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) _ADC_maq                                             2     2      0      22
                                              1 COMRAM     2     2      0
                     _select_channel
              i2_start_AD_conversion
 ---------------------------------------------------------------------------------
 (14) i2_start_AD_conversion                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _select_channel                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _show_display
       ___awdiv
       ___awmod
     _show_line2
       _lcd_cmd
         _lcd_wr
       _lcd_str
         _lcd_dat
           _lcd_wr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc
             _isdigit
   _setup
     _AD_init
     _disable_interrupts
     _enable_interrupts
     _interrupt_init
     _lcd_init
       _lcd_cmd
     _setup_io
     _start_AD_conversion

 _f_interrupt_high (ROOT)
   _f_timers
     _ADC_maq
       _select_channel
       i2_start_AD_conversion
     _calcula_minuto_e_segundo
     _clock_regressive
       _f_pwm
     _mux_display
     _read_keyb
       _f_int0
         _f_pwm
       _f_int1
         _show_line1
           i2_lcd_cmd
             i2_lcd_wr
           i2_lcd_str
             i2_lcd_dat
               i2_lcd_wr
           i2_sprintf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                     i2_fputs
                       i2_fputc
                 i2_fputc
                 i2_isdigit
       _f_int2
         _f_pwm
       _f_int3
         _show_line1
       _f_int4
         _show_line1
       _f_int5
         _show_line1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      91       7       56.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     61      76       5       92.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     77      7E       1      100.0%
BITBIGSFRlhhhl      1E      0       0      22        0.0%
BITBIGSFRhhlhl      18      0       0      17        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRlhhlh       6      0       0      23        0.0%
BITBIGSFRlhhll       5      0       0      24        0.0%
BITBIGSFRhl          5      0       0      20        0.0%
BITBIGSFRllh         4      0       0      25        0.0%
BITBIGSFRhhllh       4      0       0      18        0.0%
BITBIGSFRhhlll       4      0       0      19        0.0%
BITBIGSFRlllh        1      0       0      26        0.0%
BITBIGSFRlhhhh       1      0       0      21        0.0%
BITBIGSFRllll        1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     185      28        0.0%
DATA                 0      0     185       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jan  1 10:05:42 2023

                              l15 2B50                                l18 2B8E  
                              _GO 007E11                      ___awdiv@sign 008F  
             ___wmul@multiplicand 008C                  f_timers@counter1 013B  
                f_timers@counter2 0139                  f_timers@counter3 0137  
                f_timers@counter4 0135                  f_timers@counter5 0133  
          __end_of_interrupt_init 2AD2                               l140 26D2  
                             l143 29E0                               l402 2A06  
                             l411 2856                               l405 233E  
                             l610 15F8                               l291 2B82  
                             l294 2B68                               l383 2798  
                             l480 23A2                               l473 2938  
                             l297 2AD0                               l714 1F9C  
                             l483 29BA                               l396 2B72  
                             l727 2106                               l399 2A2C  
                             l597 130A                               _GIE 007F97  
                             _RE0 007C20                               _PR2 000FCB  
              i2___aodiv@quotient 0013                               _abs 2718  
                             _pad 2108                      ___awmod@sign 008F  
                             wreg 000FE8                   __end_of_ADC_maq 246C  
             __end_ofi2_vfpfcnvrt 0C82                        i2_dtoa$953 002E  
                   ADC_maq@estado 007E                   __end_of_AD_init 2B52  
                            l1200 0D16                              l1201 0D5C  
                            ?_abs 009C                              l1212 0F02  
                            l1310 2B94                              l1241 2510  
                            l1161 24BE                              l1307 2646  
                            l1235 0956                              l1245 2750  
                            l1270 18A2                              l1191 2194  
                            l3200 29FC                              l1248 2758  
                            l1273 18AA                              l1193 21B6  
                            l3202 2A04                              l4010 29B2  
                            l3300 1F3C                              l1276 2966  
                            l1284 268E                              l4020 11B6  
                            l1188 2150                              l4100 213C  
                            l3310 1F70                              l3302 1F4A  
                            l4030 11F8                              l4022 11BA  
                            l4014 1182                              l4110 21A2  
                            l4102 2148                              l1198 0D0E  
                            l3312 1F76                              l3304 1F50  
                            l4008 2994                              l4120 2648  
                            l4040 1252                              l4032 1216  
                            l4024 11C8                              l4016 1188  
                            l4112 2718                              l4104 215C  
                            l4200 0CB8                              l3306 1F66  
                            l3314 1F7C                              l3330 2076  
                            l3322 2056                              l3082 2B6E  
                            l3250 2A18                              l4122 264E  
                            l4042 1280                              l4034 121E  
                            l4050 12BA                              l4026 11E8  
                            l4018 1196                              l4114 2734  
                            l4106 2170                              l4210 0D2E  
                            l4202 0CC8                              l1299 1E0C  
                            l3316 1F8C                              l3308 1F6E  
                            l3340 20AE                              l3332 2084  
                            l3324 205C                              l3252 2A20  
                            l3244 2A0C                              l4116 293A  
                            l4124 2662                              l4052 12CA  
                            l4044 12A0                              l4036 1232  
                            l4028 11EC                              l4060 149A  
                            l4108 2176                              l4220 0D64  
                            l4212 0D34                              l4204 0CE8  
                            l4300 0692                              l3412 2B7C  
                            l3420 22DC                              l3318 1F94  
                            l3342 20BC                              l3350 20E6  
                            l3334 208C                              l3326 206A  
                            l3254 2A22                              l3246 2A0E  
                            l3190 29E6                              l3270 281A  
                            l4126 2684                              l4054 12EA  
                            l4046 12A2                              l4038 1240  
                            l4070 14FA                              l4062 14A8  
                            l4230 0E04                              l4222 0D6E  
                            l4214 0D44                              l4206 0D02  
                            l4302 06C8                              l3430 2314  
                            l3422 22EE                              l3414 29BC  
                            l3280 1EDE                              l3352 20F6  
                            l3344 20D2                              l3336 209E  
                            l3328 2072                              l3256 2A2A  
                            l3248 2A16                              l3192 29E8  
                            l3272 2824                              l4128 2688  
                            l4048 12B4                              l4080 1570  
                            l4072 1518                              l4064 14C8  
                            l4240 0ECC                              l4224 0D74  
                            l4232 0E68                              l4216 0D50  
                            l4208 0D1E                              l4320 0786  
                            l4312 0712                              l4304 06D6  
                            l3360 2B44                              l3416 2AB8  
                            l3440 2332                              l3432 231A  
                            l3424 22F0                              l3290 1F0E  
                            l3282 1EEC                              l3354 20FE  
                            l3346 20DA                              l3338 20A6  
                            l3194 29F0                              l3274 2836  
                            l4250 1774                              l4090 15D8  
                            l4082 1590                              l4074 1520  
                            l4066 14CC                              l4058 1494  
                            l4242 0ED2                              l4234 0E84  
                            l4226 0DF8                              l4218 0D58  
                            l4330 0812                              l4322 07AA  
                            l4314 074C                              l4306 06E4  
                            l4410 24AC                              l4402 246C  
                            l3442 2338                              l3434 2320  
                            l3426 22F6                              l3418 22D8  
                            l3362 2B8C                              l3292 1F12  
                            l3284 1EF4                              l3348 20E0  
                            l3196 29F2                              l3276 283A  
                            l4260 17D0                              l4084 15A2  
                            l4076 1534                              l4068 14DA  
                            l4244 0EE2                              l4236 0EA2  
                            l4228 0DFE                              l4340 08EA  
                            l4324 07E4                              l4316 0770  
                            l4332 084C                              l4308 0704  
                            l4404 247E                              l3444 2B60  
                            l3436 2326                              l3428 230C  
                            l3294 1F1A                              l3286 1EF8  
                            l3278 1ED8                              l3198 29FA  
                            l4270 1844                              l4262 17D8  
                            l4254 1778                              l4078 1542  
                            l4086 15A8                              l4094 2108  
                            l4238 0EBC                              l4334 085C  
                            l4326 0804                              l4318 0778  
                            l4406 2486                              l3438 232C  
                            l3296 1F2C                              l3288 1F06  
                            l4272 1874                              l4264 180C  
                            l4256 1794                              l4248 175E  
                            l4088 15B8                              l4096 2118  
                            l4344 091A                              l4336 0878  
                            l4408 248E                              l3560 2694  
                            l3298 1F34                              l4274 1886  
                            l4258 17C8                              l4098 212C  
                            l4338 0894                              l4290 062A  
                            l3570 26A4                              l3562 2698  
                            l3556 2340                              l4196 0C82  
                            l4292 064E                              l4348 092C  
                            l4372 24C0                              l4540 292E  
                            l3580 26B2                              l3572 26A8  
                            l3564 269C                              l4198 0CA2  
                            l4294 065C                              l4374 24CC  
                            l4542 2932                              l4534 2906  
                            l3590 26C6                              l3582 26B4  
                            l3574 26AC                              l3566 26A0  
                            l3558 2690                              ?_pad 009A  
                            l3920 2620                              l4296 066A  
                            l4376 24EA                              l4536 2918  
                            l3584 26B8                              l3576 26AE  
                            l3568 26A2                              l3922 2626  
                            l4298 066E                              l4378 2506  
                            l4490 2764                              l4538 291C  
                            l3586 26BE                              l3578 26B0  
                            l3916 2600                              l4492 2786  
                            l3588 26C2                              l4580 2B04  
                            l3790 1D90                              l3782 1D42  
                            l3918 260E                              l4494 2794  
                            l4486 275A                              l4582 2B08  
                            l4664 17F6                              l3792 1DC6  
                            l3784 1D56                              l4488 275E  
                            l3786 1D68                              l3788 1D72  
       _aciona_imprime_tempratura 014E                              _ADIE 007CEE  
                            _ADIF 007CF6                              STR_1 0601  
                            STR_2 0617                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            u4000 0692                              _LATD 000F8C  
                            u4001 068E                              u4010 06D6  
                            u4011 06D2                              u3140 1D56  
                            u4020 074C                              u3141 1D52  
                            u4021 0748                              u3150 1D68  
                            u4030 0770                              u3151 1D64  
                            u4031 076C                              u2600 1F4A  
                            u3160 1D90                              u4040 07AA  
                            u2601 1F46                              u3161 1D8C  
                            u4041 07A6                              u2610 1F66  
                            u3170 1DC6                              u4050 084C  
                            u2611 1F62                              u3171 1DC2  
                            u4051 0848                              u2620 1F8C  
                            u4060 0878                              u2621 1F88  
                            u4061 0874                              u2630 206A  
                            u4070 0894                              u2631 2066  
                            u4071 0890                              u2640 2084  
                            u2560 2856                              u3600 14A8  
                            u4080 2506                              _IPEN 007E87  
                            u2641 2080                              u2561 2852  
                            u3601 14A4                              u4081 2502  
                            u2570 1EEC                              u2650 209E  
                            u3530 1196                              u3610 14DA  
                            u2571 1EE8                              u2651 209A  
                            u3531 1192                              u3611 14D6  
                            u2580 1F06                              u2660 20BC  
                            u3540 11C8                              u3620 1518  
                            u3700 2734                              u3380 2646  
                            u4260 2918                              u2581 1F02  
                            u2661 20B8                              u3541 11C4  
                            u3621 1514                              u3701 2730  
                            u3381 2642                              u4261 2914  
                            u2590 1F2C                              u2670 20D2  
                            u3710 2960                              u3630 1542  
                            u4270 292E                              u2591 1F28  
                            u2671 20CE                              u3711 295A  
                            u3551 11F2                              u3631 153E  
                            u4271 292A                              u2680 20F6  
                            u3720 2962                              u3560 1216  
                            u3640 1570                              u2681 20F2  
                            u3561 1212                              u3641 156C  
                            u3730 2662                              u3570 1240  
                            u3650 15B8                              u3731 265E  
                            u3571 123C                              u3651 15B4  
                            u4427 22E4                              _PEIE 007F96  
                            u3740 2684                              u3580 1280  
                            u3660 2118                              u3900 0E84  
                            u3741 2680                              u3581 127C  
                            u3661 2114                              u3901 0E80  
                            u4437 22FE                              u3590 12CA  
                            u3670 213C                              u3910 0EA2  
                            u3591 12C6                              u3671 2138  
                            u3911 0E9E                              u4447 230E  
                            u3680 2194                              u3920 0EBC  
                            u3840 0CB4                              u4457 29F4  
                            u3681 2190                              u3921 0EB8  
                            u3841 0CAE                              u3690 21A2  
                            u3930 0ECC                              u3850 0CB6  
                            u4467 29FE                              u3691 219E  
                            u3931 0EC8                              u3940 1794  
                            u3860 0CC8                              i2l21 2B5E  
                            u4477 2A1A                              u3941 1790  
                            u3861 0CC4                              i2l30 246A  
                            u3950 17C4                              u3870 0D02  
                            u4487 2A24                              u3951 17C0  
                            u3871 0CFE                              u3960 1874  
                            u3880 0D2E                              u3961 1870  
                            u3881 0D2A                              i2l18 2B92  
                            u3970 1886                              u3890 0D44  
                            i2l27 240C                              u3971 1882  
                            u3891 0D40                              i2l60 1FA2  
                            i2l29 2426                              i2l62 1FC0  
                            u3990 064E                              i2l63 1FDE  
                            u3991 064A                              i2l64 1FFC  
                            i2l65 2054                              _TMR0 000FD6  
       ?_calcula_minuto_e_segundo 0001                              abs@a 009C  
                            _dbuf 0150                              _atoi 175E  
                            _main 2B04                              _dtoa 0C82  
                            _loop 2906                              _prec 00E3  
                            pad@i 00A1                              pad@p 009E  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 00A3             i2_start_AD_conversion 2B90  
                            fsr2l 000FD9                              btemp 007F  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                   __end_ofi2_fputc 1ED8  
                 __end_ofi2_fputs 2718                   __end_ofi2_putch 2B98  
                    ___param_bank 000000                             ??_abs 009E  
                           ??_pad 00A0                        i2_vfprintf 25B2  
                      i2lcd_str@i 0005                   __end_of___aodiv 130C  
                           ?_atoi 0090                             ?_main 0001  
                           ?_dtoa 00A5                   __end_of___aomod 15FA  
                 __end_of___awdiv 1F9E                             _ADRES 000FC3  
                           ?_loop 0001                   __end_of___awmod 2108  
                 ?_interrupt_init 0001                             _T0CON 000FD5  
                 ___awdiv@divisor 008C                             _T2CON 000FCA  
                           _LATA2 007C4A                             _LATA3 007C4B  
                           _LATA4 007C4C                             _LATA5 007C4D  
                           i2l402 2A74                             i2l411 28CC  
                           i2l319 1D40                             i2l352 19F4  
                           i2l361 2B02                             i2l610 175C  
                           i2l370 2B22                             i2l355 2AEA  
                           i2l283 1BB2                             i2l364 2B42  
                           i2l284 1BD0                             i2l285 1BEE  
                           i2l374 2406                             i2l358 2AB6  
                           i2l286 1C1A                             i2l367 2B32  
                           i2l288 1C46                             i2l378 2892  
                           i2l483 2A52                             i2l468 2992  
                           i2l396 2B8A                             i2l477 2562  
                           i2l399 2A96                             i2l597 1492  
                 ___awdiv@counter 008E                      vfpfcnvrt@fmt 00CA  
                           _PORTB 000F81                             _PORTD 000F83  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             i2_abs 279A  
                           i2_pad 21B8                   __end_of_lcd_dat 2A08  
                 __end_of_lcd_cmd 2A2E                     _start_counter 007A  
                 __end_of_lcd_str 2858                        i2isdigit@c 0001  
                           _f_pwm 2968                             _flags 00E5  
                           _fputc 1D42                             _fputs 2600  
                 __end_of_isdigit 2968                _disable_interrupts 2B7C  
                           _setup 2690                             atoi@n 0097  
                           pad@fp 009A                             atoi@s 0090  
                           _width 00E1                             _putch 2B94  
                           dtoa@d 00A7                             dtoa@i 00C6  
                           dtoa@n 00BD                             dtoa@p 00B9  
                           dtoa@s 00C5                             dtoa@w 00BB  
               ?_clock_regressive 0001                   __end_of_isspace 2690  
                           tablat 000FF5                  __end_ofi2___wmul 2A54  
              ??_clock_regressive 0005                             ttemp5 0080  
                           ttemp6 0083                             ttemp7 0087  
                           status 000FD8                        i2isspace@c 0001  
                           wtemp8 0080                   __end_of_sprintf 24C0  
                __end_ofi2_lcd_wr 2B8C               ?_disable_interrupts 0001  
                _f_interrupt_high 0008                   __initialization 2266  
                    __end_of_atoi 18AC                      __end_of_main 2B14  
                    __end_of_dtoa 0F04                      __end_of_loop 293A  
                     i2_vfpfcnvrt 0958                         ??_ADC_maq 0002  
                   i2vfpfcnvrt@ap 0043                     i2vfpfcnvrt@cp 0050  
                   i2vfpfcnvrt@fp 003F                 read_keyb@dado_RB0 0071  
               read_keyb@dado_RB1 0072                 read_keyb@dado_RB2 0073  
               read_keyb@dado_RB3 0074                 read_keyb@dado_RB4 0075  
               read_keyb@dado_RB5 0076                            ??_atoi 0092  
                          ??_main 00E1                            ??_dtoa 00AF  
                          ??_loop 00E1                     __activetblptr 000002  
            ??_disable_interrupts 008A                        i2sprintf@f 0066  
                      i2sprintf@s 005A                         ??_AD_init 008A  
                          ?i2_abs 0013                            ?i2_pad 0011  
                     i2lcd_wr@val 0001                            ?_f_pwm 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            ?_fputc 008A  
                          ?_fputs 0093                            _CCPR1L 000FBE  
                ___awdiv@dividend 008A                            ?_setup 0001  
                          ?_putch 0001                            _INT0IE 007F94  
                          _INT0IF 007F91                            _INT1IE 007F83  
                          _INT1IF 007F80                            _INT2IE 007F84  
                          _INT2IF 007F81                            i2l1200 0F98  
                          i2l1201 0FDE                            i2l1212 1180  
                          i2l1310 2B96                            i2l1241 25FE  
                          i2l1161 25B0                            i2l1307 2716  
                          i2l1235 0C80                            i2l1245 27D0  
                          i2l1270 1B36                            i2l1191 2240  
                          i2l4000 1B08                            i2l1248 27D8  
                          i2l1273 1B3E                            i2l1193 2264  
                          i2l4002 1B1A                            i2l3060 2A58  
                          i2l1276 2B98                            i2l1284 2904  
                          i2l1188 21FE                            i2l3214 2B54  
                          i2l3150 2A7A                            i2l3070 2A72  
                          i2l3062 2A5E                            i2l1198 0F90  
                          i2l3230 2AF6                            i2l3400 2000  
                          i2l3216 2AD2                            i2l3160 2A94  
                          i2l3152 2A80                            i2l3064 2A60  
                          i2l3402 2012                            i2l3218 2AE0  
                          i2l3154 2A82                            i2l3066 2A68  
                          i2l3058 2A56                            i2l3162 2894  
                          i2l1299 1ED6                            i2l3156 2A8A  
                          i2l3148 2A78                            i2l3068 2A6A  
                          i2l3164 289C                            i2l4140 099C  
                          i2l4132 0958                            i2l3228 2AEC  
                          i2l3182 2968                            i2l3406 201A  
                          i2l3158 2A8C                            i2l3166 28AE  
                          i2l4150 0A32                            i2l4142 09C0  
                          i2l4134 097C                            i2l3520 252E  
                          i2l3168 28B0                            i2l4160 0AA6  
                          i2l4144 09F6                            i2l4136 098A  
                          i2l4400 2B1E                            i2l3370 241E  
                          i2l3522 254E                            i2l3530 23C4  
                          i2l4162 0AB4                            i2l4154 0A40  
                          i2l4146 0A04                            i2l4138 0998  
                          i2l3372 242E                            i2l3380 2440  
                          i2l3364 2408                            i2l3524 255E  
                          i2l3540 23E0                            i2l3532 23C8  
                          i2l4180 0BC0                            i2l4172 0B40  
                          i2l4164 0AD8                            i2l4156 0A78  
                          i2l4148 0A12                            i2l4420 18CA  
                          i2l4500 1C78                            i2l3358 2B90  
                          i2l3374 2434                            i2l3366 2414  
                          i2l3518 2512                            i2l3542 23F0  
                          i2l3526 23A4                            i2l3390 1FB8  
                          i2l4182 0C16                            i2l4166 0B12  
                          i2l4158 0A9C                            i2l4174 0B78  
                          i2l4190 0C58                            i2l4430 18FA  
                          i2l4422 18D8                            i2l4414 18AC  
                          i2l4510 1CBC                            i2l4502 1C90  
                          i2l3376 2438                            i2l3368 241A  
                          i2l3544 23FC                            i2l3528 23B4  
                          i2l3536 23CE                            i2l3392 1FC4  
                          i2l4176 0B88                            i2l4168 0B32  
                          i2l4280 25B2                            i2l4360 2584  
                          i2l4440 1926                            i2l4432 18FE  
                          i2l4424 18E0                            i2l4416 18BE  
                          i2l4520 1CEC                            i2l4512 1CC4  
                          i2l4504 1C98                            i2l3538 23D0  
                          i2l3394 1FD6                            i2l3386 1F9E  
                          i2l3810 1342                            i2l3802 130C  
                          i2l4186 0C46                            i2l4178 0BA4  
                          i2l4282 25BE                            i2l4362 25A0  
                          i2l4354 2564                            i2l4370 2886  
                          i2l4450 194C                            i2l4442 192E  
                          i2l4434 190C                            i2l4426 18E4  
                          i2l4418 18C6                            i2l4530 1D28  
                          i2l4522 1CF4                            i2l4514 1CC8  
                          i2l4506 1C9C                            i2l3396 1FE2  
                          i2l3388 1FA6                            i2l2908 2B86  
                          i2l3820 139E                            i2l3812 1350  
                          i2l3804 1310                            i2l3900 279A  
                          i2l4284 25DA                            i2l4356 2574  
                          i2l4460 1990                            i2l4452 1960  
                          i2l4444 1932                            i2l4436 1914  
                          i2l4428 18F2                            i2l4532 1D30  
                          i2l4524 1D04                            i2l4516 1CCC  
                          i2l4508 1CA6                            i2l3398 1FF4  
                          i2l3910 28E2                            i2l3830 1408  
                          i2l3822 13A6                            i2l3814 1370  
                          i2l3806 131E                            i2l3902 27B4  
                          i2l4286 25F6                            i2l4358 257C  
                          i2l4366 2858                            i2l4382 2A98  
                          i2l4390 2B34                            i2l4470 19C4  
                          i2l4462 1994                            i2l4454 1964  
                          i2l4446 1940                            i2l4438 1918  
                          i2l4526 1D08                            i2l4518 1CD6  
                          i2l4550 1B8E                            i2l3904 2B98  
                          i2l3912 2904                            i2l3840 1452  
                          i2l3832 1428                            i2l3824 13BA  
                          i2l3816 1374                            i2l3808 133E  
                          i2l3760 1E0E                            i2l4368 285E  
                          i2l4384 2AA2                            i2l4392 2B3E  
                          i2l4480 19E8                            i2l4472 19D8  
                          i2l4464 19A8                            i2l4456 1978  
                          i2l4448 1948                            i2l4528 1D12  
                          i2l4560 1BC0                            i2l4552 1B92  
                          i2l4544 1B6A                            i2l3906 28CE  
                          i2l3842 1472                            i2l3834 142A  
                          i2l3826 13C8                            i2l3818 1380  
                          i2l3850 160C                            i2l3770 1E90  
                          i2l3762 1E20                            i2l3930 0F48  
                          i2l4386 2AAA                            i2l4394 2B24  
                          i2l4482 19EC                            i2l4474 19DC  
                          i2l4466 19AC                            i2l4458 197C  
                          i2l4570 1C0A                            i2l4562 1BCE  
                          i2l4546 1B78                            i2l4554 1B94  
                          i2l3908 28CE                            i2l3836 143C  
                          i2l3828 13DA                            i2l3860 167C  
                          i2l3852 162C                            i2l3764 1E32  
                          i2l3780 26F6                            i2l3940 0FB6  
                          i2l3932 0F68                            i2l3924 0F04  
                          i2l4388 2AB2                            i2l4396 2B2E  
                          i2l4484 19F0                            i2l4476 19E0  
                          i2l4468 19C0                            i2l4572 1C18  
                          i2l4564 1BDE                            i2l4556 1BA2  
                          i2l4548 1B86                            i2l4670 2454  
                          i2l3838 1442                            i2l3870 16F4  
                          i2l3862 1684                            i2l3854 1630  
                          i2l3846 15FA                            i2l3766 1E3C  
                          i2l3774 26D4                            i2l3950 0FF0  
                          i2l3942 0FC6                            i2l3934 0F84  
                          i2l3926 0F24                            i2l4398 2B14  
                          i2l4478 19E4                            i2l4574 1C28  
                          i2l4566 1BEC                            i2l4558 1BB0  
                          i2l3872 1706                            i2l3864 1698  
                          i2l3856 163E                            i2l3848 15FE  
                          i2l3768 1E5A                            i2l3776 26E0  
                          i2l3952 0FF6                            i2l3960 10E8  
                          i2l3944 0FD2                            i2l3936 0FA0  
                          i2l3928 0F38                            i2l4496 1C72  
                          i2l4576 1C36                            i2l4568 1BFC  
                          _INTCON 000FF2                            i2l4666 1A8C  
                          i2l3866 16A6                            i2l3874 170C  
                          i2l3858 165E                            i2l3778 26F2  
                          i2l3890 21F6                            i2l3882 21B8  
                          i2l3970 1150                            i2l3962 1102  
                          i2l3954 1078                            i2l3946 0FDA  
                          i2l3938 0FB0                            i2l4498 1C74  
                          i2l4578 1C44                            i2l4668 202E  
                          i2l3796 2A2E                            i2l3876 171C  
                          i2l3868 16D4                            i2l3892 220A  
                          i2l3884 21C8                            i2l3972 1160  
                          i2l3964 1120                            i2l3956 107E  
                          i2l3948 0FE6                            i2l3798 2A4A  
                          i2l3990 1A6E                            i2l3982 1A0E  
                          i2l3878 173C                            i2l3894 221E  
                          i2l3886 21DC                            i2l3966 113A  
                          i2l3958 1084                            i2l3992 1AA2  
                          i2l3984 1A2A                            i2l3976 19F6  
                          i2l3896 2222                            i2l3888 21EA  
                          i2l3968 114A                            i2l3986 1A5E  
                          i2l3978 1A0A                            i2l3898 2250  
                          i2l3988 1A66                            i2l3998 1AD8  
                       ??i2_fputc 0005                         ??i2_fputs 000E  
          ?i2_start_AD_conversion 0001                            _TMR0IE 007F95  
                          _TMR0IF 007F92                         ??i2_putch 0001  
                          _TMR2IE 007CE9                            _TMR2IF 007CF1  
                  i2___aodiv@sign 0012                            i2abs@a 0013  
                          i2_atoi 19F6                            i2_dtoa 0F04  
                          i2pad@i 0018                            i2pad@p 0015  
              _enable_time_config 00F5                            i2pad@w 001A  
                __end_of_f_timers 1D42                      vfprintf@cfmt 017A  
                __end_of_lcd_init 2340                    i2___aomod@sign 0012  
                       ??___aodiv 009A                     i2vfprintf@fmt 0054  
                       ??___aomod 009A                            ___wmul 2994  
                       ??___awdiv 008E                            _f_int0 2AD2  
                          _f_int1 2A98                            _f_int2 2AEC  
                          _f_int3 2B34                            _f_int4 2B24  
                          _f_int5 2B14                         ??___awmod 008E  
                          _buffer 0170                            _lcd_wr 2B6A  
                     ?i2_vfprintf 0052                            _linha1 0111  
                          _linha2 0100                            clear_0 22AC  
                          clear_1 22B8                            clear_2 22C4  
                ___awdiv@quotient 0090                            _minuto 007C  
                 ___awmod@divisor 008C                            isa$std 000001  
                 ___awmod@counter 008E                            pad@buf 009C  
                       ??_lcd_dat 008B                         ??_lcd_cmd 008B  
                          dtoa@fp 00A5                         ??_lcd_str 008E  
                          fputc@c 008A                            fputs@c 0097  
                          fputs@i 0098                 __end_ofi2___aodiv 1494  
                          fputs@s 0093                         ??_isdigit 008C  
               __end_ofi2___aomod 175E                _estado_sequencia01 00E9  
              _estado_sequencia02 014F                      __mediumconst 0000  
                       ??_isspace 008C                            tblptrh 000FF7  
                          tblptrl 000FF6                  __end_of_setup_io 29E2  
                          tblptru 000FF8                            putch@c 0001  
              i2___aomod@dividend 0001                  __end_of_vfprintf 2512  
                       ??_sprintf 00E1                 __end_ofi2_lcd_dat 2A76  
               __end_ofi2_lcd_cmd 2A98                 __end_ofi2_lcd_str 28CE  
                    ?_mux_display 0001                 __end_ofi2_isdigit 2B9A  
                      __accesstop 0080           __end_of__initialization 22CA  
                  _select_channel 2B52                 __end_ofi2_isspace 2906  
             _start_AD_conversion 2B8C                     ___rparam_used 000001  
               __end_ofi2_sprintf 25B2                     __end_ofi2_abs 27DA  
                   __end_ofi2_pad 2266                    __pcstackCOMRAM 0001  
                    __pidataBANK0 2B74                      __pidataBANK1 27DA  
                   __end_of_f_pwm 2994                     __end_of_fputc 1E0E  
                   __end_of_fputs 2648                     __end_of_setup 26D4  
                   __end_of_putch 2B96                      _active_line2 00E8  
            ?_start_AD_conversion 0001                         ?i2___wmul 0001  
                       ?i2_lcd_wr 0001                           ??i2_abs 0015  
                         ??i2_pad 0017                    i2vfpfcnvrt@fmt 0041  
                    i2lcd_dat@val 0002                      i2lcd_cmd@val 0002  
                         ??_f_pwm 0003                           ??_fputc 008E  
                         ??_fputs 0097                           ??_setup 008D  
                         ??_putch 008A            __end_of_select_channel 2B60  
                      __pbssBANK0 00E1                        __pbssBANK1 013F  
                     i2sprintf@ap 0064                           ?i2_atoi 0007  
                         ?i2_dtoa 001C                      i2lcd_str@str 0003  
                         ?___wmul 008A                  ??_interrupt_init 008A  
                         ?_f_int0 0001                           ?_f_int1 0001  
                         ?_f_int2 0001                           ?_f_int3 0001  
                         ?_f_int4 0001                           ?_f_int5 0001  
                         ?_lcd_wr 0001                           _CCP1CON 000FBD  
                         _ADC_maq 2408             ??_start_AD_conversion 008A  
                      ??i2___wmul 0005                           _AD_data 013F  
                         _AD_init 2B44                        ??i2_lcd_wr 0001  
                         _INTCON2 000FF1                           _INTCON3 000FF0  
        __end_of_f_interrupt_high 1C72                         ?_f_timers 0001  
                       ?_lcd_init 0001                   ?_select_channel 0001  
                         i2_fputc 1E0E                           i2_fputs 26D4  
                         i2atoi@n 000E                           i2pad@fp 0011  
                         i2atoi@s 0007                           i2_putch 2B96  
                         i2dtoa@d 001E                           i2dtoa@i 003D  
                         i2dtoa@n 0034                           i2dtoa@p 0030  
                         i2dtoa@s 003C                           i2dtoa@w 0032  
                         __Hparam 0000                           __Lparam 0000  
                       ?_setup_io 0001                           ___aodiv 1182  
                         ___aomod 1494                           ___awdiv 1ED8  
                         ___awmod 2056                         ?_vfprintf 00DB  
                  i2vfprintf@cfmt 0058                      __psmallconst 0600  
                    ?i2_vfpfcnvrt 003F                           __pcinit 2266  
                         __ramtop 0600                           __ptext0 2B04  
                         __ptext1 2690                           __ptext2 2B8C  
                         __ptext3 29BC                           __ptext4 22D8  
                         __ptext5 2AB8                           __ptext6 2B60  
                         __ptext7 2B7C                           __ptext8 2B44  
                         __ptext9 2906                           _lcd_dat 29E2  
                         _lcd_cmd 2A08                           _lcd_str 281A  
                         _isdigit 293A                  ___awmod@dividend 008A  
               __end_of_read_keyb 19F6                           _isspace 2648  
                         _segundo 007B          _calcula_minuto_e_segundo 2512  
                      ??_f_timers 0078                           atoi@neg 0095  
         ??i2_start_AD_conversion 0001                           _sprintf 246C  
                      ??_lcd_init 008C                    __pintcode_body 1B40  
            end_of_initialization 22CA                show_line2@old_latd 00E6  
                         fputc@fp 008C                     __Lmediumconst 0000  
                         int_func 1B40                           fputs@fp 0095  
             i2___wmul@multiplier 0001                   _memoria_segundo 00F4  
               __end_of_vfpfcnvrt 0958                           postdec1 000FE5  
                         postdec2 000FDD                        ??_setup_io 008A  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                  vfpfcnvrt@convarg 00D1  
                    ??i2_vfprintf 0058                        ??_vfprintf 00E1  
                   ?_show_display 0001                         _PORTEbits 000F84  
                      _show_line1 2858                        _show_line2 275A  
               i2___aodiv@divisor 0009                 i2___aodiv@counter 0011  
                      lcd_dat@val 008B                        lcd_cmd@val 008B  
                       i2___aodiv 130C                         i2___aomod 15FA  
              __end_ofi2_vfprintf 2600                         i2_lcd_dat 2A54  
                       i2_lcd_cmd 2A76                         i2_lcd_str 2894  
                      lcd_str@str 008C                         i2_isdigit 2B98  
                  __end_ofi2_atoi 1B40                    __end_ofi2_dtoa 1182  
                       i2_isspace 28CE                         i2atoi@neg 000C  
                       i2_sprintf 2564                    ??_show_display 0092  
                     vfpfcnvrt@ap 00CC                       vfpfcnvrt@cp 00D9  
                     vfpfcnvrt@fp 00C8                    __end_of___wmul 29BC  
                  __end_of_f_int0 2AEC                    __end_of_f_int1 2AB8  
                  __end_of_f_int2 2B04                    __end_of_f_int3 2B44  
                  __end_of_f_int4 2B34                    __end_of_f_int5 2B24  
                  __end_of_lcd_wr 2B74                         i2fputc@fp 0003  
                       i2fputs@fp 000C                 _enable_interrupts 2B60  
           select_channel@channel 0001                  i2___wmul@product 0005  
              ?_enable_interrupts 0001               start_initialization 2266  
                     __end_of_abs 275A                       __end_of_pad 21B8  
                      ?i2___aodiv 0001                        ?i2___aomod 0001  
             ??_enable_interrupts 008A                        ?i2_lcd_dat 0001  
                      ?i2_lcd_cmd 0001                        ?i2_lcd_str 0003  
                        ??i2_atoi 0009                          ??i2_dtoa 0026  
                      ?i2_isdigit 0001                        ?i2_isspace 0001  
                     vfprintf@fmt 00DD                      i2vfprintf@ap 0056  
                    i2vfprintf@fp 0052                          ??___wmul 008E  
                _clock_regressive 23A4                          ??_f_int0 0005  
                        ??_f_int1 0071                          ??_f_int2 0005  
                        ??_f_int3 0071                          ??_f_int4 0071  
                        ??_f_int5 0071                        ?i2_sprintf 005A  
                        ??_lcd_wr 008A                       __pdataBANK0 00EE  
                     __pdataBANK1 0100         __end_of_enable_interrupts 2B6A  
                        ?_ADC_maq 0001                 i2___aomod@divisor 0009  
                     ?_show_line1 0001                       ?_show_line2 0001  
               i2___aomod@counter 0011                          ?_AD_init 0001  
                    i2sprintf@fmt 005C                       __pbssCOMRAM 0078  
                ??_select_channel 0001                     __pcstackBANK0 0080  
                   __pcstackBANK1 017A                  ___aodiv@dividend 008A  
               ?_f_interrupt_high 0001                ??_f_interrupt_high 0080  
                        ?i2_fputc 0001                          ?i2_fputs 000A  
                        ?i2_putch 0001                         __pintcode 0008  
     __end_of_start_AD_conversion 2B90                    _mostra_segundo 0078  
                        ?___aodiv 008A               read_keyb@m_dado_RB0 00F3  
             read_keyb@m_dado_RB1 00F2               read_keyb@m_dado_RB2 00F1  
             read_keyb@m_dado_RB3 00F0               read_keyb@m_dado_RB4 00EF  
             read_keyb@m_dado_RB5 00EE                          ?___aomod 008A  
                        ?___awdiv 008A                  ___aodiv@quotient 009C  
                        ?___awmod 008A        ??_calcula_minuto_e_segundo 0001  
                        ?_lcd_dat 0001                          ?_lcd_cmd 0001  
                        ?_lcd_str 008C                       __smallconst 0600  
                        ?_isdigit 008A                          ?_isspace 008A  
                     ??i2___aodiv 0011                       ??i2___aomod 0011  
                        ?_sprintf 017C                         _read_keyb 18AC  
   __end_ofi2_start_AD_conversion 2B94              __end_of_show_display 23A4  
                     ??i2_lcd_dat 0002                       ??i2_lcd_cmd 0002  
                  ___wmul@product 008E                       ??i2_lcd_str 0005  
                  _dezena_segundo 014A                       ??i2_isdigit 0003  
                  _memoria_minuto 00E7                          i2u310_40 1E32  
                        i2u310_41 1E2E                       ??i2_isspace 0003  
                        i2u311_40 1E5A                          i2u311_41 1E56  
                        i2u312_40 1E90                          i2u320_41 137A  
                        i2u312_41 1E8C                          i2u321_40 139E  
                        i2u313_40 2716                          i2u321_41 139A  
                        i2u313_41 2712                          i2u322_40 13C8  
                        i2u330_40 171C                          i2u410_40 18D8  
                        i2u322_41 13C4                          i2u330_41 1718  
                        i2u410_41 18D4                         f_pwm@duty 0001  
                        i2u323_40 1408                          i2u331_40 21C8  
                        i2u411_40 18F2                          i2u323_41 1404  
                        i2u331_41 21C4                          i2u411_41 18EE  
                        i2u324_40 1452                          i2u332_40 21EA  
                        i2u340_40 0F36                          i2u420_40 19D8  
                        i2u412_40 190C                          i2u324_41 144E  
                        i2u332_41 21E6                          i2u420_41 19D4  
                        i2u412_41 1908                          i2u325_40 160C  
                        i2u309_40 1E20                          i2u333_40 2240  
                        i2u341_40 0F48                          i2u413_40 1926  
                        i2u421_40 1C90                          i2u325_41 1608  
                        i2u309_41 1E1C                          i2u333_41 223C  
                        i2u341_41 0F44                          i2u413_41 1922  
                        i2u421_41 1C8C                          i2u254_40 28CC  
                        i2u350_40 1A5A                          i2u318_40 131E  
                        i2u326_40 163E                          i2u334_40 2250  
                        i2u342_40 0F84                          i2u414_40 1940  
                        i2u422_40 1CBC                          i2u430_40 1BA2  
                        i2u254_41 28C8                          i2u350_41 1A56  
                        i2u318_41 131A                          i2u326_41 163A  
                        i2u334_41 224C                          i2u342_41 0F80  
                        i2u414_41 193C                          i2u422_41 1CB8  
                        i2u430_41 1B9E                          i2u351_40 1B08  
                        i2u319_40 1350                          i2u327_40 167C  
                        i2u335_40 27B4                          i2u343_40 0FB0  
                        i2u415_40 1960                          i2u423_40 1CEC  
                        i2u431_40 1BB0                          i2u351_41 1B04  
                        i2u319_41 134C                          i2u327_41 1678  
                        i2u335_41 27B0                          i2u343_41 0FAC  
                        i2u415_41 195C                          i2u423_41 1CE8  
                        i2u431_41 1BAC                          i2u336_40 28E2  
                        i2u352_40 1B1A                          i2u328_40 16A6  
                        i2u344_40 0FC6                          i2u416_40 1978  
                        i2u424_40 1D04                          i2u440_40 1C36  
                        i2u432_40 1BC0                          i2u336_41 28DE  
                        i2u352_41 1B16                          i2u328_41 16A2  
                        i2u344_41 0FC2                          i2u416_41 1974  
                        i2u424_41 1D00                          i2u440_41 1C32  
                        i2u432_41 1BBC                          i2u337_40 2904  
                        i2u329_40 16D4                          i2u345_40 1102  
                        i2u417_40 1990                          i2u409_40 18BE  
                        i2u425_40 1D28                          i2u441_40 1C44  
                        i2u433_40 1BCE                          i2u337_41 2900  
                        i2u329_41 16D0                          i2u345_41 10FE  
                        i2u417_41 198C                          i2u409_41 18BA  
                        i2u425_41 1D24                          i2u441_41 1C40  
                        i2u433_41 1BCA                          i2u281_45 251E  
                        i2u346_40 1120                          i2u418_40 19A8  
                        i2u434_40 1BDE                          i2u346_41 111C  
                        i2u418_41 19A4                          i2u434_41 1BDA  
                        i2u282_45 253E                          i2u450_47 2A6C  
                        i2u283_40 255E                          i2u347_40 113A  
                        i2u339_40 0F34                          i2u419_40 19C0  
                        i2u435_40 1BEC                          i2u283_41 255A  
                        i2u347_41 1136                          i2u339_41 0F2E  
                        i2u419_41 19BC                          i2u435_41 1BE8  
                        i2u451_47 2A84                          i2u284_40 23B4  
                        i2u348_40 114A                          i2u380_40 0AD8  
                        i2u436_40 1BFC                          i2u428_40 1B78  
                        i2u284_41 23B0                          i2u348_41 1146  
                        i2u380_41 0AD4                          i2u436_41 1BF8  
                        i2u428_41 1B74                          i2u452_47 2A8E  
                        i2u285_40 23C4                          i2u349_40 1A2A  
                        i2u381_40 0B78                          i2u437_40 1C0A  
                        i2u429_40 1B86                          i2u285_41 23C0  
                        i2u349_41 1A26                          i2u381_41 0B74  
                        i2u437_41 1C06                          i2u429_41 1B82  
                        i2u286_40 23E0                          i2u382_40 0BA4  
                        i2u438_40 1C18                          i2u286_41 23DC  
                        i2u382_41 0BA0                          i2u438_41 1C14  
                        i2u287_40 23F0                          i2u383_40 0BC0  
                        i2u375_40 097C                          i2u439_40 1C28  
                        i2u287_41 23EC                          i2u383_41 0BBC  
                        i2u375_41 0978                          i2u439_41 1C24  
                        i2u376_40 09C0                          i2u376_41 09BC  
                        i2u377_40 0A04                          i2u377_41 0A00  
                        i2u449_47 2A62                          i2u378_40 0A78  
                        i2u378_41 0A74                          i2u379_40 0A9C  
                        i2u379_41 0A98                          i2u398_40 25F6  
                        i2u398_41 25F2                       ??i2_sprintf 0064  
                       _vfpfcnvrt 062A                 ___wmul@multiplier 008A  
                        i2___wmul 2A2E                          i2_lcd_wr 2B84  
                       lcd_wr@val 008A                      _isspace$1002 008E  
                        i2pad@buf 0013                    _aciona_read_AD 014D  
                        i2dtoa@fp 001C                        ?_read_keyb 0001  
                       copy_data0 227A                         copy_data1 229A  
                        i2fputc@c 0001                          i2fputs@c 000E  
                        i2fputs@i 000F                          i2fputs@s 000A  
                   ??_mux_display 0001                          __Hrparam 0000  
                      vfprintf@ap 00DF                          __Lrparam 0000  
                      vfprintf@fp 00DB             i2___wmul@multiplicand 0003  
                      ?_vfpfcnvrt 00C8        __end_of_disable_interrupts 2B84  
                 ___aodiv@divisor 0092                   ___aodiv@counter 009A  
              i2vfpfcnvrt@convarg 0048                        sprintf@fmt 017E  
                        _dtoa$953 00B7                     _mostra_minuto 0079  
                        _f_timers 1C72                          __ptext10 275A  
                        __ptext11 246C                          __ptext20 1494  
                        __ptext12 24C0                          __ptext21 1182  
                        __ptext13 062A                          __ptext30 2340  
                        __ptext22 175E                          __ptext14 0C82  
                        __ptext31 2056                          __ptext23 2648  
                        __ptext15 2108                          __ptext40 2A98  
                        __ptext32 1ED8                          __ptext24 293A  
                        __ptext16 2600                          __ptext41 2858  
                        __ptext25 2994                          __ptext17 1D42  
                        __ptext50 279A                          __ptext42 2564  
                        __ptext34 1C72                          __ptext26 281A  
                        __ptext18 2B94                          __ptext51 15FA  
                        __ptext43 25B2                          __ptext35 18AC  
                        __ptext27 29E2                          __ptext19 2718  
                        __ptext60 2B84                          __ptext52 130C  
                        __ptext44 0958                          __ptext36 2B14  
                        __ptext28 2A08                          __ptext61 2AD2  
                        __ptext53 19F6                          __ptext45 0F04  
                        __ptext37 2B24                          __ptext29 2B6A  
                        __ptext62 1F9E                          __ptext54 28CE  
                        __ptext46 21B8                          __ptext38 2B34  
                        __ptext63 23A4                          __ptext55 2B98  
                        __ptext47 26D4                          __ptext39 2AEC  
                        __ptext64 2968                          __ptext56 2A2E  
                        __ptext48 1E0E                          __ptext65 2512  
                        __ptext57 2894                          __ptext49 2B96  
                        __ptext66 2408                          __ptext58 2A54  
                        __ptext67 2B90                          __ptext59 2A76  
                        __ptext68 2B52                          _conv7seg 0122  
        __end_of_clock_regressive 2408                          _lcd_init 22D8  
                        _display1 00ED                          _display2 00EC  
                        _display3 00EB                          _display4 00EA  
               mux_display@estado 007D                     _dezena_minuto 014C  
             __end_of_mux_display 2056                          isa$xinst 000000  
                   _temporizador1 0147                     _temporizador2 0145  
                        _setup_io 29BC                          int$flags 007F  
                        _vfprintf 24C0  __end_of_calcula_minuto_e_segundo 2564  
                        lcd_str@i 008E                      ??_show_line1 0071  
                    ??_show_line2 00E1                  ___aomod@dividend 008A  
                 _unidade_segundo 0149                          isdigit@c 008A  
                     ??_read_keyb 0071                          intlevel2 0000  
                       sprintf@ap 0184                          isspace@c 008A  
              __end_of_show_line1 2894                __end_of_show_line2 279A  
                    _temporizacao 013D                    _unidade_minuto 014B  
                 ___aomod@divisor 0092                     ??i2_vfpfcnvrt 0045  
                     ??_vfpfcnvrt 00CE                     read_keyb@dado 0077  
                 ___aomod@counter 009A                      _show_display 2340  
                        sprintf@f 0186                          sprintf@s 017C  
                  _interrupt_init 2AB8                      ___aodiv@sign 009B  
                     _mux_display 1F9E                i2___aodiv@dividend 0001  
                    ___aomod@sign 009B  
