

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Oct 04 20:22:34 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4520 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  000208                     __pidataCOMRAM:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _led2
    66  000208  02                 	db	2
    67                           
    68                           ;initializer for _led1
    69  000209  02                 	db	2
    70  0000                     _INTCON3	set	4080
    71  0000                     _INTCON2	set	4081
    72  0000                     _INTCON	set	4082
    73  0000                     _LATB	set	3978
    74  0000                     _LATD	set	3980
    75  0000                     _TRISD	set	3989
    76  0000                     _TRISB	set	3987
    77  0000                     _ADCON1	set	4033
    78  0000                     _PEIE	set	32662
    79  0000                     _GIE	set	32663
    80  0000                     _IPEN	set	32391
    81  0000                     _INT2IE	set	32644
    82  0000                     _INT2IF	set	32641
    83  0000                     _INT1IE	set	32643
    84  0000                     _INT1IF	set	32640
    85  0000                     _INT0IE	set	32660
    86  0000                     _INT0IF	set	32657
    87                           
    88                           ; #config settings
    89  0000                     
    90                           	psect	cinit
    91  000170                     __pcinit:
    92                           	opt stack 0
    93  000170                     start_initialization:
    94                           	opt stack 0
    95  000170                     __initialization:
    96                           	opt stack 0
    97                           
    98                           ; Initialize objects allocated to COMRAM (2 bytes)
    99                           ; load TBLPTR registers with __pidataCOMRAM
   100  000170  0E08               	movlw	low __pidataCOMRAM
   101  000172  6EF6               	movwf	tblptrl,c
   102  000174  0E02               	movlw	high __pidataCOMRAM
   103  000176  6EF7               	movwf	tblptrh,c
   104  000178  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   105  00017A  6EF8               	movwf	tblptru,c
   106  00017C  0009               	tblrd		*+	;fetch initializer
   107  00017E  CFF5 F01B          	movff	tablat,__pdataCOMRAM
   108  000182  0009               	tblrd		*+	;fetch initializer
   109  000184  CFF5 F01C          	movff	tablat,__pdataCOMRAM+1
   110                           
   111                           ; Clear objects allocated to COMRAM (6 bytes)
   112  000188  6A1A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   113  00018A  6A19               	clrf	(__pbssCOMRAM+4)& (0+255),c
   114  00018C  6A18               	clrf	(__pbssCOMRAM+3)& (0+255),c
   115  00018E  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   116  000190  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   117  000192  6A15               	clrf	__pbssCOMRAM& (0+255),c
   118  000194                     end_of_initialization:
   119                           	opt stack 0
   120  000194                     __end_of__initialization:
   121                           	opt stack 0
   122  000194  901D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   123  000196  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   124  000198  0E00               	movlw	low (__Lmediumconst shr (0+16))
   125  00019A  6EF8               	movwf	tblptru,c
   126  00019C  0100               	movlb	0
   127  00019E  EFF9  F000         	goto	_main	;jump to C main() function
   128                           tblptru	equ	0xFF8
   129                           tblptrh	equ	0xFF7
   130                           tblptrl	equ	0xFF6
   131                           tablat	equ	0xFF5
   132                           
   133                           	psect	bssCOMRAM
   134  000015                     __pbssCOMRAM:
   135                           	opt stack 0
   136  000015                     _f_on_off:
   137                           	opt stack 0
   138  000015                     	ds	1
   139  000016                     _f_direcao:
   140                           	opt stack 0
   141  000016                     	ds	1
   142  000017                     _saida:
   143                           	opt stack 0
   144  000017                     	ds	1
   145  000018                     _sel:
   146                           	opt stack 0
   147  000018                     	ds	1
   148  000019                     _estado:
   149                           	opt stack 0
   150  000019                     	ds	1
   151  00001A                     _contador:
   152                           	opt stack 0
   153  00001A                     	ds	1
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           
   159                           	psect	dataCOMRAM
   160  00001B                     __pdataCOMRAM:
   161                           	opt stack 0
   162  00001B                     _led2:
   163                           	opt stack 0
   164  00001B                     	ds	1
   165  00001C                     _led1:
   166                           	opt stack 0
   167  00001C                     	ds	1
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	opt stack 0
   176  000001                     ??_f_interrupt_high:
   177  000001                     
   178                           ; 2 bytes @ 0x0
   179  000001                     	ds	18
   180  000013                     desloca_pra_direita@dado:
   181                           	opt stack 0
   182  000013                     desloca_pra_esquerda@dado:
   183                           	opt stack 0
   184  000013                     atraso_ms@tempo:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x12
   188  000013                     	ds	1
   189  000014                     
   190                           ; 1 bytes @ 0x13
   191  000014                     	ds	1
   192  000015                     tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           
   197                           ; 1 bytes @ 0x14
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 59 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;		None
   208 ;; Return value:  Size  Location     Type
   209 ;;                  2   80[None  ] int 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   217 ;;      Params:         0       0       0       0       0       0       0
   218 ;;      Locals:         0       0       0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0
   220 ;;      Totals:         0       0       0       0       0       0       0
   221 ;;Total ram usage:        0 bytes
   222 ;; Hardware stack levels required when called:    5
   223 ;; This function calls:
   224 ;;		_loop
   225 ;;		_setup
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  0001F2                     __ptext0:
   233                           	opt stack 0
   234  0001F2                     _main:
   235                           	opt stack 26
   236                           
   237                           ;main.c: 60: setup();
   238                           
   239                           ;incstack = 0
   240  0001F2  EC9A  F000         	call	_setup	;wreg free
   241  0001F6  ECD1  F000         	call	_loop	;wreg free
   242  0001FA  D7FD               	goto	l81
   243  0001FC                     __end_of_main:
   244                           	opt stack 0
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           
   250 ;; *************** function _setup *****************
   251 ;; Defined at:
   252 ;;		line 75 in file "main.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   266 ;;      Params:         0       0       0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0
   269 ;;      Totals:         0       0       0       0       0       0       0
   270 ;;Total ram usage:        0 bytes
   271 ;; Hardware stack levels used:    1
   272 ;; Hardware stack levels required when called:    2
   273 ;; This function calls:
   274 ;;		Nothing
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text1
   281  000134                     __ptext1:
   282                           	opt stack 0
   283  000134                     _setup:
   284                           	opt stack 28
   285                           
   286                           ;main.c: 77: IPEN = 0;
   287                           
   288                           ;incstack = 0
   289  000134  9ED0               	bcf	4048,7,c	;volatile
   290                           
   291                           ;main.c: 78: GIE = 0;
   292  000136  9EF2               	bcf	intcon,7,c	;volatile
   293                           
   294                           ;main.c: 79: PEIE = 0;
   295  000138  9CF2               	bcf	intcon,6,c	;volatile
   296                           
   297                           ;main.c: 81: ADCON1 = 0b00001111;
   298  00013A  0E0F               	movlw	15
   299  00013C  6EC1               	movwf	4033,c	;volatile
   300                           
   301                           ;main.c: 82: TRISB = 0b11111111;
   302  00013E  6893               	setf	3987,c	;volatile
   303                           
   304                           ;main.c: 83: TRISD = 0b00000000;
   305  000140  0E00               	movlw	0
   306  000142  6E95               	movwf	3989,c	;volatile
   307                           
   308                           ;main.c: 84: LATD = 0b00000000;
   309  000144  0E00               	movlw	0
   310  000146  6E8C               	movwf	3980,c	;volatile
   311                           
   312                           ;main.c: 85: LATB = 0b00000000;
   313  000148  0E00               	movlw	0
   314  00014A  6E8A               	movwf	3978,c	;volatile
   315                           
   316                           ;main.c: 86: INTCON = 0b00010000;
   317  00014C  0E10               	movlw	16
   318  00014E  6EF2               	movwf	intcon,c	;volatile
   319                           
   320                           ;main.c: 87: INTCON2 = 0b00000101;
   321  000150  0E05               	movlw	5
   322  000152  6EF1               	movwf	intcon2,c	;volatile
   323                           
   324                           ;main.c: 88: INTCON3 = 0b11011000;
   325  000154  0ED8               	movlw	216
   326  000156  6EF0               	movwf	intcon3,c	;volatile
   327                           
   328                           ;main.c: 90: f_direcao = 0;
   329  000158  0E00               	movlw	0
   330  00015A  6E16               	movwf	_f_direcao,c
   331                           
   332                           ;main.c: 91: f_on_off = 0;
   333  00015C  0E00               	movlw	0
   334  00015E  6E15               	movwf	_f_on_off,c
   335                           
   336                           ;main.c: 92: led1 = 0b10000000;
   337  000160  0E80               	movlw	128
   338  000162  6E1C               	movwf	_led1,c
   339                           
   340                           ;main.c: 93: led2 = 0b00000001;
   341  000164  0E01               	movlw	1
   342  000166  6E1B               	movwf	_led2,c
   343                           
   344                           ;main.c: 95: sel = 0;
   345  000168  0E00               	movlw	0
   346  00016A  6E18               	movwf	_sel,c
   347                           
   348                           ;main.c: 97: GIE = 1;
   349  00016C  8EF2               	bsf	intcon,7,c	;volatile
   350  00016E  0012               	return		;funcret
   351  000170                     __end_of_setup:
   352                           	opt stack 0
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           intcon	equ	0xFF2
   358                           intcon2	equ	0xFF1
   359                           intcon3	equ	0xFF0
   360                           
   361 ;; *************** function _loop *****************
   362 ;; Defined at:
   363 ;;		line 100 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   377 ;;      Params:         0       0       0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; Hardware stack levels required when called:    4
   384 ;; This function calls:
   385 ;;		_atraso_ms
   386 ;;		_f_controle
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text2
   393  0001A2                     __ptext2:
   394                           	opt stack 0
   395  0001A2                     _loop:
   396                           	opt stack 26
   397                           
   398                           ;main.c: 103: if (estado == 30)
   399                           
   400                           ;incstack = 0
   401  0001A2  0E1E               	movlw	30
   402  0001A4  1819               	xorwf	_estado,w,c
   403  0001A6  A4D8               	btfss	status,2,c
   404  0001A8  D005               	goto	l96
   405                           
   406                           ;main.c: 104: {
   407                           ;main.c: 105: estado = 0;
   408  0001AA  0E00               	movlw	0
   409  0001AC  6E19               	movwf	_estado,c
   410                           
   411                           ;main.c: 106: f_controle();
   412  0001AE  EC66  F000         	call	_f_controle	;wreg free
   413                           
   414                           ;main.c: 107: }
   415  0001B2  D001               	goto	l97
   416  0001B4                     l96:
   417                           
   418                           ;main.c: 108: else
   419                           ;main.c: 109: {
   420                           ;main.c: 110: estado++;
   421  0001B4  2A19               	incf	_estado,f,c
   422  0001B6                     l97:
   423                           
   424                           ;main.c: 111: }
   425                           ;main.c: 113: LATD = saida;
   426  0001B6  C017  FF8C         	movff	_saida,3980	;volatile
   427                           
   428                           ;main.c: 115: atraso_ms(10);
   429  0001BA  0E00               	movlw	0
   430  0001BC  6E14               	movwf	atraso_ms@tempo+1,c
   431  0001BE  0E0A               	movlw	10
   432  0001C0  6E13               	movwf	atraso_ms@tempo,c
   433  0001C2  ECE4  F000         	call	_atraso_ms	;wreg free
   434  0001C6  0012               	return		;funcret
   435  0001C8                     __end_of_loop:
   436                           	opt stack 0
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           intcon	equ	0xFF2
   442                           intcon2	equ	0xFF1
   443                           intcon3	equ	0xFF0
   444                           status	equ	0xFD8
   445                           
   446 ;; *************** function _f_controle *****************
   447 ;; Defined at:
   448 ;;		line 137 in file "main.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   462 ;;      Params:         0       0       0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    3
   469 ;; This function calls:
   470 ;;		_desloca_pra_direita
   471 ;;		_desloca_pra_esquerda
   472 ;; This function is called by:
   473 ;;		_loop
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text3
   478  0000CC                     __ptext3:
   479                           	opt stack 0
   480  0000CC                     _f_controle:
   481                           	opt stack 26
   482                           
   483                           ;main.c: 139: switch (sel)
   484                           
   485                           ;incstack = 0
   486  0000CC  D025               	goto	l112
   487  0000CE                     
   488                           ;main.c: 142: saida = 0x00;
   489  0000CE  0E00               	movlw	0
   490  0000D0  6E17               	movwf	_saida,c
   491                           
   492                           ;main.c: 143: break;
   493  0000D2  0012               	return	
   494  0000D4                     
   495                           ;main.c: 146: led1 = desloca_pra_direita(led1);
   496  0000D4  501C               	movf	_led1,w,c
   497  0000D6  EC01  F001         	call	_desloca_pra_direita
   498  0000DA  6E1C               	movwf	_led1,c
   499                           
   500                           ;main.c: 147: led2 = desloca_pra_esquerda(led2);
   501  0000DC  501B               	movf	_led2,w,c
   502  0000DE  ECFE  F000         	call	_desloca_pra_esquerda
   503  0000E2  6E1B               	movwf	_led2,c
   504                           
   505                           ;main.c: 148: saida = led2;
   506  0000E4  C01B  F017         	movff	_led2,_saida
   507                           
   508                           ;main.c: 149: break;
   509  0000E8  0012               	return	
   510  0000EA                     
   511                           ;main.c: 152: led1 = desloca_pra_direita(led1);
   512  0000EA  501C               	movf	_led1,w,c
   513  0000EC  EC01  F001         	call	_desloca_pra_direita
   514  0000F0  6E1C               	movwf	_led1,c
   515                           
   516                           ;main.c: 153: led2 = desloca_pra_esquerda(led2);
   517  0000F2  501B               	movf	_led2,w,c
   518  0000F4  ECFE  F000         	call	_desloca_pra_esquerda
   519  0000F8  6E1B               	movwf	_led2,c
   520                           
   521                           ;main.c: 154: saida = led1;
   522  0000FA  C01C  F017         	movff	_led1,_saida
   523                           
   524                           ;main.c: 155: break;
   525  0000FE  0012               	return	
   526  000100                     
   527                           ;main.c: 158: led1 = desloca_pra_direita(led1);
   528  000100  501C               	movf	_led1,w,c
   529  000102  EC01  F001         	call	_desloca_pra_direita
   530  000106  6E1C               	movwf	_led1,c
   531                           
   532                           ;main.c: 159: led2 = desloca_pra_esquerda(led2);
   533  000108  501B               	movf	_led2,w,c
   534  00010A  ECFE  F000         	call	_desloca_pra_esquerda
   535  00010E  6E1B               	movwf	_led2,c
   536                           
   537                           ;main.c: 160: saida = led1 | led2;
   538  000110  501C               	movf	_led1,w,c
   539  000112  101B               	iorwf	_led2,w,c
   540  000114  6E17               	movwf	_saida,c
   541                           
   542                           ;main.c: 162: }
   543                           
   544                           ;main.c: 161: break;
   545  000116  0012               	return	
   546  000118                     l112:
   547  000118  5018               	movf	_sel,w,c
   548                           
   549                           ; Switch size 1, requested type "space"
   550                           ; Number of cases is 4, Range of values is 0 to 3
   551                           ; switch strategies available:
   552                           ; Name         Instructions Cycles
   553                           ; simple_byte           13     7 (average)
   554                           ;	Chosen strategy is simple_byte
   555  00011A  0A00               	xorlw	0	; case 0
   556  00011C  B4D8               	btfsc	status,2,c
   557  00011E  D7D7               	goto	l113
   558  000120  0A01               	xorlw	1	; case 1
   559  000122  B4D8               	btfsc	status,2,c
   560  000124  D7D7               	goto	l115
   561  000126  0A03               	xorlw	3	; case 2
   562  000128  B4D8               	btfsc	status,2,c
   563  00012A  D7DF               	goto	l116
   564  00012C  0A01               	xorlw	1	; case 3
   565  00012E  A4D8               	btfss	status,2,c
   566  000130  0012               	return	
   567  000132  D7E6               	goto	l117
   568  000134                     __end_of_f_controle:
   569                           	opt stack 0
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           intcon	equ	0xFF2
   575                           intcon2	equ	0xFF1
   576                           intcon3	equ	0xFF0
   577                           status	equ	0xFD8
   578                           
   579 ;; *************** function _desloca_pra_esquerda *****************
   580 ;; Defined at:
   581 ;;		line 176 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  dado            1    wreg     unsigned char 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  dado            1   18[COMRAM] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      unsigned char 
   588 ;; Registers used:
   589 ;;		wreg, status,2
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   595 ;;      Params:         0       0       0       0       0       0       0
   596 ;;      Locals:         1       0       0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0
   598 ;;      Totals:         1       0       0       0       0       0       0
   599 ;;Total ram usage:        1 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    2
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_f_controle
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text4
   610  0001FC                     __ptext4:
   611                           	opt stack 0
   612  0001FC                     _desloca_pra_esquerda:
   613                           	opt stack 26
   614                           
   615                           ;incstack = 0
   616                           ;desloca_pra_esquerda@dado stored from wreg
   617  0001FC  6E13               	movwf	desloca_pra_esquerda@dado,c
   618                           
   619                           ;main.c: 183: return dado;
   620  0001FE  5013               	movf	desloca_pra_esquerda@dado,w,c
   621  000200  0012               	return	
   622  000202                     __end_of_desloca_pra_esquerda:
   623                           	opt stack 0
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           intcon	equ	0xFF2
   629                           intcon2	equ	0xFF1
   630                           intcon3	equ	0xFF0
   631                           status	equ	0xFD8
   632                           
   633 ;; *************** function _desloca_pra_direita *****************
   634 ;; Defined at:
   635 ;;		line 166 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  dado            1    wreg     unsigned char 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  dado            1   18[COMRAM] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      unsigned char 
   642 ;; Registers used:
   643 ;;		wreg, status,2
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         0       0       0       0       0       0       0
   650 ;;      Locals:         1       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0
   652 ;;      Totals:         1       0       0       0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    2
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_f_controle
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text5
   664  000202                     __ptext5:
   665                           	opt stack 0
   666  000202                     _desloca_pra_direita:
   667                           	opt stack 26
   668                           
   669                           ;incstack = 0
   670                           ;desloca_pra_direita@dado stored from wreg
   671  000202  6E13               	movwf	desloca_pra_direita@dado,c
   672                           
   673                           ;main.c: 173: return dado;
   674  000204  5013               	movf	desloca_pra_direita@dado,w,c
   675  000206  0012               	return	
   676  000208                     __end_of_desloca_pra_direita:
   677                           	opt stack 0
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           intcon	equ	0xFF2
   683                           intcon2	equ	0xFF1
   684                           intcon3	equ	0xFF0
   685                           status	equ	0xFD8
   686                           
   687 ;; *************** function _atraso_ms *****************
   688 ;; Defined at:
   689 ;;		line 66 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  tempo           2   18[COMRAM] unsigned int 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   703 ;;      Params:         2       0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0
   706 ;;      Totals:         2       0       0       0       0       0       0
   707 ;;Total ram usage:        2 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    2
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_loop
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text6
   718  0001C8                     __ptext6:
   719                           	opt stack 0
   720  0001C8                     _atraso_ms:
   721                           	opt stack 27
   722                           
   723                           ;main.c: 68: while(tempo)
   724                           
   725                           ;incstack = 0
   726  0001C8  D007               	goto	l87
   727  0001CA                     
   728                           ;main.c: 69: {
   729                           ;main.c: 70: tempo--;
   730  0001CA  0613               	decf	atraso_ms@tempo,f,c
   731  0001CC  A0D8               	btfss	status,0,c
   732  0001CE  0614               	decf	atraso_ms@tempo+1,f,c
   733                           
   734                           ;main.c: 71: _delay((unsigned long)((1)*(4000000UL/4000.0)));
   735  0001D0  0EC8               	movlw	200
   736  0001D2                     u127:
   737  0001D2  D000               	nop2	
   738  0001D4  2EE8               	decfsz	wreg,f,c
   739  0001D6  D7FD               	bra	u127
   740  0001D8                     l87:
   741  0001D8  5013               	movf	atraso_ms@tempo,w,c
   742  0001DA  1014               	iorwf	atraso_ms@tempo+1,w,c
   743  0001DC  B4D8               	btfsc	status,2,c
   744  0001DE  0012               	return	
   745  0001E0  D7F4               	goto	l88
   746  0001E2                     __end_of_atraso_ms:
   747                           	opt stack 0
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           intcon	equ	0xFF2
   753                           intcon2	equ	0xFF1
   754                           intcon3	equ	0xFF0
   755                           wreg	equ	0xFE8
   756                           status	equ	0xFD8
   757                           
   758 ;; *************** function _f_interrupt_high *****************
   759 ;; Defined at:
   760 ;;		line 38 in file "main.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   774 ;;      Params:         0       0       0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0       0
   776 ;;      Temps:         18       0       0       0       0       0       0
   777 ;;      Totals:        18       0       0       0       0       0       0
   778 ;;Total ram usage:       18 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    1
   781 ;; This function calls:
   782 ;;		_f_int0
   783 ;;		_f_int1
   784 ;;		_f_int2
   785 ;; This function is called by:
   786 ;;		Interrupt level 2
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	intcode
   791  000008                     __pintcode:
   792                           	opt stack 0
   793  000008                     _f_interrupt_high:
   794                           	opt stack 26
   795                           
   796                           ;incstack = 0
   797  000008  821D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   798  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           intcon	equ	0xFF2
   804                           intcon2	equ	0xFF1
   805                           intcon3	equ	0xFF0
   806                           wreg	equ	0xFE8
   807                           status	equ	0xFD8
   808                           
   809                           	psect	intcode_body
   810  000012                     __pintcode_body:
   811                           	opt stack 26
   812  000012                     int_func:
   813                           	opt stack 26
   814  000012  0006               	pop		; remove dummy address from shadow register refresh
   815  000014  CFFA F001          	movff	pclath,??_f_interrupt_high
   816  000018  CFFB F002          	movff	pclatu,??_f_interrupt_high+1
   817  00001C  CFE9 F003          	movff	fsr0l,??_f_interrupt_high+2
   818  000020  CFEA F004          	movff	fsr0h,??_f_interrupt_high+3
   819  000024  CFE1 F005          	movff	fsr1l,??_f_interrupt_high+4
   820  000028  CFE2 F006          	movff	fsr1h,??_f_interrupt_high+5
   821  00002C  CFD9 F007          	movff	fsr2l,??_f_interrupt_high+6
   822  000030  CFDA F008          	movff	fsr2h,??_f_interrupt_high+7
   823  000034  CFF3 F009          	movff	prodl,??_f_interrupt_high+8
   824  000038  CFF4 F00A          	movff	prodh,??_f_interrupt_high+9
   825  00003C  CFF6 F00B          	movff	tblptrl,??_f_interrupt_high+10
   826  000040  CFF7 F00C          	movff	tblptrh,??_f_interrupt_high+11
   827  000044  CFF8 F00D          	movff	tblptru,??_f_interrupt_high+12
   828  000048  CFF5 F00E          	movff	tablat,??_f_interrupt_high+13
   829  00004C  C01D  F00F         	movff	btemp,??_f_interrupt_high+14
   830  000050  C01E  F010         	movff	btemp+1,??_f_interrupt_high+15
   831  000054  C01F  F011         	movff	btemp+2,??_f_interrupt_high+16
   832  000058  C020  F012         	movff	btemp+3,??_f_interrupt_high+17
   833                           
   834                           ;main.c: 40: if(INT0IF && INT0IE)
   835  00005C  B2F2               	btfsc	intcon,1,c	;volatile
   836  00005E  A8F2               	btfss	intcon,4,c	;volatile
   837  000060  D003               	goto	i2l73
   838                           
   839                           ;main.c: 41: {
   840                           ;main.c: 42: f_int0();
   841  000062  ECF1  F000         	call	_f_int0	;wreg free
   842                           
   843                           ;main.c: 43: INT0IF = 0;
   844  000066  92F2               	bcf	intcon,1,c	;volatile
   845  000068                     i2l73:
   846                           
   847                           ;main.c: 44: }
   848                           ;main.c: 46: if(INT1IF && INT1IE)
   849  000068  B0F0               	btfsc	intcon3,0,c	;volatile
   850  00006A  A6F0               	btfss	intcon3,3,c	;volatile
   851  00006C  D003               	goto	i2l74
   852                           
   853                           ;main.c: 47: {
   854                           ;main.c: 48: f_int1();
   855  00006E  EC06  F001         	call	_f_int1	;wreg free
   856                           
   857                           ;main.c: 49: INT1IF = 0;
   858  000072  90F0               	bcf	intcon3,0,c	;volatile
   859  000074                     i2l74:
   860                           
   861                           ;main.c: 50: }
   862                           ;main.c: 52: if(INT2IF && INT2IE)
   863  000074  B2F0               	btfsc	intcon3,1,c	;volatile
   864  000076  A8F0               	btfss	intcon3,4,c	;volatile
   865  000078  D003               	goto	i2l75
   866                           
   867                           ;main.c: 53: {
   868                           ;main.c: 54: f_int2();
   869  00007A  EC05  F001         	call	_f_int2	;wreg free
   870                           
   871                           ;main.c: 55: INT2IF = 0;
   872  00007E  92F0               	bcf	intcon3,1,c	;volatile
   873  000080                     i2l75:
   874  000080  C012  F020         	movff	??_f_interrupt_high+17,btemp+3
   875  000084  C011  F01F         	movff	??_f_interrupt_high+16,btemp+2
   876  000088  C010  F01E         	movff	??_f_interrupt_high+15,btemp+1
   877  00008C  C00F  F01D         	movff	??_f_interrupt_high+14,btemp
   878  000090  C00E  FFF5         	movff	??_f_interrupt_high+13,tablat
   879  000094  C00D  FFF8         	movff	??_f_interrupt_high+12,tblptru
   880  000098  C00C  FFF7         	movff	??_f_interrupt_high+11,tblptrh
   881  00009C  C00B  FFF6         	movff	??_f_interrupt_high+10,tblptrl
   882  0000A0  C00A  FFF4         	movff	??_f_interrupt_high+9,prodh
   883  0000A4  C009  FFF3         	movff	??_f_interrupt_high+8,prodl
   884  0000A8  C008  FFDA         	movff	??_f_interrupt_high+7,fsr2h
   885  0000AC  C007  FFD9         	movff	??_f_interrupt_high+6,fsr2l
   886  0000B0  C006  FFE2         	movff	??_f_interrupt_high+5,fsr1h
   887  0000B4  C005  FFE1         	movff	??_f_interrupt_high+4,fsr1l
   888  0000B8  C004  FFEA         	movff	??_f_interrupt_high+3,fsr0h
   889  0000BC  C003  FFE9         	movff	??_f_interrupt_high+2,fsr0l
   890  0000C0  C002  FFFB         	movff	??_f_interrupt_high+1,pclatu
   891  0000C4  C001  FFFA         	movff	??_f_interrupt_high,pclath
   892  0000C8  921D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   893  0000CA  0011               	retfie		f
   894  0000CC                     __end_of_f_interrupt_high:
   895                           	opt stack 0
   896                           pclatu	equ	0xFFB
   897                           pclath	equ	0xFFA
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           prodh	equ	0xFF4
   903                           prodl	equ	0xFF3
   904                           intcon	equ	0xFF2
   905                           intcon2	equ	0xFF1
   906                           intcon3	equ	0xFF0
   907                           fsr0h	equ	0xFEA
   908                           fsr0l	equ	0xFE9
   909                           wreg	equ	0xFE8
   910                           fsr1h	equ	0xFE2
   911                           fsr1l	equ	0xFE1
   912                           fsr2h	equ	0xFDA
   913                           fsr2l	equ	0xFD9
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function _f_int2 *****************
   917 ;; Defined at:
   918 ;;		line 132 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		None
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   932 ;;      Params:         0       0       0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_f_interrupt_high
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text8
   946  00020A                     __ptext8:
   947                           	opt stack 0
   948  00020A                     _f_int2:
   949                           	opt stack 26
   950                           
   951                           ;incstack = 0
   952  00020A  0012               	return		;funcret
   953  00020C                     __end_of_f_int2:
   954                           	opt stack 0
   955                           pclatu	equ	0xFFB
   956                           pclath	equ	0xFFA
   957                           tblptru	equ	0xFF8
   958                           tblptrh	equ	0xFF7
   959                           tblptrl	equ	0xFF6
   960                           tablat	equ	0xFF5
   961                           prodh	equ	0xFF4
   962                           prodl	equ	0xFF3
   963                           intcon	equ	0xFF2
   964                           intcon2	equ	0xFF1
   965                           intcon3	equ	0xFF0
   966                           fsr0h	equ	0xFEA
   967                           fsr0l	equ	0xFE9
   968                           wreg	equ	0xFE8
   969                           fsr1h	equ	0xFE2
   970                           fsr1l	equ	0xFE1
   971                           fsr2h	equ	0xFDA
   972                           fsr2l	equ	0xFD9
   973                           status	equ	0xFD8
   974                           
   975 ;; *************** function _f_int1 *****************
   976 ;; Defined at:
   977 ;;		line 127 in file "main.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		None
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   991 ;;      Params:         0       0       0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0
   994 ;;      Totals:         0       0       0       0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_f_interrupt_high
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text9
  1005  00020C                     __ptext9:
  1006                           	opt stack 0
  1007  00020C                     _f_int1:
  1008                           	opt stack 26
  1009                           
  1010                           ;incstack = 0
  1011  00020C  0012               	return		;funcret
  1012  00020E                     __end_of_f_int1:
  1013                           	opt stack 0
  1014                           pclatu	equ	0xFFB
  1015                           pclath	equ	0xFFA
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           prodh	equ	0xFF4
  1021                           prodl	equ	0xFF3
  1022                           intcon	equ	0xFF2
  1023                           intcon2	equ	0xFF1
  1024                           intcon3	equ	0xFF0
  1025                           fsr0h	equ	0xFEA
  1026                           fsr0l	equ	0xFE9
  1027                           wreg	equ	0xFE8
  1028                           fsr1h	equ	0xFE2
  1029                           fsr1l	equ	0xFE1
  1030                           fsr2h	equ	0xFDA
  1031                           fsr2l	equ	0xFD9
  1032                           status	equ	0xFD8
  1033                           
  1034 ;; *************** function _f_int0 *****************
  1035 ;; Defined at:
  1036 ;;		line 118 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1050 ;;      Params:         0       0       0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_f_interrupt_high
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text10
  1064  0001E2                     __ptext10:
  1065                           	opt stack 0
  1066  0001E2                     _f_int0:
  1067                           	opt stack 26
  1068                           
  1069                           ;main.c: 120: if(sel < 3)
  1070                           
  1071                           ;incstack = 0
  1072  0001E2  0E03               	movlw	3
  1073  0001E4  6018               	cpfslt	_sel,c
  1074  0001E6  D002               	goto	i2l101
  1075                           
  1076                           ;main.c: 121: sel++;
  1077  0001E8  2A18               	incf	_sel,f,c
  1078  0001EA  0012               	return	
  1079  0001EC                     i2l101:
  1080                           
  1081                           ;main.c: 123: else
  1082                           ;main.c: 124: sel = 0;
  1083  0001EC  0E00               	movlw	0
  1084  0001EE  6E18               	movwf	_sel,c
  1085  0001F0  0012               	return	
  1086  0001F2                     __end_of_f_int0:
  1087                           	opt stack 0
  1088  0000                     pclatu	equ	0xFFB
  1089                           pclath	equ	0xFFA
  1090                           tblptru	equ	0xFF8
  1091                           tblptrh	equ	0xFF7
  1092                           tblptrl	equ	0xFF6
  1093                           tablat	equ	0xFF5
  1094                           prodh	equ	0xFF4
  1095                           prodl	equ	0xFF3
  1096                           intcon	equ	0xFF2
  1097                           intcon2	equ	0xFF1
  1098                           intcon3	equ	0xFF0
  1099                           fsr0h	equ	0xFEA
  1100                           fsr0l	equ	0xFE9
  1101                           wreg	equ	0xFE8
  1102                           fsr1h	equ	0xFE2
  1103                           fsr1l	equ	0xFE1
  1104                           fsr2h	equ	0xFDA
  1105                           fsr2l	equ	0xFD9
  1106                           status	equ	0xFD8
  1107                           pclatu	equ	0xFFB
  1108                           pclath	equ	0xFFA
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           prodh	equ	0xFF4
  1114                           prodl	equ	0xFF3
  1115                           intcon	equ	0xFF2
  1116                           intcon2	equ	0xFF1
  1117                           intcon3	equ	0xFF0
  1118                           fsr0h	equ	0xFEA
  1119                           fsr0l	equ	0xFE9
  1120                           wreg	equ	0xFE8
  1121                           fsr1h	equ	0xFE2
  1122                           fsr1l	equ	0xFE1
  1123                           fsr2h	equ	0xFDA
  1124                           fsr2l	equ	0xFD9
  1125                           status	equ	0xFD8
  1126                           
  1127                           	psect	rparam
  1128  0000                     pclatu	equ	0xFFB
  1129                           pclath	equ	0xFFA
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           prodh	equ	0xFF4
  1135                           prodl	equ	0xFF3
  1136                           intcon	equ	0xFF2
  1137                           intcon2	equ	0xFF1
  1138                           intcon3	equ	0xFF0
  1139                           fsr0h	equ	0xFEA
  1140                           fsr0l	equ	0xFE9
  1141                           wreg	equ	0xFE8
  1142                           fsr1h	equ	0xFE2
  1143                           fsr1l	equ	0xFE1
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148                           	psect	temp
  1149  00001D                     btemp:
  1150                           	opt stack 0
  1151  00001D                     	ds	1
  1152  0000                     int$flags	set	btemp
  1153  0000                     wtemp6	set	btemp+1
  1154                           pclatu	equ	0xFFB
  1155                           pclath	equ	0xFFA
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           prodh	equ	0xFF4
  1161                           prodl	equ	0xFF3
  1162                           intcon	equ	0xFF2
  1163                           intcon2	equ	0xFF1
  1164                           intcon3	equ	0xFF0
  1165                           fsr0h	equ	0xFEA
  1166                           fsr0l	equ	0xFE9
  1167                           wreg	equ	0xFE8
  1168                           fsr1h	equ	0xFE2
  1169                           fsr1l	equ	0xFE1
  1170                           fsr2h	equ	0xFDA
  1171                           fsr2l	equ	0xFD9
  1172                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20      28
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_atraso_ms
    _f_controle->_desloca_pra_direita
    _f_controle->_desloca_pra_esquerda

Critical Paths under _f_interrupt_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _f_interrupt_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _f_interrupt_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _f_interrupt_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _f_interrupt_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _f_interrupt_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _f_interrupt_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     129
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0     129
                          _atraso_ms
                         _f_controle
 ---------------------------------------------------------------------------------
 (2) _f_controle                                           0     0      0      30
                _desloca_pra_direita
               _desloca_pra_esquerda
 ---------------------------------------------------------------------------------
 (3) _desloca_pra_esquerda                                 1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _desloca_pra_direita                                  1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            2     0      2      99
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _f_interrupt_high                                    18    18      0       0
                                              0 COMRAM    18    18      0
                             _f_int0
                             _f_int1
                             _f_int2
 ---------------------------------------------------------------------------------
 (5) _f_int2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _f_int1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _f_int0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _atraso_ms
     _f_controle
       _desloca_pra_direita
       _desloca_pra_esquerda
   _setup

 _f_interrupt_high (ROOT)
   _f_int0
   _f_int1
   _f_int2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     14      1C       1       22.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      15        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Oct 04 20:22:34 2022

                           l81 01F6                             l87 01D8                             l88 01CA  
                           l96 01B4                             l97 01B6                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000  
                 __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000                            l112 0118  
                          l113 00CE                            l115 00D4                            l116 00EA  
                          l117 0100        desloca_pra_direita@dado 0013                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                            u127 01D2                   __CFG_CPD$OFF 000000  
                          _sel 0018                            wreg 000FE8                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           _LATB 000F8A                           _LATD 000F8C  
                         _IPEN 007E87                           _PEIE 007F96                           i2l73 0068  
                         i2l74 0074                           i2l75 0080                           _led1 001C  
                         _led2 001B                           _main 01F2                           _loop 01A2  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr2h 000FDA  
                         fsr0l 000FE9                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 001D                           prodh 000FF4                           prodl 000FF3  
                         start 000E                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000                          ?_main 0001                          ?_loop 0001  
                        i2l101 01EC                          _TRISB 000F93                          _TRISD 000F95  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000                          _saida 0017  
                        _setup 0134                          pclath 000FFA                          tablat 000FF5  
                        status 000FD8                          wtemp6 001E                 __CFG_PBADEN$ON 000000  
             _f_interrupt_high 0008                __initialization 0170                   __end_of_main 01FC  
                 __end_of_loop 01C8                         ??_main 0015                         ??_loop 0015  
                __activetblptr 000002           _desloca_pra_esquerda 01FC                         _ADCON1 000FC1  
                       ?_setup 0001                         _INT0IE 007F94                         _INT0IF 007F91  
                       _INT1IE 007F83                         _INT1IF 007F80                         _INT2IE 007F84  
                       _INT2IF 007F81                         _INTCON 000FF2                 __CFG_XINST$OFF 000000  
                       _f_int0 01E2                         _f_int1 020C                         _f_int2 020A  
               __CFG_STVREN$ON 000000                         _estado 0019                   __pdataCOMRAM 001B  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
        ?_desloca_pra_esquerda 0001                     __accesstop 0080        __end_of__initialization 0194  
                ___rparam_used 000001                 __pcstackCOMRAM 0001                  __end_of_setup 0170  
                      ??_setup 0013             __size_of_atraso_ms 001A                     _f_controle 00CC  
                      ?_f_int0 0001                        ?_f_int1 0001                        ?_f_int2 0001  
 __size_of_desloca_pra_direita 0006                        _INTCON2 000FF1                        _INTCON3 000FF0  
       ??_desloca_pra_esquerda 0013       __end_of_f_interrupt_high 00CC                        __Hparam 0000  
                      __Lparam 0000                __size_of_f_int0 0010                __size_of_f_int1 0002  
              __size_of_f_int2 0002              __end_of_atraso_ms 01E2                        __pcinit 0170  
                      __ramtop 0600                        __ptext0 01F2                        __ptext1 0134  
                      __ptext2 01A2                        __ptext3 00CC                        __ptext4 01FC  
                      __ptext5 0202                        __ptext6 01C8                        __ptext8 020A  
                      __ptext9 020C                 __pintcode_body 0012           end_of_initialization 0194  
                  ?_f_controle 0001                  __Lmediumconst 0000                        int_func 0012  
               __end_of_f_int0 01F2                 __end_of_f_int1 020E                 __end_of_f_int2 020C  
                __pidataCOMRAM 0208            __size_of_f_controle 0068       desloca_pra_esquerda@dado 0013  
          start_initialization 0170            _desloca_pra_direita 0202                       ??_f_int0 0001  
                     ??_f_int1 0001                       ??_f_int2 0001           ?_desloca_pra_direita 0001  
             __CFG_LPT1OSC$OFF 000000                    __pbssCOMRAM 0015              ?_f_interrupt_high 0001  
           ??_f_interrupt_high 0001                      _f_direcao 0016              __CFG_CCP2MX$PORTC 000000  
                    __pintcode 0008          ??_desloca_pra_direita 0013                      _atraso_ms 01C8  
__size_of_desloca_pra_esquerda 0006                 __size_of_setup 003C                 atraso_ms@tempo 0013  
                 ??_f_controle 0014               __CFG_WDTPS$32768 000000                     ?_atraso_ms 0013  
           __end_of_f_controle 0134                       __Hrparam 0000                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000                       _f_on_off 0015                       __ptext10 01E2  
                     _contador 001A                  __size_of_main 000A                  __size_of_loop 0026  
                     int$flags 001D                    ??_atraso_ms 0015                       intlevel2 0000  
    __size_of_f_interrupt_high 00C4    __end_of_desloca_pra_direita 0208   __end_of_desloca_pra_esquerda 0202  
