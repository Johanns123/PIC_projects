

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 09 18:27:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   000B1A                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _conv7seg
    88   000B1A  3F                 	db	63
    89   000B1B  06                 	db	6
    90   000B1C  5B                 	db	91
    91   000B1D  4F                 	db	79
    92   000B1E  66                 	db	102
    93   000B1F  6D                 	db	109
    94   000B20  7D                 	db	125
    95   000B21  07                 	db	7
    96   000B22  7F                 	db	127
    97   000B23  6F                 	db	111
    98   000B24  77                 	db	119
    99   000B25  7C                 	db	124
   100   000B26  39                 	db	57
   101   000B27  5E                 	db	94
   102   000B28  79                 	db	121
   103   000B29  71                 	db	113
   104   000B2A  00                 	db	0
   105                           
   106                           ;initializer for f_timers@counter3
   107   000B2B  0001               	dw	1
   108                           
   109                           ;initializer for f_timers@counter2
   110   000B2D  0001               	dw	1
   111                           
   112                           ;initializer for f_timers@counter1
   113   000B2F  0001               	dw	1
   114                           
   115                           ;initializer for f_timers@counter0
   116   000B31  0001               	dw	1
   117                           
   118                           ;initializer for read_keyb@m_dado_RB4
   119   000B33  01                 	db	1
   120                           
   121                           ;initializer for read_keyb@m_dado_RB3
   122   000B34  01                 	db	1
   123                           
   124                           ;initializer for _pausa_ou_continua
   125   000B35  01                 	db	1
   126   000000                     _INTCON2	set	4081
   127                           
   128                           	psect	nvCOMRAM
   129   000035                     __pnvCOMRAM:
   130                           	callstack 0
   131   000035                     _temporizador2:
   132                           	callstack 0
   133   000035                     	ds	2
   134   000037                     _temporizador1:
   135                           	callstack 0
   136   000037                     	ds	2
   137   000000                     _INTCON3	set	4080
   138   000000                     _INTCON	set	4082
   139   000000                     _LATA	set	3977
   140   000000                     _LATB3	set	31827
   141   000000                     _LATB4	set	31828
   142   000000                     _LATB5	set	31829
   143   000000                     _LATB6	set	31830
   144   000000                     _LATB7	set	31831
   145   000000                     _TMR0IE	set	32661
   146   000000                     _PEIE	set	32662
   147   000000                     _GIE	set	32663
   148   000000                     _INT2IE	set	32644
   149   000000                     _INT2IF	set	32641
   150   000000                     _INT1IE	set	32643
   151   000000                     _INT0IE	set	32660
   152   000000                     _INT0IF	set	32657
   153   000000                     _LATA4	set	31820
   154   000000                     _LATA3	set	31819
   155   000000                     _LATA5	set	31821
   156   000000                     _GO	set	32273
   157   000000                     _PORTB	set	3969
   158   000000                     _ADCON2	set	4032
   159   000000                     _ADCON1	set	4033
   160   000000                     _ADCON0	set	4034
   161   000000                     _LATA2	set	31818
   162   000000                     _ADRESH	set	4036
   163   000000                     _TMR0	set	4054
   164   000000                     _IPEN	set	32391
   165   000000                     _TMR0IF	set	32658
   166   000000                     _LATB	set	3978
   167   000000                     _LATD	set	3980
   168   000000                     _TRISA	set	3986
   169   000000                     _TRISD	set	3989
   170   000000                     _TRISB	set	3987
   171   000000                     _ADIE	set	31982
   172   000000                     _ADIF	set	31990
   173   000000                     _INT1IF	set	32640
   174   000000                     _T0CON	set	4053
   175                           
   176                           ; #config settings
   177                           
   178                           	psect	cinit
   179   0009FE                     __pcinit:
   180                           	callstack 0
   181   0009FE                     start_initialization:
   182                           	callstack 0
   183   0009FE                     __initialization:
   184                           	callstack 0
   185                           
   186                           ; Initialize objects allocated to COMRAM (28 bytes)
   187                           ; load TBLPTR registers with __pidataCOMRAM
   188   0009FE  0E1A               	movlw	low __pidataCOMRAM
   189   000A00  6EF6               	movwf	tblptrl,c
   190   000A02  0E0B               	movlw	high __pidataCOMRAM
   191   000A04  6EF7               	movwf	tblptrh,c
   192   000A06  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   193   000A08  6EF8               	movwf	tblptru,c
   194   000A0A  EE00  F001         	lfsr	0,__pdataCOMRAM
   195   000A0E  EE10 F01C          	lfsr	1,28
   196   000A12                     copy_data0:
   197   000A12  0009               	tblrd		*+
   198   000A14  CFF5 FFEE          	movff	tablat,postinc0
   199   000A18  50E5               	movf	postdec1,w,c
   200   000A1A  50E1               	movf	fsr1l,w,c
   201   000A1C  E1FA               	bnz	copy_data0
   202                           
   203                           ; Clear objects allocated to COMRAM (16 bytes)
   204   000A1E  EE00  F01D         	lfsr	0,__pbssCOMRAM
   205   000A22  0E10               	movlw	16
   206   000A24                     clear_0:
   207   000A24  6AEE               	clrf	postinc0,c
   208   000A26  06E8               	decf	wreg,f,c
   209   000A28  E1FD               	bnz	clear_0
   210   000A2A                     end_of_initialization:
   211                           	callstack 0
   212   000A2A                     __end_of__initialization:
   213                           	callstack 0
   214   000A2A  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215   000A2C  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216   000A2E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217   000A30  6EF8               	movwf	tblptru,c
   218   000A32  0100               	movlb	0
   219   000A34  EFB5  F005         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   00001D                     __pbssCOMRAM:
   223                           	callstack 0
   224   00001D                     _AD_data:
   225                           	callstack 0
   226   00001D                     	ds	2
   227   00001F                     f_int2@sentido2:
   228                           	callstack 0
   229   00001F                     	ds	1
   230   000020                     f_int1@sentido1:
   231                           	callstack 0
   232   000020                     	ds	1
   233   000021                     f_int0@estado:
   234                           	callstack 0
   235   000021                     	ds	1
   236   000022                     Read_AD@Valor_AD0:
   237                           	callstack 0
   238   000022                     	ds	1
   239   000023                     _sequencia_2:
   240                           	callstack 0
   241   000023                     	ds	1
   242   000024                     _sequencia_1:
   243                           	callstack 0
   244   000024                     	ds	1
   245   000025                     mux_display@estado:
   246                           	callstack 0
   247   000025                     	ds	1
   248   000026                     _estado_sequencia02:
   249                           	callstack 0
   250   000026                     	ds	1
   251   000027                     _estado_sequencia01:
   252                           	callstack 0
   253   000027                     	ds	1
   254   000028                     _display4:
   255                           	callstack 0
   256   000028                     	ds	1
   257   000029                     _display3:
   258                           	callstack 0
   259   000029                     	ds	1
   260   00002A                     _display2:
   261                           	callstack 0
   262   00002A                     	ds	1
   263   00002B                     _display1:
   264                           	callstack 0
   265   00002B                     	ds	1
   266   00002C                     ADC_maq@estado:
   267                           	callstack 0
   268   00002C                     	ds	1
   269                           
   270                           	psect	dataCOMRAM
   271   000001                     __pdataCOMRAM:
   272                           	callstack 0
   273   000001                     _conv7seg:
   274                           	callstack 0
   275   000001                     	ds	17
   276   000012                     f_timers@counter3:
   277                           	callstack 0
   278   000012                     	ds	2
   279   000014                     f_timers@counter2:
   280                           	callstack 0
   281   000014                     	ds	2
   282   000016                     f_timers@counter1:
   283                           	callstack 0
   284   000016                     	ds	2
   285   000018                     f_timers@counter0:
   286                           	callstack 0
   287   000018                     	ds	2
   288   00001A                     	ds	1
   289   00001B                     	ds	1
   290   00001C                     _pausa_ou_continua:
   291                           	callstack 0
   292   00001C                     	ds	1
   293                           
   294                           	psect	cstackCOMRAM
   295   00002D                     __pcstackCOMRAM:
   296                           	callstack 0
   297   00002D                     ??_f_int0:
   298   00002D                     ??_Read_AD:
   299   00002D                     ??_mux_display:
   300   00002D                     ??_cont1_crescente:
   301   00002D                     ??_cont1_decrescente:
   302   00002D                     ??_cont2_crescente:
   303   00002D                     ??_cont2_decrescente:
   304   00002D                     i2select_channel@channel:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x0
   308   00002D                     	ds	1
   309   00002E                     ??i2_ADC_maq:
   310                           
   311                           ; 1 bytes @ 0x1
   312   00002E                     	ds	1
   313   00002F                     
   314                           ; 1 bytes @ 0x2
   315   00002F                     	ds	1
   316   000030                     ??_f_interrupt_high:
   317                           
   318                           ; 1 bytes @ 0x3
   319   000030                     	ds	2
   320   000032                     select_channel@channel:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x5
   324   000032                     	ds	1
   325   000033                     ??_ADC_maq:
   326                           
   327                           ; 1 bytes @ 0x6
   328   000033                     	ds	2
   329   000035                     
   330                           ; 1 bytes @ 0x8
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 28 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2  326[None  ] int 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   350 ;;      Params:         0       0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels required when called: 7
   356 ;; This function calls:
   357 ;;		_loop
   358 ;;		_setup
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text0
   365   000B6A                     __ptext0:
   366                           	callstack 0
   367   000B6A                     _main:
   368                           	callstack 24
   369   000B6A                     
   370                           ;main.c: 29:     setup();
   371   000B6A  EC1C  F005         	call	_setup	;wreg free
   372   000B6E                     l1560:
   373   000B6E  ECDF  F005         	call	_loop	;wreg free
   374   000B72  EFB7  F005         	goto	l1560
   375   000B76  EF07  F000         	goto	start
   376   000B7A                     __end_of_main:
   377                           	callstack 0
   378                           
   379 ;; *************** function _setup *****************
   380 ;; Defined at:
   381 ;;		line 13 in file "IOs.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   395 ;;      Params:         0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 6
   402 ;; This function calls:
   403 ;;		_ADC_maq
   404 ;;		_AD_init
   405 ;;		_disable_interrupts
   406 ;;		_enable_interrupts
   407 ;;		_interrupt_init
   408 ;;		_setup_io
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text1
   415   000A38                     __ptext1:
   416                           	callstack 0
   417   000A38                     _setup:
   418                           	callstack 24
   419   000A38                     
   420                           ;IOs.c: 14:     disable_interrupts();
   421   000A38  ECD7  F005         	call	_disable_interrupts	;wreg free
   422   000A3C                     
   423                           ;IOs.c: 15:     setup_io();
   424   000A3C  EC9B  F005         	call	_setup_io	;wreg free
   425   000A40                     
   426                           ;IOs.c: 16:     interrupt_init();
   427   000A40  ECA8  F005         	call	_interrupt_init	;wreg free
   428   000A44                     
   429                           ;IOs.c: 17:     AD_init();
   430   000A44  ECBD  F005         	call	_AD_init	;wreg free
   431   000A48                     
   432                           ;IOs.c: 18:     LATA2 = 1, LATA3 = 1, LATA4 = 1, LATA5 = 1;
   433   000A48  8489               	bsf	3977,2,c	;volatile
   434   000A4A  8689               	bsf	3977,3,c	;volatile
   435   000A4C  8889               	bsf	3977,4,c	;volatile
   436   000A4E  8A89               	bsf	3977,5,c	;volatile
   437                           
   438                           ;IOs.c: 19:     temporizador1 = 300;
   439   000A50  0E01               	movlw	1
   440   000A52  6E38               	movwf	(_temporizador1+1)^0,c
   441   000A54  0E2C               	movlw	44
   442   000A56  6E37               	movwf	_temporizador1^0,c
   443                           
   444                           ;IOs.c: 20:     temporizador2 = 300;
   445   000A58  0E01               	movlw	1
   446   000A5A  6E36               	movwf	(_temporizador2+1)^0,c
   447   000A5C  0E2C               	movlw	44
   448   000A5E  6E35               	movwf	_temporizador2^0,c
   449   000A60                     
   450                           ;IOs.c: 21:     ADC_maq();
   451   000A60  EC7F  F004         	call	_ADC_maq	;wreg free
   452   000A64                     
   453                           ;IOs.c: 22:     enable_interrupts();
   454   000A64  ECD2  F005         	call	_enable_interrupts	;wreg free
   455   000A68  0012               	return		;funcret
   456   000A6A                     __end_of_setup:
   457                           	callstack 0
   458                           
   459 ;; *************** function _setup_io *****************
   460 ;; Defined at:
   461 ;;		line 26 in file "IOs.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   475 ;;      Params:         0       0       0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 4
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_setup
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490   000B36                     __ptext2:
   491                           	callstack 0
   492   000B36                     _setup_io:
   493                           	callstack 25
   494   000B36                     
   495                           ;IOs.c: 27:     TRISA = 0b11000011;
   496   000B36  0EC3               	movlw	195
   497   000B38  6E92               	movwf	146,c	;volatile
   498                           
   499                           ;IOs.c: 28:     TRISB = 0b00000111;
   500   000B3A  0E07               	movlw	7
   501   000B3C  6E93               	movwf	147,c	;volatile
   502                           
   503                           ;IOs.c: 29:     TRISD = 0b00000000;
   504   000B3E  0E00               	movlw	0
   505   000B40  6E95               	movwf	149,c	;volatile
   506                           
   507                           ;IOs.c: 30:     LATA = 0b00000000;
   508   000B42  0E00               	movlw	0
   509   000B44  6E89               	movwf	137,c	;volatile
   510                           
   511                           ;IOs.c: 31:     LATD = 0b00000000;
   512   000B46  0E00               	movlw	0
   513   000B48  6E8C               	movwf	140,c	;volatile
   514                           
   515                           ;IOs.c: 32:     LATB = 0b00000000;
   516   000B4A  0E00               	movlw	0
   517   000B4C  6E8A               	movwf	138,c	;volatile
   518   000B4E  0012               	return		;funcret
   519   000B50                     __end_of_setup_io:
   520                           	callstack 0
   521                           
   522 ;; *************** function _interrupt_init *****************
   523 ;; Defined at:
   524 ;;		line 58 in file "Interrupts.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   538 ;;      Params:         0       0       0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 4
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_setup
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text3
   553   000B50                     __ptext3:
   554                           	callstack 0
   555   000B50                     _interrupt_init:
   556                           	callstack 25
   557   000B50                     
   558                           ;Interrupts.c: 60:     INTCON = 0b10010000;
   559   000B50  0E90               	movlw	144
   560   000B52  6EF2               	movwf	242,c	;volatile
   561                           
   562                           ;Interrupts.c: 61:     INTCON2 = 0b00000101;
   563   000B54  0E05               	movlw	5
   564   000B56  6EF1               	movwf	241,c	;volatile
   565                           
   566                           ;Interrupts.c: 62:     INTCON3 = 0b11011000;
   567   000B58  0ED8               	movlw	216
   568   000B5A  6EF0               	movwf	240,c	;volatile
   569                           
   570                           ;Interrupts.c: 63:     T0CON = 0b11000001;
   571   000B5C  0EC1               	movlw	193
   572   000B5E  6ED5               	movwf	213,c	;volatile
   573                           
   574                           ;Interrupts.c: 69:     TMR0 = 0x06;
   575   000B60  0E00               	movlw	0
   576   000B62  6ED7               	movwf	215,c	;volatile
   577   000B64  0E06               	movlw	6
   578   000B66  6ED6               	movwf	214,c	;volatile
   579   000B68  0012               	return		;funcret
   580   000B6A                     __end_of_interrupt_init:
   581                           	callstack 0
   582                           
   583 ;; *************** function _enable_interrupts *****************
   584 ;; Defined at:
   585 ;;		line 51 in file "Interrupts.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		None
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   599 ;;      Params:         0       0       0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 4
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_setup
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text4
   614   000BA4                     __ptext4:
   615                           	callstack 0
   616   000BA4                     _enable_interrupts:
   617                           	callstack 25
   618   000BA4                     
   619                           ;Interrupts.c: 52:     TMR0IE = 1;
   620   000BA4  8AF2               	bsf	4082,5,c	;volatile
   621                           
   622                           ;Interrupts.c: 53:     ADIE = 1;
   623   000BA6  8C9D               	bsf	3997,6,c	;volatile
   624                           
   625                           ;Interrupts.c: 54:     PEIE = 1;
   626   000BA8  8CF2               	bsf	4082,6,c	;volatile
   627                           
   628                           ;Interrupts.c: 55:     GIE = 1;
   629   000BAA  8EF2               	bsf	4082,7,c	;volatile
   630   000BAC  0012               	return		;funcret
   631   000BAE                     __end_of_enable_interrupts:
   632                           	callstack 0
   633                           
   634 ;; *************** function _disable_interrupts *****************
   635 ;; Defined at:
   636 ;;		line 45 in file "Interrupts.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		None
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   650 ;;      Params:         0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; Hardware stack levels required when called: 4
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_setup
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text5
   665   000BAE                     __ptext5:
   666                           	callstack 0
   667   000BAE                     _disable_interrupts:
   668                           	callstack 25
   669   000BAE                     
   670                           ;Interrupts.c: 46:     IPEN = 0;
   671   000BAE  9ED0               	bcf	4048,7,c	;volatile
   672                           
   673                           ;Interrupts.c: 47:     GIE = 0;
   674   000BB0  9EF2               	bcf	4082,7,c	;volatile
   675                           
   676                           ;Interrupts.c: 48:     PEIE = 0;
   677   000BB2  9CF2               	bcf	4082,6,c	;volatile
   678   000BB4  0012               	return		;funcret
   679   000BB6                     __end_of_disable_interrupts:
   680                           	callstack 0
   681                           
   682 ;; *************** function _AD_init *****************
   683 ;; Defined at:
   684 ;;		line 12 in file "ADC.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   698 ;;      Params:         0       0       0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 4
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_setup
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text6
   713   000B7A                     __ptext6:
   714                           	callstack 0
   715   000B7A                     _AD_init:
   716                           	callstack 25
   717   000B7A                     
   718                           ;ADC.c: 14:     ADCON0 = 0b00000001;
   719   000B7A  0E01               	movlw	1
   720   000B7C  6EC2               	movwf	194,c	;volatile
   721                           
   722                           ;ADC.c: 15:     ADCON1 = 0b00001101;
   723   000B7E  0E0D               	movlw	13
   724   000B80  6EC1               	movwf	193,c	;volatile
   725                           
   726                           ;ADC.c: 16:     ADCON2 = 0b00010100;
   727   000B82  0E14               	movlw	20
   728   000B84  6EC0               	movwf	192,c	;volatile
   729   000B86  0012               	return		;funcret
   730   000B88                     __end_of_AD_init:
   731                           	callstack 0
   732                           
   733 ;; *************** function _ADC_maq *****************
   734 ;; Defined at:
   735 ;;		line 32 in file "ADC.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   749 ;;      Params:         0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0
   751 ;;      Temps:          2       0       0       0       0       0       0
   752 ;;      Totals:         2       0       0       0       0       0       0
   753 ;;Total ram usage:        2 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 5
   756 ;; This function calls:
   757 ;;		_select_channel
   758 ;;		_start_AD_conversion
   759 ;; This function is called by:
   760 ;;		_setup
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text7
   765   0008FE                     __ptext7:
   766                           	callstack 0
   767   0008FE                     _ADC_maq:
   768                           	callstack 24
   769   0008FE                     
   770                           ;ADC.c: 34:     static uint8_t estado = 0;;ADC.c: 36:     switch (estado)
   771   0008FE  EF97  F004         	goto	l1288
   772   000902                     l27:
   773                           
   774                           ;ADC.c: 39:             AD_data[0] = ADRESH;
   775   000902  CFC4 F01D          	movff	4036,_AD_data	;volatile
   776   000906                     
   777                           ;ADC.c: 40:             select_channel(1);
   778   000906  0E01               	movlw	1
   779   000908  ECC4  F005         	call	_select_channel
   780   00090C                     
   781                           ;ADC.c: 41:             start_AD_conversion();
   782   00090C  ECDB  F005         	call	_start_AD_conversion	;wreg free
   783   000910                     
   784                           ;ADC.c: 42:             estado = 1;
   785   000910  0E01               	movlw	1
   786   000912  6E2C               	movwf	ADC_maq@estado^0,c
   787                           
   788                           ;ADC.c: 43:             break;
   789   000914  EFAC  F004         	goto	l30
   790   000918                     l29:
   791                           
   792                           ;ADC.c: 46:             AD_data[1] = ADRESH;
   793   000918  CFC4 F01E          	movff	4036,_AD_data+1	;volatile
   794   00091C                     
   795                           ;ADC.c: 48:             select_channel(0);
   796   00091C  0E00               	movlw	0
   797   00091E  ECC4  F005         	call	_select_channel
   798   000922                     
   799                           ;ADC.c: 49:             start_AD_conversion();
   800   000922  ECDB  F005         	call	_start_AD_conversion	;wreg free
   801   000926                     
   802                           ;ADC.c: 50:             estado = 0;
   803   000926  0E00               	movlw	0
   804   000928  6E2C               	movwf	ADC_maq@estado^0,c
   805                           
   806                           ;ADC.c: 51:             break;
   807   00092A  EFAC  F004         	goto	l30
   808   00092E                     l1288:
   809   00092E  502C               	movf	ADC_maq@estado^0,w,c
   810   000930  6E33               	movwf	??_ADC_maq^0,c
   811   000932  6A34               	clrf	(??_ADC_maq+1)^0,c
   812                           
   813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   814                           ; Switch size 1, requested type "simple"
   815                           ; Number of cases is 1, Range of values is 0 to 0
   816                           ; switch strategies available:
   817                           ; Name         Instructions Cycles
   818                           ; simple_byte            4     3 (average)
   819                           ;	Chosen strategy is simple_byte
   820   000934  5034               	movf	(??_ADC_maq+1)^0,w,c
   821   000936  0A00               	xorlw	0	; case 0
   822   000938  B4D8               	btfsc	status,2,c
   823   00093A  EFA1  F004         	goto	l1716
   824   00093E  EFAC  F004         	goto	l30
   825   000942                     l1716:
   826                           
   827                           ; Switch size 1, requested type "simple"
   828                           ; Number of cases is 2, Range of values is 0 to 1
   829                           ; switch strategies available:
   830                           ; Name         Instructions Cycles
   831                           ; simple_byte            7     4 (average)
   832                           ;	Chosen strategy is simple_byte
   833   000942  5033               	movf	??_ADC_maq^0,w,c
   834   000944  0A00               	xorlw	0	; case 0
   835   000946  B4D8               	btfsc	status,2,c
   836   000948  EF81  F004         	goto	l27
   837   00094C  0A01               	xorlw	1	; case 1
   838   00094E  B4D8               	btfsc	status,2,c
   839   000950  EF8C  F004         	goto	l29
   840   000954  EFAC  F004         	goto	l30
   841   000958                     l30:
   842   000958  0012               	return		;funcret
   843   00095A                     __end_of_ADC_maq:
   844                           	callstack 0
   845                           
   846 ;; *************** function _start_AD_conversion *****************
   847 ;; Defined at:
   848 ;;		line 19 in file "ADC.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		None
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   862 ;;      Params:         0       0       0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 4
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_ADC_maq
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text8
   877   000BB6                     __ptext8:
   878                           	callstack 0
   879   000BB6                     _start_AD_conversion:
   880                           	callstack 24
   881   000BB6                     
   882                           ;ADC.c: 21:     GO = 1;
   883   000BB6  82C2               	bsf	4034,1,c	;volatile
   884   000BB8  0012               	return		;funcret
   885   000BBA                     __end_of_start_AD_conversion:
   886                           	callstack 0
   887                           
   888 ;; *************** function _select_channel *****************
   889 ;; Defined at:
   890 ;;		line 24 in file "ADC.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  channel         1    wreg     unsigned char 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  channel         1    5[COMRAM] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   904 ;;      Params:         0       0       0       0       0       0       0
   905 ;;      Locals:         1       0       0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0
   907 ;;      Totals:         1       0       0       0       0       0       0
   908 ;;Total ram usage:        1 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 4
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		_ADC_maq
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text9
   919   000B88                     __ptext9:
   920                           	callstack 0
   921   000B88                     _select_channel:
   922                           	callstack 24
   923                           
   924                           ;incstack = 0
   925                           ;select_channel@channel stored from wreg
   926   000B88  6E32               	movwf	select_channel@channel^0,c
   927   000B8A                     
   928                           ;ADC.c: 24: void select_channel(uint8_t channel);ADC.c: 25: {;ADC.c: 29:     ADCON0 = 0b
      +                          00000001 | (channel << 2);
   929   000B8A  4432               	rlncf	select_channel@channel^0,w,c
   930   000B8C  46E8               	rlncf	wreg,f,c
   931   000B8E  0BFC               	andlw	252
   932   000B90  0901               	iorlw	1
   933   000B92  6EC2               	movwf	194,c	;volatile
   934   000B94  0012               	return		;funcret
   935   000B96                     __end_of_select_channel:
   936                           	callstack 0
   937                           
   938 ;; *************** function _loop *****************
   939 ;; Defined at:
   940 ;;		line 112 in file "main.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		None
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   954 ;;      Params:         0       0       0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; Hardware stack levels required when called: 4
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text10
   969   000BBE                     __ptext10:
   970                           	callstack 0
   971   000BBE                     _loop:
   972                           	callstack 26
   973   000BBE  0012               	return		;funcret
   974   000BC0                     __end_of_loop:
   975                           	callstack 0
   976                           
   977 ;; *************** function _f_interrupt_high *****************
   978 ;; Defined at:
   979 ;;		line 13 in file "Interrupts.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   993 ;;      Params:         0       0       0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0       0       0
   995 ;;      Temps:          2       0       0       0       0       0       0
   996 ;;      Totals:         2       0       0       0       0       0       0
   997 ;;Total ram usage:        2 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 3
  1000 ;; This function calls:
  1001 ;;		_f_int0
  1002 ;;		_f_int1
  1003 ;;		_f_int2
  1004 ;;		_f_timers
  1005 ;;		i2_ADC_maq
  1006 ;; This function is called by:
  1007 ;;		Interrupt level 2
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	intcode
  1012   000008                     __pintcode:
  1013                           	callstack 0
  1014   000008                     _f_interrupt_high:
  1015                           	callstack 24
  1016                           
  1017                           ;incstack = 0
  1018   000008  8239               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1019   00000A  EDA1  F002         	call	int_func,f	;refresh shadow registers
  1020                           
  1021                           	psect	intcode_body
  1022   000542                     __pintcode_body:
  1023                           	callstack 24
  1024   000542                     int_func:
  1025                           	callstack 24
  1026   000542  0006               	pop		; remove dummy address from shadow register refresh
  1027   000544  CFD9 F030          	movff	fsr2l,??_f_interrupt_high
  1028   000548  CFDA F031          	movff	fsr2h,??_f_interrupt_high+1
  1029   00054C                     
  1030                           ;Interrupts.c: 15:     if (TMR0IF) {
  1031   00054C  A4F2               	btfss	4082,2,c	;volatile
  1032   00054E  EFAB  F002         	goto	i2u36_41
  1033   000552  EFAD  F002         	goto	i2u36_40
  1034   000556                     i2u36_41:
  1035   000556  EFB4  F002         	goto	i2l1648
  1036   00055A                     i2u36_40:
  1037   00055A                     
  1038                           ;Interrupts.c: 16:         TMR0 = 0x06;
  1039   00055A  0E00               	movlw	0
  1040   00055C  6ED7               	movwf	215,c	;volatile
  1041   00055E  0E06               	movlw	6
  1042   000560  6ED6               	movwf	214,c	;volatile
  1043   000562                     
  1044                           ;Interrupts.c: 18:         f_timers();
  1045   000562  ECFE  F002         	call	_f_timers	;wreg free
  1046   000566                     
  1047                           ;Interrupts.c: 21:         TMR0IF = 0x00;
  1048   000566  94F2               	bcf	4082,2,c	;volatile
  1049   000568                     i2l1648:
  1050                           
  1051                           ;Interrupts.c: 24:     if (INT0IF && INT0IE) {
  1052   000568  A2F2               	btfss	4082,1,c	;volatile
  1053   00056A  EFB9  F002         	goto	i2u37_41
  1054   00056E  EFBB  F002         	goto	i2u37_40
  1055   000572                     i2u37_41:
  1056   000572  EFC5  F002         	goto	i2l1656
  1057   000576                     i2u37_40:
  1058   000576  A8F2               	btfss	4082,4,c	;volatile
  1059   000578  EFC0  F002         	goto	i2u38_41
  1060   00057C  EFC2  F002         	goto	i2u38_40
  1061   000580                     i2u38_41:
  1062   000580  EFC5  F002         	goto	i2l1656
  1063   000584                     i2u38_40:
  1064   000584                     
  1065                           ;Interrupts.c: 25:         f_int0();
  1066   000584  ECDB  F004         	call	_f_int0	;wreg free
  1067   000588                     
  1068                           ;Interrupts.c: 26:         INT0IF = 0;
  1069   000588  92F2               	bcf	4082,1,c	;volatile
  1070   00058A                     i2l1656:
  1071                           
  1072                           ;Interrupts.c: 29:     if (INT1IF && INT1IE) {
  1073   00058A  A0F0               	btfss	4080,0,c	;volatile
  1074   00058C  EFCA  F002         	goto	i2u39_41
  1075   000590  EFCC  F002         	goto	i2u39_40
  1076   000594                     i2u39_41:
  1077   000594  EFD6  F002         	goto	i2l1664
  1078   000598                     i2u39_40:
  1079   000598  A6F0               	btfss	4080,3,c	;volatile
  1080   00059A  EFD1  F002         	goto	i2u40_41
  1081   00059E  EFD3  F002         	goto	i2u40_40
  1082   0005A2                     i2u40_41:
  1083   0005A2  EFD6  F002         	goto	i2l1664
  1084   0005A6                     i2u40_40:
  1085   0005A6                     
  1086                           ;Interrupts.c: 30:         f_int1();
  1087   0005A6  EC78  F005         	call	_f_int1	;wreg free
  1088   0005AA                     
  1089                           ;Interrupts.c: 31:         INT1IF = 0;
  1090   0005AA  90F0               	bcf	4080,0,c	;volatile
  1091   0005AC                     i2l1664:
  1092                           
  1093                           ;Interrupts.c: 34:     if (INT2IF && INT2IE) {
  1094   0005AC  A2F0               	btfss	4080,1,c	;volatile
  1095   0005AE  EFDB  F002         	goto	i2u41_41
  1096   0005B2  EFDD  F002         	goto	i2u41_40
  1097   0005B6                     i2u41_41:
  1098   0005B6  EFE7  F002         	goto	i2l1672
  1099   0005BA                     i2u41_40:
  1100   0005BA  A8F0               	btfss	4080,4,c	;volatile
  1101   0005BC  EFE2  F002         	goto	i2u42_41
  1102   0005C0  EFE4  F002         	goto	i2u42_40
  1103   0005C4                     i2u42_41:
  1104   0005C4  EFE7  F002         	goto	i2l1672
  1105   0005C8                     i2u42_40:
  1106   0005C8                     
  1107                           ;Interrupts.c: 35:         f_int2();
  1108   0005C8  EC63  F005         	call	_f_int2	;wreg free
  1109   0005CC                     
  1110                           ;Interrupts.c: 36:         INT2IF = 0;
  1111   0005CC  92F0               	bcf	4080,1,c	;volatile
  1112   0005CE                     i2l1672:
  1113                           
  1114                           ;Interrupts.c: 39:     if (ADIF && ADIE) {
  1115   0005CE  AC9E               	btfss	3998,6,c	;volatile
  1116   0005D0  EFEC  F002         	goto	i2u43_41
  1117   0005D4  EFEE  F002         	goto	i2u43_40
  1118   0005D8                     i2u43_41:
  1119   0005D8  EFF8  F002         	goto	i2l253
  1120   0005DC                     i2u43_40:
  1121   0005DC  AC9D               	btfss	3997,6,c	;volatile
  1122   0005DE  EFF3  F002         	goto	i2u44_41
  1123   0005E2  EFF5  F002         	goto	i2u44_40
  1124   0005E6                     i2u44_41:
  1125   0005E6  EFF8  F002         	goto	i2l253
  1126   0005EA                     i2u44_40:
  1127   0005EA                     
  1128                           ;Interrupts.c: 40:         ADC_maq();
  1129   0005EA  ECAD  F004         	call	i2_ADC_maq	;wreg free
  1130   0005EE                     
  1131                           ;Interrupts.c: 41:         ADIF = 0;
  1132   0005EE  9C9E               	bcf	3998,6,c	;volatile
  1133   0005F0                     i2l253:
  1134   0005F0  C031  FFDA         	movff	??_f_interrupt_high+1,fsr2h
  1135   0005F4  C030  FFD9         	movff	??_f_interrupt_high,fsr2l
  1136   0005F8  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1137   0005FA  0011               	retfie		f
  1138   0005FC                     __end_of_f_interrupt_high:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function i2_ADC_maq *****************
  1142 ;; Defined at:
  1143 ;;		line 32 in file "ADC.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1157 ;;      Params:         0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0
  1159 ;;      Temps:          2       0       0       0       0       0       0
  1160 ;;      Totals:         2       0       0       0       0       0       0
  1161 ;;Total ram usage:        2 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 1
  1164 ;; This function calls:
  1165 ;;		i2_select_channel
  1166 ;;		i2_start_AD_conversion
  1167 ;; This function is called by:
  1168 ;;		_f_interrupt_high
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text12
  1173   00095A                     __ptext12:
  1174                           	callstack 0
  1175   00095A                     i2_ADC_maq:
  1176                           	callstack 25
  1177   00095A                     
  1178                           ;ADC.c: 34:     static uint8_t estado = 0;;ADC.c: 36:     switch (estado)
  1179   00095A  EFC5  F004         	goto	i2l1634
  1180   00095E                     i2l27:
  1181                           
  1182                           ;ADC.c: 39:             AD_data[0] = ADRESH;
  1183   00095E  CFC4 F01D          	movff	4036,_AD_data	;volatile
  1184   000962                     
  1185                           ;ADC.c: 40:             select_channel(1);
  1186   000962  0E01               	movlw	1
  1187   000964  ECCB  F005         	call	i2_select_channel
  1188   000968                     
  1189                           ;ADC.c: 41:             start_AD_conversion();
  1190   000968  ECDD  F005         	call	i2_start_AD_conversion	;wreg free
  1191   00096C                     
  1192                           ;ADC.c: 42:             estado = 1;
  1193   00096C  0E01               	movlw	1
  1194   00096E  6E2C               	movwf	ADC_maq@estado^0,c
  1195                           
  1196                           ;ADC.c: 43:             break;
  1197   000970  EFDA  F004         	goto	i2l30
  1198   000974                     i2l29:
  1199                           
  1200                           ;ADC.c: 46:             AD_data[1] = ADRESH;
  1201   000974  CFC4 F01E          	movff	4036,_AD_data+1	;volatile
  1202   000978                     
  1203                           ;ADC.c: 48:             select_channel(0);
  1204   000978  0E00               	movlw	0
  1205   00097A  ECCB  F005         	call	i2_select_channel
  1206   00097E                     
  1207                           ;ADC.c: 49:             start_AD_conversion();
  1208   00097E  ECDD  F005         	call	i2_start_AD_conversion	;wreg free
  1209   000982                     
  1210                           ;ADC.c: 50:             estado = 0;
  1211   000982  0E00               	movlw	0
  1212   000984  6E2C               	movwf	ADC_maq@estado^0,c
  1213                           
  1214                           ;ADC.c: 51:             break;
  1215   000986  EFDA  F004         	goto	i2l30
  1216   00098A                     i2l1634:
  1217   00098A  502C               	movf	ADC_maq@estado^0,w,c
  1218   00098C  6E2E               	movwf	??i2_ADC_maq^0,c
  1219   00098E  6A2F               	clrf	(??i2_ADC_maq+1)^0,c
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ;	Chosen strategy is simple_byte
  1228   000990  502F               	movf	(??i2_ADC_maq+1)^0,w,c
  1229   000992  0A00               	xorlw	0	; case 0
  1230   000994  B4D8               	btfsc	status,2,c
  1231   000996  EFCF  F004         	goto	i2l1718
  1232   00099A  EFDA  F004         	goto	i2l30
  1233   00099E                     i2l1718:
  1234                           
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 2, Range of values is 0 to 1
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte            7     4 (average)
  1240                           ;	Chosen strategy is simple_byte
  1241   00099E  502E               	movf	??i2_ADC_maq^0,w,c
  1242   0009A0  0A00               	xorlw	0	; case 0
  1243   0009A2  B4D8               	btfsc	status,2,c
  1244   0009A4  EFAF  F004         	goto	i2l27
  1245   0009A8  0A01               	xorlw	1	; case 1
  1246   0009AA  B4D8               	btfsc	status,2,c
  1247   0009AC  EFBA  F004         	goto	i2l29
  1248   0009B0  EFDA  F004         	goto	i2l30
  1249   0009B4                     i2l30:
  1250   0009B4  0012               	return		;funcret
  1251   0009B6                     __end_ofi2_ADC_maq:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function i2_start_AD_conversion *****************
  1255 ;; Defined at:
  1256 ;;		line 19 in file "ADC.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		None
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1270 ;;      Params:         0       0       0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		i2_ADC_maq
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text13
  1284   000BBA                     __ptext13:
  1285                           	callstack 0
  1286   000BBA                     i2_start_AD_conversion:
  1287                           	callstack 25
  1288   000BBA                     
  1289                           ;ADC.c: 21:     GO = 1;
  1290   000BBA  82C2               	bsf	4034,1,c	;volatile
  1291   000BBC  0012               	return		;funcret
  1292   000BBE                     __end_ofi2_start_AD_conversion:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function i2_select_channel *****************
  1296 ;; Defined at:
  1297 ;;		line 24 in file "ADC.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  channel         1    wreg     unsigned char 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  channel         1    0[COMRAM] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1311 ;;      Params:         0       0       0       0       0       0       0
  1312 ;;      Locals:         1       0       0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0
  1314 ;;      Totals:         1       0       0       0       0       0       0
  1315 ;;Total ram usage:        1 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		i2_ADC_maq
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text14
  1325   000B96                     __ptext14:
  1326                           	callstack 0
  1327   000B96                     i2_select_channel:
  1328                           	callstack 25
  1329                           
  1330                           ;incstack = 0
  1331                           ;i2select_channel@channel stored from wreg
  1332   000B96  6E2D               	movwf	i2select_channel@channel^0,c
  1333   000B98                     
  1334                           ;ADC.c: 24: void select_channel(uint8_t channel);ADC.c: 25: {;ADC.c: 29:     ADCON0 = 0b
      +                          00000001 | (channel << 2);
  1335   000B98  442D               	rlncf	i2select_channel@channel^0,w,c
  1336   000B9A  46E8               	rlncf	wreg,f,c
  1337   000B9C  0BFC               	andlw	252
  1338   000B9E  0901               	iorlw	1
  1339   000BA0  6EC2               	movwf	194,c	;volatile
  1340   000BA2  0012               	return		;funcret
  1341   000BA4                     __end_ofi2_select_channel:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _f_timers *****************
  1345 ;; Defined at:
  1346 ;;		line 41 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1360 ;;      Params:         0       0       0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0
  1363 ;;      Totals:         0       0       0       0       0       0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 2
  1367 ;; This function calls:
  1368 ;;		_LED_State
  1369 ;;		_Read_AD
  1370 ;;		_contador_displays_01
  1371 ;;		_contador_displays_02
  1372 ;;		_counter_state
  1373 ;;		_mux_display
  1374 ;; This function is called by:
  1375 ;;		_f_interrupt_high
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text15
  1380   0005FC                     __ptext15:
  1381                           	callstack 0
  1382   0005FC                     _f_timers:
  1383                           	callstack 24
  1384   0005FC                     
  1385                           ;main.c: 42:     static uint16_t counter0 = 1, counter1 = 1, counter2 = 1, counter3 = 1;
      +                          ;main.c: 44:     if (counter0 < 5)
  1386   0005FC  5019               	movf	(f_timers@counter0+1)^0,w,c
  1387   0005FE  E107               	bnz	i2u18_41
  1388   000600  0E05               	movlw	5
  1389   000602  5C18               	subwf	f_timers@counter0^0,w,c
  1390   000604  B0D8               	btfsc	status,0,c
  1391   000606  EF07  F003         	goto	i2u18_41
  1392   00060A  EF09  F003         	goto	i2u18_40
  1393   00060E                     i2u18_41:
  1394   00060E  EF0D  F003         	goto	i2l1434
  1395   000612                     i2u18_40:
  1396   000612                     
  1397                           ;main.c: 45:     {;main.c: 46:         counter0++;
  1398   000612  4A18               	infsnz	f_timers@counter0^0,f,c
  1399   000614  2A19               	incf	(f_timers@counter0+1)^0,f,c
  1400                           
  1401                           ;main.c: 47:     }
  1402   000616  EF13  F003         	goto	i2l1438
  1403   00061A                     i2l1434:
  1404                           
  1405                           ;main.c: 49:         mux_display();
  1406   00061A  EC57  F003         	call	_mux_display	;wreg free
  1407   00061E                     
  1408                           ;main.c: 50:         counter0 = 1;
  1409   00061E  0E00               	movlw	0
  1410   000620  6E19               	movwf	(f_timers@counter0+1)^0,c
  1411   000622  0E01               	movlw	1
  1412   000624  6E18               	movwf	f_timers@counter0^0,c
  1413   000626                     i2l1438:
  1414                           
  1415                           ;main.c: 53:     if (counter1 < temporizador1)
  1416   000626  5037               	movf	_temporizador1^0,w,c
  1417   000628  5C16               	subwf	f_timers@counter1^0,w,c
  1418   00062A  5038               	movf	(_temporizador1+1)^0,w,c
  1419   00062C  5817               	subwfb	(f_timers@counter1+1)^0,w,c
  1420   00062E  B0D8               	btfsc	status,0,c
  1421   000630  EF1C  F003         	goto	i2u19_41
  1422   000634  EF1E  F003         	goto	i2u19_40
  1423   000638                     i2u19_41:
  1424   000638  EF22  F003         	goto	i2l1442
  1425   00063C                     i2u19_40:
  1426   00063C                     
  1427                           ;main.c: 54:     {;main.c: 55:         counter1++;
  1428   00063C  4A16               	infsnz	f_timers@counter1^0,f,c
  1429   00063E  2A17               	incf	(f_timers@counter1+1)^0,f,c
  1430                           
  1431                           ;main.c: 56:     }
  1432   000640  EF28  F003         	goto	i2l1446
  1433   000644                     i2l1442:
  1434                           
  1435                           ;main.c: 58:         contador_displays_01();
  1436   000644  EC4C  F005         	call	_contador_displays_01	;wreg free
  1437   000648                     
  1438                           ;main.c: 59:         counter1 = 1;
  1439   000648  0E00               	movlw	0
  1440   00064A  6E17               	movwf	(f_timers@counter1+1)^0,c
  1441   00064C  0E01               	movlw	1
  1442   00064E  6E16               	movwf	f_timers@counter1^0,c
  1443   000650                     i2l1446:
  1444                           
  1445                           ;main.c: 62:     if (counter2 < temporizador2)
  1446   000650  5035               	movf	_temporizador2^0,w,c
  1447   000652  5C14               	subwf	f_timers@counter2^0,w,c
  1448   000654  5036               	movf	(_temporizador2+1)^0,w,c
  1449   000656  5815               	subwfb	(f_timers@counter2+1)^0,w,c
  1450   000658  B0D8               	btfsc	status,0,c
  1451   00065A  EF31  F003         	goto	i2u20_41
  1452   00065E  EF33  F003         	goto	i2u20_40
  1453   000662                     i2u20_41:
  1454   000662  EF37  F003         	goto	i2l1450
  1455   000666                     i2u20_40:
  1456   000666                     
  1457                           ;main.c: 63:     {;main.c: 64:         counter2++;
  1458   000666  4A14               	infsnz	f_timers@counter2^0,f,c
  1459   000668  2A15               	incf	(f_timers@counter2+1)^0,f,c
  1460                           
  1461                           ;main.c: 65:     }
  1462   00066A  EF3D  F003         	goto	i2l1454
  1463   00066E                     i2l1450:
  1464                           
  1465                           ;main.c: 67:         contador_displays_02();
  1466   00066E  EC35  F005         	call	_contador_displays_02	;wreg free
  1467   000672                     
  1468                           ;main.c: 68:         counter2 = 1;
  1469   000672  0E00               	movlw	0
  1470   000674  6E15               	movwf	(f_timers@counter2+1)^0,c
  1471   000676  0E01               	movlw	1
  1472   000678  6E14               	movwf	f_timers@counter2^0,c
  1473   00067A                     i2l1454:
  1474                           
  1475                           ;main.c: 71:     if (counter3 < 10)
  1476   00067A  5013               	movf	(f_timers@counter3+1)^0,w,c
  1477   00067C  E107               	bnz	i2u21_41
  1478   00067E  0E0A               	movlw	10
  1479   000680  5C12               	subwf	f_timers@counter3^0,w,c
  1480   000682  B0D8               	btfsc	status,0,c
  1481   000684  EF46  F003         	goto	i2u21_41
  1482   000688  EF48  F003         	goto	i2u21_40
  1483   00068C                     i2u21_41:
  1484   00068C  EF4C  F003         	goto	i2l1458
  1485   000690                     i2u21_40:
  1486   000690                     
  1487                           ;main.c: 72:     {;main.c: 73:         counter3++;
  1488   000690  4A12               	infsnz	f_timers@counter3^0,f,c
  1489   000692  2A13               	incf	(f_timers@counter3+1)^0,f,c
  1490                           
  1491                           ;main.c: 74:     }
  1492   000694  EF56  F003         	goto	i2l355
  1493   000698                     i2l1458:
  1494                           
  1495                           ;main.c: 77:     {;main.c: 78:         counter_state();
  1496   000698  ECAF  F003         	call	_counter_state	;wreg free
  1497   00069C                     
  1498                           ;main.c: 79:         LED_State();
  1499   00069C  EC00  F004         	call	_LED_State	;wreg free
  1500   0006A0                     
  1501                           ;main.c: 81:         Read_AD();
  1502   0006A0  EC43  F004         	call	_Read_AD	;wreg free
  1503   0006A4                     
  1504                           ;main.c: 82:         counter3 = 1;
  1505   0006A4  0E00               	movlw	0
  1506   0006A6  6E13               	movwf	(f_timers@counter3+1)^0,c
  1507   0006A8  0E01               	movlw	1
  1508   0006AA  6E12               	movwf	f_timers@counter3^0,c
  1509   0006AC                     i2l355:
  1510   0006AC  0012               	return		;funcret
  1511   0006AE                     __end_of_f_timers:
  1512                           	callstack 0
  1513                           
  1514 ;; *************** function _mux_display *****************
  1515 ;; Defined at:
  1516 ;;		line 14 in file "Displays.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1530 ;;      Params:         0       0       0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0
  1532 ;;      Temps:          2       0       0       0       0       0       0
  1533 ;;      Totals:         2       0       0       0       0       0       0
  1534 ;;Total ram usage:        2 bytes
  1535 ;; Hardware stack levels used: 1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_f_timers
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text16
  1544   0006AE                     __ptext16:
  1545                           	callstack 0
  1546   0006AE                     _mux_display:
  1547                           	callstack 25
  1548   0006AE                     
  1549                           ;Displays.c: 15:     static uint8_t estado = 0;;Displays.c: 17:     switch (estado) {
  1550   0006AE  EF91  F003         	goto	i2l1314
  1551   0006B2                     i2l60:
  1552                           
  1553                           ;Displays.c: 19:             LATA2 = 1;
  1554   0006B2  8489               	bsf	3977,2,c	;volatile
  1555                           
  1556                           ;Displays.c: 20:             LATA5 = 0;
  1557   0006B4  9A89               	bcf	3977,5,c	;volatile
  1558   0006B6                     
  1559                           ;Displays.c: 21:             LATD = conv7seg[display1];
  1560   0006B6  0E01               	movlw	low _conv7seg
  1561   0006B8  242B               	addwf	_display1^0,w,c
  1562   0006BA  6ED9               	movwf	fsr2l,c
  1563   0006BC  6ADA               	clrf	fsr2h,c
  1564   0006BE  0E00               	movlw	high _conv7seg
  1565   0006C0  22DA               	addwfc	fsr2h,f,c
  1566   0006C2  50DF               	movf	indf2,w,c
  1567   0006C4  6E8C               	movwf	140,c	;volatile
  1568   0006C6                     
  1569                           ;Displays.c: 22:             estado = 1;
  1570   0006C6  0E01               	movlw	1
  1571   0006C8  6E25               	movwf	mux_display@estado^0,c
  1572                           
  1573                           ;Displays.c: 23:             break;
  1574   0006CA  EFAE  F003         	goto	i2l65
  1575   0006CE                     i2l62:
  1576                           
  1577                           ;Displays.c: 26:             LATA2 = 0;
  1578   0006CE  9489               	bcf	3977,2,c	;volatile
  1579                           
  1580                           ;Displays.c: 27:             LATA3 = 1;
  1581   0006D0  8689               	bsf	3977,3,c	;volatile
  1582   0006D2                     
  1583                           ;Displays.c: 28:             LATD = conv7seg[display2];
  1584   0006D2  0E01               	movlw	low _conv7seg
  1585   0006D4  242A               	addwf	_display2^0,w,c
  1586   0006D6  6ED9               	movwf	fsr2l,c
  1587   0006D8  6ADA               	clrf	fsr2h,c
  1588   0006DA  0E00               	movlw	high _conv7seg
  1589   0006DC  22DA               	addwfc	fsr2h,f,c
  1590   0006DE  50DF               	movf	indf2,w,c
  1591   0006E0  6E8C               	movwf	140,c	;volatile
  1592   0006E2                     
  1593                           ;Displays.c: 29:             estado = 2;
  1594   0006E2  0E02               	movlw	2
  1595   0006E4  6E25               	movwf	mux_display@estado^0,c
  1596                           
  1597                           ;Displays.c: 30:             break;
  1598   0006E6  EFAE  F003         	goto	i2l65
  1599   0006EA                     i2l63:
  1600                           
  1601                           ;Displays.c: 33:             LATA3 = 0;
  1602   0006EA  9689               	bcf	3977,3,c	;volatile
  1603                           
  1604                           ;Displays.c: 34:             LATA4 = 1;
  1605   0006EC  8889               	bsf	3977,4,c	;volatile
  1606   0006EE                     
  1607                           ;Displays.c: 35:             LATD = conv7seg[display3];
  1608   0006EE  0E01               	movlw	low _conv7seg
  1609   0006F0  2429               	addwf	_display3^0,w,c
  1610   0006F2  6ED9               	movwf	fsr2l,c
  1611   0006F4  6ADA               	clrf	fsr2h,c
  1612   0006F6  0E00               	movlw	high _conv7seg
  1613   0006F8  22DA               	addwfc	fsr2h,f,c
  1614   0006FA  50DF               	movf	indf2,w,c
  1615   0006FC  6E8C               	movwf	140,c	;volatile
  1616   0006FE                     
  1617                           ;Displays.c: 36:             estado = 3;
  1618   0006FE  0E03               	movlw	3
  1619   000700  6E25               	movwf	mux_display@estado^0,c
  1620                           
  1621                           ;Displays.c: 37:             break;
  1622   000702  EFAE  F003         	goto	i2l65
  1623   000706                     i2l64:
  1624                           
  1625                           ;Displays.c: 40:             LATA4 = 0;
  1626   000706  9889               	bcf	3977,4,c	;volatile
  1627                           
  1628                           ;Displays.c: 41:             LATA5 = 1;
  1629   000708  8A89               	bsf	3977,5,c	;volatile
  1630   00070A                     
  1631                           ;Displays.c: 42:             LATD = conv7seg[display4];
  1632   00070A  0E01               	movlw	low _conv7seg
  1633   00070C  2428               	addwf	_display4^0,w,c
  1634   00070E  6ED9               	movwf	fsr2l,c
  1635   000710  6ADA               	clrf	fsr2h,c
  1636   000712  0E00               	movlw	high _conv7seg
  1637   000714  22DA               	addwfc	fsr2h,f,c
  1638   000716  50DF               	movf	indf2,w,c
  1639   000718  6E8C               	movwf	140,c	;volatile
  1640   00071A                     
  1641                           ;Displays.c: 43:             estado = 0;
  1642   00071A  0E00               	movlw	0
  1643   00071C  6E25               	movwf	mux_display@estado^0,c
  1644                           
  1645                           ;Displays.c: 44:             break;
  1646   00071E  EFAE  F003         	goto	i2l65
  1647   000722                     i2l1314:
  1648   000722  5025               	movf	mux_display@estado^0,w,c
  1649   000724  6E2D               	movwf	??_mux_display^0,c
  1650   000726  6A2E               	clrf	(??_mux_display+1)^0,c
  1651                           
  1652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 1, Range of values is 0 to 0
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte            4     3 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659   000728  502E               	movf	(??_mux_display+1)^0,w,c
  1660   00072A  0A00               	xorlw	0	; case 0
  1661   00072C  B4D8               	btfsc	status,2,c
  1662   00072E  EF9B  F003         	goto	i2l1720
  1663   000732  EFAE  F003         	goto	i2l65
  1664   000736                     i2l1720:
  1665                           
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 4, Range of values is 0 to 3
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte           13     7 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672   000736  502D               	movf	??_mux_display^0,w,c
  1673   000738  0A00               	xorlw	0	; case 0
  1674   00073A  B4D8               	btfsc	status,2,c
  1675   00073C  EF59  F003         	goto	i2l60
  1676   000740  0A01               	xorlw	1	; case 1
  1677   000742  B4D8               	btfsc	status,2,c
  1678   000744  EF67  F003         	goto	i2l62
  1679   000748  0A03               	xorlw	3	; case 2
  1680   00074A  B4D8               	btfsc	status,2,c
  1681   00074C  EF75  F003         	goto	i2l63
  1682   000750  0A01               	xorlw	1	; case 3
  1683   000752  B4D8               	btfsc	status,2,c
  1684   000754  EF83  F003         	goto	i2l64
  1685   000758  EFAE  F003         	goto	i2l65
  1686   00075C                     i2l65:
  1687   00075C  0012               	return		;funcret
  1688   00075E                     __end_of_mux_display:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _counter_state *****************
  1692 ;; Defined at:
  1693 ;;		line 273 in file "main.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1707 ;;      Params:         0       0       0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_f_timers
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text17
  1721   00075E                     __ptext17:
  1722                           	callstack 0
  1723   00075E                     _counter_state:
  1724                           	callstack 25
  1725   00075E                     
  1726                           ;main.c: 275:     if(!sequencia_1 && !sequencia_2)
  1727   00075E  5024               	movf	_sequencia_1^0,w,c
  1728   000760  A4D8               	btfss	status,2,c
  1729   000762  EFB5  F003         	goto	i2u5_41
  1730   000766  EFB7  F003         	goto	i2u5_40
  1731   00076A                     i2u5_41:
  1732   00076A  EFC3  F003         	goto	i2l1350
  1733   00076E                     i2u5_40:
  1734   00076E  5023               	movf	_sequencia_2^0,w,c
  1735   000770  A4D8               	btfss	status,2,c
  1736   000772  EFBD  F003         	goto	i2u6_41
  1737   000776  EFBF  F003         	goto	i2u6_40
  1738   00077A                     i2u6_41:
  1739   00077A  EFC3  F003         	goto	i2l1350
  1740   00077E                     i2u6_40:
  1741   00077E                     
  1742                           ;main.c: 276:     {;main.c: 277:         display1 = 3;
  1743   00077E  0E03               	movlw	3
  1744   000780  6E2B               	movwf	_display1^0,c
  1745                           
  1746                           ;main.c: 278:     }
  1747   000782  EFFF  F003         	goto	i2l425
  1748   000786                     i2l1350:
  1749   000786  5024               	movf	_sequencia_1^0,w,c
  1750   000788  A4D8               	btfss	status,2,c
  1751   00078A  EFC9  F003         	goto	i2u7_41
  1752   00078E  EFCB  F003         	goto	i2u7_40
  1753   000792                     i2u7_41:
  1754   000792  EFD7  F003         	goto	i2l1356
  1755   000796                     i2u7_40:
  1756   000796  5023               	movf	_sequencia_2^0,w,c
  1757   000798  B4D8               	btfsc	status,2,c
  1758   00079A  EFD1  F003         	goto	i2u8_41
  1759   00079E  EFD3  F003         	goto	i2u8_40
  1760   0007A2                     i2u8_41:
  1761   0007A2  EFD7  F003         	goto	i2l1356
  1762   0007A6                     i2u8_40:
  1763   0007A6                     
  1764                           ;main.c: 281:     {;main.c: 282:         display1 = 2;
  1765   0007A6  0E02               	movlw	2
  1766   0007A8  6E2B               	movwf	_display1^0,c
  1767                           
  1768                           ;main.c: 283:     }
  1769   0007AA  EFFF  F003         	goto	i2l425
  1770   0007AE                     i2l1356:
  1771   0007AE  5024               	movf	_sequencia_1^0,w,c
  1772   0007B0  B4D8               	btfsc	status,2,c
  1773   0007B2  EFDD  F003         	goto	i2u9_41
  1774   0007B6  EFDF  F003         	goto	i2u9_40
  1775   0007BA                     i2u9_41:
  1776   0007BA  EFEB  F003         	goto	i2l1362
  1777   0007BE                     i2u9_40:
  1778   0007BE  5023               	movf	_sequencia_2^0,w,c
  1779   0007C0  A4D8               	btfss	status,2,c
  1780   0007C2  EFE5  F003         	goto	i2u10_41
  1781   0007C6  EFE7  F003         	goto	i2u10_40
  1782   0007CA                     i2u10_41:
  1783   0007CA  EFEB  F003         	goto	i2l1362
  1784   0007CE                     i2u10_40:
  1785   0007CE                     
  1786                           ;main.c: 286:     {;main.c: 287:         display1 = 1;
  1787   0007CE  0E01               	movlw	1
  1788   0007D0  6E2B               	movwf	_display1^0,c
  1789                           
  1790                           ;main.c: 288:     }
  1791   0007D2  EFFF  F003         	goto	i2l425
  1792   0007D6                     i2l1362:
  1793   0007D6  5024               	movf	_sequencia_1^0,w,c
  1794   0007D8  B4D8               	btfsc	status,2,c
  1795   0007DA  EFF1  F003         	goto	i2u11_41
  1796   0007DE  EFF3  F003         	goto	i2u11_40
  1797   0007E2                     i2u11_41:
  1798   0007E2  EFFF  F003         	goto	i2l421
  1799   0007E6                     i2u11_40:
  1800   0007E6  5023               	movf	_sequencia_2^0,w,c
  1801   0007E8  B4D8               	btfsc	status,2,c
  1802   0007EA  EFF9  F003         	goto	i2u12_41
  1803   0007EE  EFFB  F003         	goto	i2u12_40
  1804   0007F2                     i2u12_41:
  1805   0007F2  EFFF  F003         	goto	i2l421
  1806   0007F6                     i2u12_40:
  1807   0007F6                     
  1808                           ;main.c: 291:     {;main.c: 292:         display1 = 0;
  1809   0007F6  0E00               	movlw	0
  1810   0007F8  6E2B               	movwf	_display1^0,c
  1811   0007FA  EFFF  F003         	goto	i2l425
  1812   0007FE                     i2l421:
  1813   0007FE                     i2l425:
  1814   0007FE  0012               	return		;funcret
  1815   000800                     __end_of_counter_state:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _contador_displays_02 *****************
  1819 ;; Defined at:
  1820 ;;		line 132 in file "main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 1
  1841 ;; This function calls:
  1842 ;;		_cont2_crescente
  1843 ;;		_cont2_decrescente
  1844 ;; This function is called by:
  1845 ;;		_f_timers
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text18
  1850   000A6A                     __ptext18:
  1851                           	callstack 0
  1852   000A6A                     _contador_displays_02:
  1853                           	callstack 24
  1854   000A6A                     
  1855                           ;main.c: 134:     if(!pausa_ou_continua)
  1856   000A6A  501C               	movf	_pausa_ou_continua^0,w,c
  1857   000A6C  A4D8               	btfss	status,2,c
  1858   000A6E  EF3B  F005         	goto	i2u3_41
  1859   000A72  EF3D  F005         	goto	i2u3_40
  1860   000A76                     i2u3_41:
  1861   000A76  EF4B  F005         	goto	i2l381
  1862   000A7A                     i2u3_40:
  1863   000A7A                     
  1864                           ;main.c: 135:     {;main.c: 136:         if(!sequencia_2)
  1865   000A7A  5023               	movf	_sequencia_2^0,w,c
  1866   000A7C  A4D8               	btfss	status,2,c
  1867   000A7E  EF43  F005         	goto	i2u4_41
  1868   000A82  EF45  F005         	goto	i2u4_40
  1869   000A86                     i2u4_41:
  1870   000A86  EF49  F005         	goto	i2l1342
  1871   000A8A                     i2u4_40:
  1872   000A8A                     
  1873                           ;main.c: 137:             cont2_crescente();
  1874   000A8A  EC09  F002         	call	_cont2_crescente	;wreg free
  1875   000A8E  EF4B  F005         	goto	i2l381
  1876   000A92                     i2l1342:
  1877                           
  1878                           ;main.c: 140:             cont2_decrescente();
  1879   000A92  EC71  F001         	call	_cont2_decrescente	;wreg free
  1880   000A96                     i2l381:
  1881   000A96  0012               	return		;funcret
  1882   000A98                     __end_of_contador_displays_02:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _cont2_decrescente *****************
  1886 ;; Defined at:
  1887 ;;		line 302 in file "Displays.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1901 ;;      Params:         0       0       0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0
  1903 ;;      Temps:          2       0       0       0       0       0       0
  1904 ;;      Totals:         2       0       0       0       0       0       0
  1905 ;;Total ram usage:        2 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_contador_displays_02
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text19
  1915   0002E2                     __ptext19:
  1916                           	callstack 0
  1917   0002E2                     _cont2_decrescente:
  1918                           	callstack 24
  1919   0002E2                     
  1920                           ;Displays.c: 304:     switch (estado_sequencia02)
  1921   0002E2  EFC7  F001         	goto	i2l1264
  1922   0002E6                     i2l1234:
  1923                           
  1924                           ;Displays.c: 307:             display4 = 0;
  1925   0002E6  0E00               	movlw	0
  1926   0002E8  6E28               	movwf	_display4^0,c
  1927                           
  1928                           ;Displays.c: 308:             estado_sequencia02 = 2;
  1929   0002EA  0E02               	movlw	2
  1930   0002EC  6E26               	movwf	_estado_sequencia02^0,c
  1931                           
  1932                           ;Displays.c: 309:             break;
  1933   0002EE  EF08  F002         	goto	i2l141
  1934   0002F2                     i2l1236:
  1935                           
  1936                           ;Displays.c: 312:             display4 = 12;
  1937   0002F2  0E0C               	movlw	12
  1938   0002F4  6E28               	movwf	_display4^0,c
  1939                           
  1940                           ;Displays.c: 313:             estado_sequencia02 = 0;
  1941   0002F6  0E00               	movlw	0
  1942   0002F8  6E26               	movwf	_estado_sequencia02^0,c
  1943                           
  1944                           ;Displays.c: 314:             break;
  1945   0002FA  EF08  F002         	goto	i2l141
  1946   0002FE                     i2l1238:
  1947                           
  1948                           ;Displays.c: 317:             display4 = 8;
  1949   0002FE  0E08               	movlw	8
  1950   000300  6E28               	movwf	_display4^0,c
  1951                           
  1952                           ;Displays.c: 318:             estado_sequencia02 = 12;
  1953   000302  0E0C               	movlw	12
  1954   000304  6E26               	movwf	_estado_sequencia02^0,c
  1955                           
  1956                           ;Displays.c: 319:             break;
  1957   000306  EF08  F002         	goto	i2l141
  1958   00030A                     i2l1240:
  1959                           
  1960                           ;Displays.c: 322:             display4 = 9;
  1961   00030A  0E09               	movlw	9
  1962   00030C  6E28               	movwf	_display4^0,c
  1963                           
  1964                           ;Displays.c: 323:             estado_sequencia02 = 8;
  1965   00030E  0E08               	movlw	8
  1966   000310  6E26               	movwf	_estado_sequencia02^0,c
  1967                           
  1968                           ;Displays.c: 324:             break;
  1969   000312  EF08  F002         	goto	i2l141
  1970   000316                     i2l1242:
  1971                           
  1972                           ;Displays.c: 327:             display4 = 14;
  1973   000316  0E0E               	movlw	14
  1974   000318  6E28               	movwf	_display4^0,c
  1975                           
  1976                           ;Displays.c: 328:             estado_sequencia02 = 9;
  1977   00031A  0E09               	movlw	9
  1978   00031C  6E26               	movwf	_estado_sequencia02^0,c
  1979                           
  1980                           ;Displays.c: 329:             break;
  1981   00031E  EF08  F002         	goto	i2l141
  1982   000322                     i2l1244:
  1983                           
  1984                           ;Displays.c: 332:             display4 = 1;
  1985   000322  0E01               	movlw	1
  1986   000324  6E28               	movwf	_display4^0,c
  1987                           
  1988                           ;Displays.c: 333:             estado_sequencia02 = 14;
  1989   000326  0E0E               	movlw	14
  1990   000328  6E26               	movwf	_estado_sequencia02^0,c
  1991                           
  1992                           ;Displays.c: 334:             break;
  1993   00032A  EF08  F002         	goto	i2l141
  1994   00032E                     i2l1246:
  1995                           
  1996                           ;Displays.c: 337:             display4 = 5;
  1997   00032E  0E05               	movlw	5
  1998   000330  6E28               	movwf	_display4^0,c
  1999                           
  2000                           ;Displays.c: 338:             estado_sequencia02 = 1;
  2001   000332  0E01               	movlw	1
  2002   000334  6E26               	movwf	_estado_sequencia02^0,c
  2003                           
  2004                           ;Displays.c: 339:             break;
  2005   000336  EF08  F002         	goto	i2l141
  2006   00033A                     i2l1248:
  2007                           
  2008                           ;Displays.c: 342:             display4 = 10;
  2009   00033A  0E0A               	movlw	10
  2010   00033C  6E28               	movwf	_display4^0,c
  2011                           
  2012                           ;Displays.c: 343:             estado_sequencia02 = 5;
  2013   00033E  0E05               	movlw	5
  2014   000340  6E26               	movwf	_estado_sequencia02^0,c
  2015                           
  2016                           ;Displays.c: 344:             break;
  2017   000342  EF08  F002         	goto	i2l141
  2018   000346                     i2l1250:
  2019                           
  2020                           ;Displays.c: 347:             display4 = 4;
  2021   000346  0E04               	movlw	4
  2022   000348  6E28               	movwf	_display4^0,c
  2023                           
  2024                           ;Displays.c: 348:             estado_sequencia02 = 10;
  2025   00034A  0E0A               	movlw	10
  2026   00034C  6E26               	movwf	_estado_sequencia02^0,c
  2027                           
  2028                           ;Displays.c: 349:             break;
  2029   00034E  EF08  F002         	goto	i2l141
  2030   000352                     i2l1252:
  2031                           
  2032                           ;Displays.c: 352:             display4 = 15;
  2033   000352  0E0F               	movlw	15
  2034   000354  6E28               	movwf	_display4^0,c
  2035                           
  2036                           ;Displays.c: 353:             estado_sequencia02 = 4;
  2037   000356  0E04               	movlw	4
  2038   000358  6E26               	movwf	_estado_sequencia02^0,c
  2039                           
  2040                           ;Displays.c: 354:             break;
  2041   00035A  EF08  F002         	goto	i2l141
  2042   00035E                     i2l1254:
  2043                           
  2044                           ;Displays.c: 357:             display4 = 3;
  2045   00035E  0E03               	movlw	3
  2046   000360  6E28               	movwf	_display4^0,c
  2047                           
  2048                           ;Displays.c: 358:             estado_sequencia02 = 15;
  2049   000362  0E0F               	movlw	15
  2050   000364  6E26               	movwf	_estado_sequencia02^0,c
  2051                           
  2052                           ;Displays.c: 359:             break;
  2053   000366  EF08  F002         	goto	i2l141
  2054   00036A                     i2l1256:
  2055                           
  2056                           ;Displays.c: 362:             display4 = 6;
  2057   00036A  0E06               	movlw	6
  2058   00036C  6E28               	movwf	_display4^0,c
  2059                           
  2060                           ;Displays.c: 363:             estado_sequencia02 = 3;
  2061   00036E  0E03               	movlw	3
  2062   000370  6E26               	movwf	_estado_sequencia02^0,c
  2063                           
  2064                           ;Displays.c: 364:             break;
  2065   000372  EF08  F002         	goto	i2l141
  2066   000376                     i2l1258:
  2067                           
  2068                           ;Displays.c: 367:             display4 = 2;
  2069   000376  0E02               	movlw	2
  2070   000378  6E28               	movwf	_display4^0,c
  2071                           
  2072                           ;Displays.c: 368:             estado_sequencia02 = 6;
  2073   00037A  0E06               	movlw	6
  2074   00037C  6E26               	movwf	_estado_sequencia02^0,c
  2075                           
  2076                           ;Displays.c: 369:             break;
  2077   00037E  EF08  F002         	goto	i2l141
  2078   000382                     i2l1260:
  2079                           
  2080                           ;Displays.c: 372:             display4 = 0;
  2081   000382  0E00               	movlw	0
  2082   000384  6E28               	movwf	_display4^0,c
  2083                           
  2084                           ;Displays.c: 373:             estado_sequencia02 = 0;
  2085   000386  0E00               	movlw	0
  2086   000388  6E26               	movwf	_estado_sequencia02^0,c
  2087                           
  2088                           ;Displays.c: 374:             break;
  2089   00038A  EF08  F002         	goto	i2l141
  2090   00038E                     i2l1264:
  2091   00038E  5026               	movf	_estado_sequencia02^0,w,c
  2092   000390  6E2D               	movwf	??_cont2_decrescente^0,c
  2093   000392  6A2E               	clrf	(??_cont2_decrescente+1)^0,c
  2094                           
  2095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 1, Range of values is 0 to 0
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte            4     3 (average)
  2101                           ;	Chosen strategy is simple_byte
  2102   000394  502E               	movf	(??_cont2_decrescente+1)^0,w,c
  2103   000396  0A00               	xorlw	0	; case 0
  2104   000398  B4D8               	btfsc	status,2,c
  2105   00039A  EFD1  F001         	goto	i2l1722
  2106   00039E  EFC1  F001         	goto	i2l1260
  2107   0003A2                     i2l1722:
  2108                           
  2109                           ; Switch size 1, requested type "simple"
  2110                           ; Number of cases is 13, Range of values is 0 to 15
  2111                           ; switch strategies available:
  2112                           ; Name         Instructions Cycles
  2113                           ; simple_byte           40    21 (average)
  2114                           ;	Chosen strategy is simple_byte
  2115   0003A2  502D               	movf	??_cont2_decrescente^0,w,c
  2116   0003A4  0A00               	xorlw	0	; case 0
  2117   0003A6  B4D8               	btfsc	status,2,c
  2118   0003A8  EF73  F001         	goto	i2l1234
  2119   0003AC  0A01               	xorlw	1	; case 1
  2120   0003AE  B4D8               	btfsc	status,2,c
  2121   0003B0  EF91  F001         	goto	i2l1244
  2122   0003B4  0A03               	xorlw	3	; case 2
  2123   0003B6  B4D8               	btfsc	status,2,c
  2124   0003B8  EFBB  F001         	goto	i2l1258
  2125   0003BC  0A01               	xorlw	1	; case 3
  2126   0003BE  B4D8               	btfsc	status,2,c
  2127   0003C0  EFAF  F001         	goto	i2l1254
  2128   0003C4  0A07               	xorlw	7	; case 4
  2129   0003C6  B4D8               	btfsc	status,2,c
  2130   0003C8  EFA3  F001         	goto	i2l1250
  2131   0003CC  0A01               	xorlw	1	; case 5
  2132   0003CE  B4D8               	btfsc	status,2,c
  2133   0003D0  EF97  F001         	goto	i2l1246
  2134   0003D4  0A03               	xorlw	3	; case 6
  2135   0003D6  B4D8               	btfsc	status,2,c
  2136   0003D8  EFB5  F001         	goto	i2l1256
  2137   0003DC  0A0E               	xorlw	14	; case 8
  2138   0003DE  B4D8               	btfsc	status,2,c
  2139   0003E0  EF7F  F001         	goto	i2l1238
  2140   0003E4  0A01               	xorlw	1	; case 9
  2141   0003E6  B4D8               	btfsc	status,2,c
  2142   0003E8  EF85  F001         	goto	i2l1240
  2143   0003EC  0A03               	xorlw	3	; case 10
  2144   0003EE  B4D8               	btfsc	status,2,c
  2145   0003F0  EF9D  F001         	goto	i2l1248
  2146   0003F4  0A06               	xorlw	6	; case 12
  2147   0003F6  B4D8               	btfsc	status,2,c
  2148   0003F8  EF79  F001         	goto	i2l1236
  2149   0003FC  0A02               	xorlw	2	; case 14
  2150   0003FE  B4D8               	btfsc	status,2,c
  2151   000400  EF8B  F001         	goto	i2l1242
  2152   000404  0A01               	xorlw	1	; case 15
  2153   000406  B4D8               	btfsc	status,2,c
  2154   000408  EFA9  F001         	goto	i2l1252
  2155   00040C  EFC1  F001         	goto	i2l1260
  2156   000410                     i2l141:
  2157   000410  0012               	return		;funcret
  2158   000412                     __end_of_cont2_decrescente:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _cont2_crescente *****************
  2162 ;; Defined at:
  2163 ;;		line 226 in file "Displays.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2177 ;;      Params:         0       0       0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0
  2179 ;;      Temps:          2       0       0       0       0       0       0
  2180 ;;      Totals:         2       0       0       0       0       0       0
  2181 ;;Total ram usage:        2 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_contador_displays_02
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text20
  2191   000412                     __ptext20:
  2192                           	callstack 0
  2193   000412                     _cont2_crescente:
  2194                           	callstack 24
  2195   000412                     
  2196                           ;Displays.c: 228:     switch (estado_sequencia02)
  2197   000412  EF5F  F002         	goto	i2l1226
  2198   000416                     i2l1196:
  2199                           
  2200                           ;Displays.c: 231:             display4 = 0;
  2201   000416  0E00               	movlw	0
  2202   000418  6E28               	movwf	_display4^0,c
  2203                           
  2204                           ;Displays.c: 232:             estado_sequencia02 = 12;
  2205   00041A  0E0C               	movlw	12
  2206   00041C  6E26               	movwf	_estado_sequencia02^0,c
  2207                           
  2208                           ;Displays.c: 233:             break;
  2209   00041E  EFA0  F002         	goto	i2l122
  2210   000422                     i2l1198:
  2211                           
  2212                           ;Displays.c: 236:             display4 = 12;
  2213   000422  0E0C               	movlw	12
  2214   000424  6E28               	movwf	_display4^0,c
  2215                           
  2216                           ;Displays.c: 237:             estado_sequencia02 = 8;
  2217   000426  0E08               	movlw	8
  2218   000428  6E26               	movwf	_estado_sequencia02^0,c
  2219                           
  2220                           ;Displays.c: 238:             break;
  2221   00042A  EFA0  F002         	goto	i2l122
  2222   00042E                     i2l1200:
  2223                           
  2224                           ;Displays.c: 241:             display4 = 8;
  2225   00042E  0E08               	movlw	8
  2226   000430  6E28               	movwf	_display4^0,c
  2227                           
  2228                           ;Displays.c: 242:             estado_sequencia02 = 9;
  2229   000432  0E09               	movlw	9
  2230   000434  6E26               	movwf	_estado_sequencia02^0,c
  2231                           
  2232                           ;Displays.c: 243:             break;
  2233   000436  EFA0  F002         	goto	i2l122
  2234   00043A                     i2l1202:
  2235                           
  2236                           ;Displays.c: 246:             display4 = 9;
  2237   00043A  0E09               	movlw	9
  2238   00043C  6E28               	movwf	_display4^0,c
  2239                           
  2240                           ;Displays.c: 247:             estado_sequencia02 = 14;
  2241   00043E  0E0E               	movlw	14
  2242   000440  6E26               	movwf	_estado_sequencia02^0,c
  2243                           
  2244                           ;Displays.c: 248:             break;
  2245   000442  EFA0  F002         	goto	i2l122
  2246   000446                     i2l1204:
  2247                           
  2248                           ;Displays.c: 251:             display4 = 14;
  2249   000446  0E0E               	movlw	14
  2250   000448  6E28               	movwf	_display4^0,c
  2251                           
  2252                           ;Displays.c: 252:             estado_sequencia02 = 1;
  2253   00044A  0E01               	movlw	1
  2254   00044C  6E26               	movwf	_estado_sequencia02^0,c
  2255                           
  2256                           ;Displays.c: 253:             break;
  2257   00044E  EFA0  F002         	goto	i2l122
  2258   000452                     i2l1206:
  2259                           
  2260                           ;Displays.c: 256:             display4 = 1;
  2261   000452  0E01               	movlw	1
  2262   000454  6E28               	movwf	_display4^0,c
  2263                           
  2264                           ;Displays.c: 257:             estado_sequencia02 = 5;
  2265   000456  0E05               	movlw	5
  2266   000458  6E26               	movwf	_estado_sequencia02^0,c
  2267                           
  2268                           ;Displays.c: 258:             break;
  2269   00045A  EFA0  F002         	goto	i2l122
  2270   00045E                     i2l1208:
  2271                           
  2272                           ;Displays.c: 261:             display4 = 5;
  2273   00045E  0E05               	movlw	5
  2274   000460  6E28               	movwf	_display4^0,c
  2275                           
  2276                           ;Displays.c: 262:             estado_sequencia02 = 10;
  2277   000462  0E0A               	movlw	10
  2278   000464  6E26               	movwf	_estado_sequencia02^0,c
  2279                           
  2280                           ;Displays.c: 263:             break;
  2281   000466  EFA0  F002         	goto	i2l122
  2282   00046A                     i2l1210:
  2283                           
  2284                           ;Displays.c: 266:             display4 = 10;
  2285   00046A  0E0A               	movlw	10
  2286   00046C  6E28               	movwf	_display4^0,c
  2287                           
  2288                           ;Displays.c: 267:             estado_sequencia02 = 4;
  2289   00046E  0E04               	movlw	4
  2290   000470  6E26               	movwf	_estado_sequencia02^0,c
  2291                           
  2292                           ;Displays.c: 268:             break;
  2293   000472  EFA0  F002         	goto	i2l122
  2294   000476                     i2l1212:
  2295                           
  2296                           ;Displays.c: 271:             display4 = 4;
  2297   000476  0E04               	movlw	4
  2298   000478  6E28               	movwf	_display4^0,c
  2299                           
  2300                           ;Displays.c: 272:             estado_sequencia02 = 15;
  2301   00047A  0E0F               	movlw	15
  2302   00047C  6E26               	movwf	_estado_sequencia02^0,c
  2303                           
  2304                           ;Displays.c: 273:             break;
  2305   00047E  EFA0  F002         	goto	i2l122
  2306   000482                     i2l1214:
  2307                           
  2308                           ;Displays.c: 276:             display4 = 15;
  2309   000482  0E0F               	movlw	15
  2310   000484  6E28               	movwf	_display4^0,c
  2311                           
  2312                           ;Displays.c: 277:             estado_sequencia02 = 3;
  2313   000486  0E03               	movlw	3
  2314   000488  6E26               	movwf	_estado_sequencia02^0,c
  2315                           
  2316                           ;Displays.c: 278:             break;
  2317   00048A  EFA0  F002         	goto	i2l122
  2318   00048E                     i2l1216:
  2319                           
  2320                           ;Displays.c: 281:             display4 = 3;
  2321   00048E  0E03               	movlw	3
  2322   000490  6E28               	movwf	_display4^0,c
  2323                           
  2324                           ;Displays.c: 282:             estado_sequencia02 = 6;
  2325   000492  0E06               	movlw	6
  2326   000494  6E26               	movwf	_estado_sequencia02^0,c
  2327                           
  2328                           ;Displays.c: 283:             break;
  2329   000496  EFA0  F002         	goto	i2l122
  2330   00049A                     i2l1218:
  2331                           
  2332                           ;Displays.c: 286:             display4 = 6;
  2333   00049A  0E06               	movlw	6
  2334   00049C  6E28               	movwf	_display4^0,c
  2335                           
  2336                           ;Displays.c: 287:             estado_sequencia02 = 2;
  2337   00049E  0E02               	movlw	2
  2338   0004A0  6E26               	movwf	_estado_sequencia02^0,c
  2339                           
  2340                           ;Displays.c: 288:             break;
  2341   0004A2  EFA0  F002         	goto	i2l122
  2342   0004A6                     i2l1220:
  2343                           
  2344                           ;Displays.c: 291:             display4 = 2;
  2345   0004A6  0E02               	movlw	2
  2346   0004A8  6E28               	movwf	_display4^0,c
  2347                           
  2348                           ;Displays.c: 292:             estado_sequencia02 = 0;
  2349   0004AA  0E00               	movlw	0
  2350   0004AC  6E26               	movwf	_estado_sequencia02^0,c
  2351                           
  2352                           ;Displays.c: 293:             break;
  2353   0004AE  EFA0  F002         	goto	i2l122
  2354   0004B2                     i2l1222:
  2355                           
  2356                           ;Displays.c: 296:             display4 = 0;
  2357   0004B2  0E00               	movlw	0
  2358   0004B4  6E28               	movwf	_display4^0,c
  2359                           
  2360                           ;Displays.c: 297:             estado_sequencia02 = 0;
  2361   0004B6  0E00               	movlw	0
  2362   0004B8  6E26               	movwf	_estado_sequencia02^0,c
  2363                           
  2364                           ;Displays.c: 298:             break;
  2365   0004BA  EFA0  F002         	goto	i2l122
  2366   0004BE                     i2l1226:
  2367   0004BE  5026               	movf	_estado_sequencia02^0,w,c
  2368   0004C0  6E2D               	movwf	??_cont2_crescente^0,c
  2369   0004C2  6A2E               	clrf	(??_cont2_crescente+1)^0,c
  2370                           
  2371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 1, Range of values is 0 to 0
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            4     3 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378   0004C4  502E               	movf	(??_cont2_crescente+1)^0,w,c
  2379   0004C6  0A00               	xorlw	0	; case 0
  2380   0004C8  B4D8               	btfsc	status,2,c
  2381   0004CA  EF69  F002         	goto	i2l1724
  2382   0004CE  EF59  F002         	goto	i2l1222
  2383   0004D2                     i2l1724:
  2384                           
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 13, Range of values is 0 to 15
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte           40    21 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391   0004D2  502D               	movf	??_cont2_crescente^0,w,c
  2392   0004D4  0A00               	xorlw	0	; case 0
  2393   0004D6  B4D8               	btfsc	status,2,c
  2394   0004D8  EF0B  F002         	goto	i2l1196
  2395   0004DC  0A01               	xorlw	1	; case 1
  2396   0004DE  B4D8               	btfsc	status,2,c
  2397   0004E0  EF29  F002         	goto	i2l1206
  2398   0004E4  0A03               	xorlw	3	; case 2
  2399   0004E6  B4D8               	btfsc	status,2,c
  2400   0004E8  EF53  F002         	goto	i2l1220
  2401   0004EC  0A01               	xorlw	1	; case 3
  2402   0004EE  B4D8               	btfsc	status,2,c
  2403   0004F0  EF47  F002         	goto	i2l1216
  2404   0004F4  0A07               	xorlw	7	; case 4
  2405   0004F6  B4D8               	btfsc	status,2,c
  2406   0004F8  EF3B  F002         	goto	i2l1212
  2407   0004FC  0A01               	xorlw	1	; case 5
  2408   0004FE  B4D8               	btfsc	status,2,c
  2409   000500  EF2F  F002         	goto	i2l1208
  2410   000504  0A03               	xorlw	3	; case 6
  2411   000506  B4D8               	btfsc	status,2,c
  2412   000508  EF4D  F002         	goto	i2l1218
  2413   00050C  0A0E               	xorlw	14	; case 8
  2414   00050E  B4D8               	btfsc	status,2,c
  2415   000510  EF17  F002         	goto	i2l1200
  2416   000514  0A01               	xorlw	1	; case 9
  2417   000516  B4D8               	btfsc	status,2,c
  2418   000518  EF1D  F002         	goto	i2l1202
  2419   00051C  0A03               	xorlw	3	; case 10
  2420   00051E  B4D8               	btfsc	status,2,c
  2421   000520  EF35  F002         	goto	i2l1210
  2422   000524  0A06               	xorlw	6	; case 12
  2423   000526  B4D8               	btfsc	status,2,c
  2424   000528  EF11  F002         	goto	i2l1198
  2425   00052C  0A02               	xorlw	2	; case 14
  2426   00052E  B4D8               	btfsc	status,2,c
  2427   000530  EF23  F002         	goto	i2l1204
  2428   000534  0A01               	xorlw	1	; case 15
  2429   000536  B4D8               	btfsc	status,2,c
  2430   000538  EF41  F002         	goto	i2l1214
  2431   00053C  EF59  F002         	goto	i2l1222
  2432   000540                     i2l122:
  2433   000540  0012               	return		;funcret
  2434   000542                     __end_of_cont2_crescente:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _contador_displays_01 *****************
  2438 ;; Defined at:
  2439 ;;		line 118 in file "main.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2453 ;;      Params:         0       0       0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 1
  2460 ;; This function calls:
  2461 ;;		_cont1_crescente
  2462 ;;		_cont1_decrescente
  2463 ;; This function is called by:
  2464 ;;		_f_timers
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text21
  2469   000A98                     __ptext21:
  2470                           	callstack 0
  2471   000A98                     _contador_displays_01:
  2472                           	callstack 24
  2473   000A98                     
  2474                           ;main.c: 120:     if(!pausa_ou_continua)
  2475   000A98  501C               	movf	_pausa_ou_continua^0,w,c
  2476   000A9A  A4D8               	btfss	status,2,c
  2477   000A9C  EF52  F005         	goto	i2u1_41
  2478   000AA0  EF54  F005         	goto	i2u1_40
  2479   000AA4                     i2u1_41:
  2480   000AA4  EF62  F005         	goto	i2l375
  2481   000AA8                     i2u1_40:
  2482   000AA8                     
  2483                           ;main.c: 121:     {;main.c: 122:         if(!sequencia_1)
  2484   000AA8  5024               	movf	_sequencia_1^0,w,c
  2485   000AAA  A4D8               	btfss	status,2,c
  2486   000AAC  EF5A  F005         	goto	i2u2_41
  2487   000AB0  EF5C  F005         	goto	i2u2_40
  2488   000AB4                     i2u2_41:
  2489   000AB4  EF60  F005         	goto	i2l1334
  2490   000AB8                     i2u2_40:
  2491   000AB8                     
  2492                           ;main.c: 123:             cont1_crescente();
  2493   000AB8  ECBD  F000         	call	_cont1_crescente	;wreg free
  2494   000ABC  EF62  F005         	goto	i2l375
  2495   000AC0                     i2l1334:
  2496                           
  2497                           ;main.c: 126:             cont1_decrescente();
  2498   000AC0  EC09  F000         	call	_cont1_decrescente	;wreg free
  2499   000AC4                     i2l375:
  2500   000AC4  0012               	return		;funcret
  2501   000AC6                     __end_of_contador_displays_01:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _cont1_decrescente *****************
  2505 ;; Defined at:
  2506 ;;		line 137 in file "Displays.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2520 ;;      Params:         0       0       0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0       0       0
  2522 ;;      Temps:          2       0       0       0       0       0       0
  2523 ;;      Totals:         2       0       0       0       0       0       0
  2524 ;;Total ram usage:        2 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_contador_displays_01
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text22
  2534   000012                     __ptext22:
  2535                           	callstack 0
  2536   000012                     _cont1_decrescente:
  2537                           	callstack 24
  2538   000012                     
  2539                           ;Displays.c: 139:     switch (estado_sequencia01) {
  2540   000012  EF7B  F000         	goto	i2l1188
  2541   000016                     i2l1158:
  2542                           
  2543                           ;Displays.c: 141:             display3 = 0;
  2544   000016  0E00               	movlw	0
  2545   000018  6E29               	movwf	_display3^0,c
  2546                           
  2547                           ;Displays.c: 142:             display2 = 0;
  2548   00001A  0E00               	movlw	0
  2549   00001C  6E2A               	movwf	_display2^0,c
  2550                           
  2551                           ;Displays.c: 143:             estado_sequencia01 = 82;
  2552   00001E  0E52               	movlw	82
  2553   000020  6E27               	movwf	_estado_sequencia01^0,c
  2554                           
  2555                           ;Displays.c: 144:             break;
  2556   000022  EFBC  F000         	goto	i2l103
  2557   000026                     i2l1160:
  2558                           
  2559                           ;Displays.c: 147:             display3 = 3;
  2560   000026  0E03               	movlw	3
  2561   000028  6E29               	movwf	_display3^0,c
  2562                           
  2563                           ;Displays.c: 148:             display2 = 6;
  2564   00002A  0E06               	movlw	6
  2565   00002C  6E2A               	movwf	_display2^0,c
  2566                           
  2567                           ;Displays.c: 149:             estado_sequencia01 = 0;
  2568   00002E  0E00               	movlw	0
  2569   000030  6E27               	movwf	_estado_sequencia01^0,c
  2570                           
  2571                           ;Displays.c: 150:             break;
  2572   000032  EFBC  F000         	goto	i2l103
  2573   000036                     i2l1162:
  2574                           
  2575                           ;Displays.c: 153:             display3 = 6;
  2576   000036  0E06               	movlw	6
  2577   000038  6E29               	movwf	_display3^0,c
  2578                           
  2579                           ;Displays.c: 154:             display2 = 4;
  2580   00003A  0E04               	movlw	4
  2581   00003C  6E2A               	movwf	_display2^0,c
  2582                           
  2583                           ;Displays.c: 155:             estado_sequencia01 = 63;
  2584   00003E  0E3F               	movlw	63
  2585   000040  6E27               	movwf	_estado_sequencia01^0,c
  2586                           
  2587                           ;Displays.c: 156:             break;
  2588   000042  EFBC  F000         	goto	i2l103
  2589   000046                     i2l1164:
  2590                           
  2591                           ;Displays.c: 159:             display3 = 5;
  2592   000046  0E05               	movlw	5
  2593   000048  6E29               	movwf	_display3^0,c
  2594                           
  2595                           ;Displays.c: 160:             display2 = 1;
  2596   00004A  0E01               	movlw	1
  2597   00004C  6E2A               	movwf	_display2^0,c
  2598                           
  2599                           ;Displays.c: 161:             estado_sequencia01 = 46;
  2600   00004E  0E2E               	movlw	46
  2601   000050  6E27               	movwf	_estado_sequencia01^0,c
  2602                           
  2603                           ;Displays.c: 162:             break;
  2604   000052  EFBC  F000         	goto	i2l103
  2605   000056                     i2l1166:
  2606                           
  2607                           ;Displays.c: 165:             display3 = 5;
  2608   000056  0E05               	movlw	5
  2609   000058  6E29               	movwf	_display3^0,c
  2610                           
  2611                           ;Displays.c: 166:             display2 = 2;
  2612   00005A  0E02               	movlw	2
  2613   00005C  6E2A               	movwf	_display2^0,c
  2614                           
  2615                           ;Displays.c: 167:             estado_sequencia01 = 15;
  2616   00005E  0E0F               	movlw	15
  2617   000060  6E27               	movwf	_estado_sequencia01^0,c
  2618                           
  2619                           ;Displays.c: 168:             break;
  2620   000062  EFBC  F000         	goto	i2l103
  2621   000066                     i2l1168:
  2622                           
  2623                           ;Displays.c: 171:             display3 = 0;
  2624   000066  0E00               	movlw	0
  2625   000068  6E29               	movwf	_display3^0,c
  2626                           
  2627                           ;Displays.c: 172:             display2 = 6;
  2628   00006A  0E06               	movlw	6
  2629   00006C  6E2A               	movwf	_display2^0,c
  2630                           
  2631                           ;Displays.c: 173:             estado_sequencia01 = 25;
  2632   00006E  0E19               	movlw	25
  2633   000070  6E27               	movwf	_estado_sequencia01^0,c
  2634                           
  2635                           ;Displays.c: 174:             break;
  2636   000072  EFBC  F000         	goto	i2l103
  2637   000076                     i2l1170:
  2638                           
  2639                           ;Displays.c: 177:             display3 = 2;
  2640   000076  0E02               	movlw	2
  2641   000078  6E29               	movwf	_display3^0,c
  2642                           
  2643                           ;Displays.c: 178:             display2 = 1;
  2644   00007A  0E01               	movlw	1
  2645   00007C  6E2A               	movwf	_display2^0,c
  2646                           
  2647                           ;Displays.c: 179:             estado_sequencia01 = 60;
  2648   00007E  0E3C               	movlw	60
  2649   000080  6E27               	movwf	_estado_sequencia01^0,c
  2650                           
  2651                           ;Displays.c: 180:             break;
  2652   000082  EFBC  F000         	goto	i2l103
  2653   000086                     i2l1172:
  2654                           
  2655                           ;Displays.c: 183:             display3 = 4;
  2656   000086  0E04               	movlw	4
  2657   000088  6E29               	movwf	_display3^0,c
  2658                           
  2659                           ;Displays.c: 184:             display2 = 6;
  2660   00008A  0E06               	movlw	6
  2661   00008C  6E2A               	movwf	_display2^0,c
  2662                           
  2663                           ;Displays.c: 185:             estado_sequencia01 = 12;
  2664   00008E  0E0C               	movlw	12
  2665   000090  6E27               	movwf	_estado_sequencia01^0,c
  2666                           
  2667                           ;Displays.c: 186:             break;
  2668   000092  EFBC  F000         	goto	i2l103
  2669   000096                     i2l1174:
  2670                           
  2671                           ;Displays.c: 189:             display3 = 7;
  2672   000096  0E07               	movlw	7
  2673   000098  6E29               	movwf	_display3^0,c
  2674                           
  2675                           ;Displays.c: 190:             display2 = 4;
  2676   00009A  0E04               	movlw	4
  2677   00009C  6E2A               	movwf	_display2^0,c
  2678                           
  2679                           ;Displays.c: 191:             estado_sequencia01 = 64;
  2680   00009E  0E40               	movlw	64
  2681   0000A0  6E27               	movwf	_estado_sequencia01^0,c
  2682                           
  2683                           ;Displays.c: 192:             break;
  2684   0000A2  EFBC  F000         	goto	i2l103
  2685   0000A6                     i2l1176:
  2686                           
  2687                           ;Displays.c: 195:             display3 = 4;
  2688   0000A6  0E04               	movlw	4
  2689   0000A8  6E29               	movwf	_display3^0,c
  2690                           
  2691                           ;Displays.c: 196:             display2 = 7;
  2692   0000AA  0E07               	movlw	7
  2693   0000AC  6E2A               	movwf	_display2^0,c
  2694                           
  2695                           ;Displays.c: 197:             estado_sequencia01 = 47;
  2696   0000AE  0E2F               	movlw	47
  2697   0000B0  6E27               	movwf	_estado_sequencia01^0,c
  2698                           
  2699                           ;Displays.c: 198:             break;
  2700   0000B2  EFBC  F000         	goto	i2l103
  2701   0000B6                     i2l1178:
  2702                           
  2703                           ;Displays.c: 201:             display3 = 8;
  2704   0000B6  0E08               	movlw	8
  2705   0000B8  6E29               	movwf	_display3^0,c
  2706                           
  2707                           ;Displays.c: 202:             display2 = 6;
  2708   0000BA  0E06               	movlw	6
  2709   0000BC  6E2A               	movwf	_display2^0,c
  2710                           
  2711                           ;Displays.c: 203:             estado_sequencia01 = 74;
  2712   0000BE  0E4A               	movlw	74
  2713   0000C0  6E27               	movwf	_estado_sequencia01^0,c
  2714                           
  2715                           ;Displays.c: 204:             break;
  2716   0000C2  EFBC  F000         	goto	i2l103
  2717   0000C6                     i2l1180:
  2718                           
  2719                           ;Displays.c: 207:             display3 = 8;
  2720   0000C6  0E08               	movlw	8
  2721   0000C8  6E29               	movwf	_display3^0,c
  2722                           
  2723                           ;Displays.c: 208:             display2 = 2;
  2724   0000CA  0E02               	movlw	2
  2725   0000CC  6E2A               	movwf	_display2^0,c
  2726                           
  2727                           ;Displays.c: 209:             estado_sequencia01 = 68;
  2728   0000CE  0E44               	movlw	68
  2729   0000D0  6E27               	movwf	_estado_sequencia01^0,c
  2730                           
  2731                           ;Displays.c: 210:             break;
  2732   0000D2  EFBC  F000         	goto	i2l103
  2733   0000D6                     i2l1182:
  2734                           
  2735                           ;Displays.c: 213:             display3 = 2;
  2736   0000D6  0E02               	movlw	2
  2737   0000D8  6E29               	movwf	_display3^0,c
  2738                           
  2739                           ;Displays.c: 214:             display2 = 8;
  2740   0000DA  0E08               	movlw	8
  2741   0000DC  6E2A               	movwf	_display2^0,c
  2742                           
  2743                           ;Displays.c: 215:             estado_sequencia01 = 28;
  2744   0000DE  0E1C               	movlw	28
  2745   0000E0  6E27               	movwf	_estado_sequencia01^0,c
  2746                           
  2747                           ;Displays.c: 216:             break;
  2748   0000E2  EFBC  F000         	goto	i2l103
  2749   0000E6                     i2l1184:
  2750                           
  2751                           ;Displays.c: 219:             display3 = 0;
  2752   0000E6  0E00               	movlw	0
  2753   0000E8  6E29               	movwf	_display3^0,c
  2754                           
  2755                           ;Displays.c: 220:             display2 = 0;
  2756   0000EA  0E00               	movlw	0
  2757   0000EC  6E2A               	movwf	_display2^0,c
  2758                           
  2759                           ;Displays.c: 221:             estado_sequencia01 = 0;
  2760   0000EE  0E00               	movlw	0
  2761   0000F0  6E27               	movwf	_estado_sequencia01^0,c
  2762                           
  2763                           ;Displays.c: 222:             break;
  2764   0000F2  EFBC  F000         	goto	i2l103
  2765   0000F6                     i2l1188:
  2766   0000F6  5027               	movf	_estado_sequencia01^0,w,c
  2767   0000F8  6E2D               	movwf	??_cont1_decrescente^0,c
  2768   0000FA  6A2E               	clrf	(??_cont1_decrescente+1)^0,c
  2769                           
  2770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2771                           ; Switch size 1, requested type "simple"
  2772                           ; Number of cases is 1, Range of values is 0 to 0
  2773                           ; switch strategies available:
  2774                           ; Name         Instructions Cycles
  2775                           ; simple_byte            4     3 (average)
  2776                           ;	Chosen strategy is simple_byte
  2777   0000FC  502E               	movf	(??_cont1_decrescente+1)^0,w,c
  2778   0000FE  0A00               	xorlw	0	; case 0
  2779   000100  B4D8               	btfsc	status,2,c
  2780   000102  EF85  F000         	goto	i2l1726
  2781   000106  EF73  F000         	goto	i2l1184
  2782   00010A                     i2l1726:
  2783                           
  2784                           ; Switch size 1, requested type "simple"
  2785                           ; Number of cases is 13, Range of values is 0 to 82
  2786                           ; switch strategies available:
  2787                           ; Name         Instructions Cycles
  2788                           ; simple_byte           40    21 (average)
  2789                           ;	Chosen strategy is simple_byte
  2790   00010A  502D               	movf	??_cont1_decrescente^0,w,c
  2791   00010C  0A00               	xorlw	0	; case 0
  2792   00010E  B4D8               	btfsc	status,2,c
  2793   000110  EF0B  F000         	goto	i2l1158
  2794   000114  0A0C               	xorlw	12	; case 12
  2795   000116  B4D8               	btfsc	status,2,c
  2796   000118  EF3B  F000         	goto	i2l1170
  2797   00011C  0A03               	xorlw	3	; case 15
  2798   00011E  B4D8               	btfsc	status,2,c
  2799   000120  EF23  F000         	goto	i2l1164
  2800   000124  0A16               	xorlw	22	; case 25
  2801   000126  B4D8               	btfsc	status,2,c
  2802   000128  EF2B  F000         	goto	i2l1166
  2803   00012C  0A05               	xorlw	5	; case 28
  2804   00012E  B4D8               	btfsc	status,2,c
  2805   000130  EF63  F000         	goto	i2l1180
  2806   000134  0A32               	xorlw	50	; case 46
  2807   000136  B4D8               	btfsc	status,2,c
  2808   000138  EF1B  F000         	goto	i2l1162
  2809   00013C  0A01               	xorlw	1	; case 47
  2810   00013E  B4D8               	btfsc	status,2,c
  2811   000140  EF4B  F000         	goto	i2l1174
  2812   000144  0A13               	xorlw	19	; case 60
  2813   000146  B4D8               	btfsc	status,2,c
  2814   000148  EF33  F000         	goto	i2l1168
  2815   00014C  0A03               	xorlw	3	; case 63
  2816   00014E  B4D8               	btfsc	status,2,c
  2817   000150  EF13  F000         	goto	i2l1160
  2818   000154  0A7F               	xorlw	127	; case 64
  2819   000156  B4D8               	btfsc	status,2,c
  2820   000158  EF43  F000         	goto	i2l1172
  2821   00015C  0A04               	xorlw	4	; case 68
  2822   00015E  B4D8               	btfsc	status,2,c
  2823   000160  EF5B  F000         	goto	i2l1178
  2824   000164  0A0E               	xorlw	14	; case 74
  2825   000166  B4D8               	btfsc	status,2,c
  2826   000168  EF53  F000         	goto	i2l1176
  2827   00016C  0A18               	xorlw	24	; case 82
  2828   00016E  B4D8               	btfsc	status,2,c
  2829   000170  EF6B  F000         	goto	i2l1182
  2830   000174  EF73  F000         	goto	i2l1184
  2831   000178                     i2l103:
  2832   000178  0012               	return		;funcret
  2833   00017A                     __end_of_cont1_decrescente:
  2834                           	callstack 0
  2835                           
  2836 ;; *************** function _cont1_crescente *****************
  2837 ;; Defined at:
  2838 ;;		line 48 in file "Displays.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         0       0       0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0
  2854 ;;      Temps:          2       0       0       0       0       0       0
  2855 ;;      Totals:         2       0       0       0       0       0       0
  2856 ;;Total ram usage:        2 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_contador_displays_01
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text23
  2866   00017A                     __ptext23:
  2867                           	callstack 0
  2868   00017A                     _cont1_crescente:
  2869                           	callstack 24
  2870   00017A                     
  2871                           ;Displays.c: 50:     switch (estado_sequencia01) {
  2872   00017A  EF2F  F001         	goto	i2l1150
  2873   00017E                     i2l1120:
  2874                           
  2875                           ;Displays.c: 52:             display3 = 0;
  2876   00017E  0E00               	movlw	0
  2877   000180  6E29               	movwf	_display3^0,c
  2878                           
  2879                           ;Displays.c: 53:             display2 = 0;
  2880   000182  0E00               	movlw	0
  2881   000184  6E2A               	movwf	_display2^0,c
  2882                           
  2883                           ;Displays.c: 54:             estado_sequencia01 = 63;
  2884   000186  0E3F               	movlw	63
  2885   000188  6E27               	movwf	_estado_sequencia01^0,c
  2886                           
  2887                           ;Displays.c: 55:             break;
  2888   00018A  EF70  F001         	goto	i2l84
  2889   00018E                     i2l1122:
  2890                           
  2891                           ;Displays.c: 58:             display3 = 3;
  2892   00018E  0E03               	movlw	3
  2893   000190  6E29               	movwf	_display3^0,c
  2894                           
  2895                           ;Displays.c: 59:             display2 = 6;
  2896   000192  0E06               	movlw	6
  2897   000194  6E2A               	movwf	_display2^0,c
  2898                           
  2899                           ;Displays.c: 60:             estado_sequencia01 = 46;
  2900   000196  0E2E               	movlw	46
  2901   000198  6E27               	movwf	_estado_sequencia01^0,c
  2902                           
  2903                           ;Displays.c: 61:             break;
  2904   00019A  EF70  F001         	goto	i2l84
  2905   00019E                     i2l1124:
  2906                           
  2907                           ;Displays.c: 64:             display3 = 6;
  2908   00019E  0E06               	movlw	6
  2909   0001A0  6E29               	movwf	_display3^0,c
  2910                           
  2911                           ;Displays.c: 65:             display2 = 4;
  2912   0001A2  0E04               	movlw	4
  2913   0001A4  6E2A               	movwf	_display2^0,c
  2914                           
  2915                           ;Displays.c: 66:             estado_sequencia01 = 15;
  2916   0001A6  0E0F               	movlw	15
  2917   0001A8  6E27               	movwf	_estado_sequencia01^0,c
  2918                           
  2919                           ;Displays.c: 67:             break;
  2920   0001AA  EF70  F001         	goto	i2l84
  2921   0001AE                     i2l1126:
  2922                           
  2923                           ;Displays.c: 70:             display3 = 5;
  2924   0001AE  0E05               	movlw	5
  2925   0001B0  6E29               	movwf	_display3^0,c
  2926                           
  2927                           ;Displays.c: 71:             display2 = 1;
  2928   0001B2  0E01               	movlw	1
  2929   0001B4  6E2A               	movwf	_display2^0,c
  2930                           
  2931                           ;Displays.c: 72:             estado_sequencia01 = 25;
  2932   0001B6  0E19               	movlw	25
  2933   0001B8  6E27               	movwf	_estado_sequencia01^0,c
  2934                           
  2935                           ;Displays.c: 73:             break;
  2936   0001BA  EF70  F001         	goto	i2l84
  2937   0001BE                     i2l1128:
  2938                           
  2939                           ;Displays.c: 76:             display3 = 5;
  2940   0001BE  0E05               	movlw	5
  2941   0001C0  6E29               	movwf	_display3^0,c
  2942                           
  2943                           ;Displays.c: 77:             display2 = 2;
  2944   0001C2  0E02               	movlw	2
  2945   0001C4  6E2A               	movwf	_display2^0,c
  2946                           
  2947                           ;Displays.c: 78:             estado_sequencia01 = 60;
  2948   0001C6  0E3C               	movlw	60
  2949   0001C8  6E27               	movwf	_estado_sequencia01^0,c
  2950                           
  2951                           ;Displays.c: 79:             break;
  2952   0001CA  EF70  F001         	goto	i2l84
  2953   0001CE                     i2l1130:
  2954                           
  2955                           ;Displays.c: 82:             display3 = 0;
  2956   0001CE  0E00               	movlw	0
  2957   0001D0  6E29               	movwf	_display3^0,c
  2958                           
  2959                           ;Displays.c: 83:             display2 = 6;
  2960   0001D2  0E06               	movlw	6
  2961   0001D4  6E2A               	movwf	_display2^0,c
  2962                           
  2963                           ;Displays.c: 84:             estado_sequencia01 = 12;
  2964   0001D6  0E0C               	movlw	12
  2965   0001D8  6E27               	movwf	_estado_sequencia01^0,c
  2966                           
  2967                           ;Displays.c: 85:             break;
  2968   0001DA  EF70  F001         	goto	i2l84
  2969   0001DE                     i2l1132:
  2970                           
  2971                           ;Displays.c: 88:             display3 = 2;
  2972   0001DE  0E02               	movlw	2
  2973   0001E0  6E29               	movwf	_display3^0,c
  2974                           
  2975                           ;Displays.c: 89:             display2 = 1;
  2976   0001E2  0E01               	movlw	1
  2977   0001E4  6E2A               	movwf	_display2^0,c
  2978                           
  2979                           ;Displays.c: 90:             estado_sequencia01 = 64;
  2980   0001E6  0E40               	movlw	64
  2981   0001E8  6E27               	movwf	_estado_sequencia01^0,c
  2982                           
  2983                           ;Displays.c: 91:             break;
  2984   0001EA  EF70  F001         	goto	i2l84
  2985   0001EE                     i2l1134:
  2986                           
  2987                           ;Displays.c: 94:             display3 = 4;
  2988   0001EE  0E04               	movlw	4
  2989   0001F0  6E29               	movwf	_display3^0,c
  2990                           
  2991                           ;Displays.c: 95:             display2 = 6;
  2992   0001F2  0E06               	movlw	6
  2993   0001F4  6E2A               	movwf	_display2^0,c
  2994                           
  2995                           ;Displays.c: 96:             estado_sequencia01 = 47;
  2996   0001F6  0E2F               	movlw	47
  2997   0001F8  6E27               	movwf	_estado_sequencia01^0,c
  2998                           
  2999                           ;Displays.c: 97:             break;
  3000   0001FA  EF70  F001         	goto	i2l84
  3001   0001FE                     i2l1136:
  3002                           
  3003                           ;Displays.c: 100:             display3 = 7;
  3004   0001FE  0E07               	movlw	7
  3005   000200  6E29               	movwf	_display3^0,c
  3006                           
  3007                           ;Displays.c: 101:             display2 = 4;
  3008   000202  0E04               	movlw	4
  3009   000204  6E2A               	movwf	_display2^0,c
  3010                           
  3011                           ;Displays.c: 102:             estado_sequencia01 = 74;
  3012   000206  0E4A               	movlw	74
  3013   000208  6E27               	movwf	_estado_sequencia01^0,c
  3014                           
  3015                           ;Displays.c: 103:             break;
  3016   00020A  EF70  F001         	goto	i2l84
  3017   00020E                     i2l1138:
  3018                           
  3019                           ;Displays.c: 106:             display3 = 4;
  3020   00020E  0E04               	movlw	4
  3021   000210  6E29               	movwf	_display3^0,c
  3022                           
  3023                           ;Displays.c: 107:             display2 = 7;
  3024   000212  0E07               	movlw	7
  3025   000214  6E2A               	movwf	_display2^0,c
  3026                           
  3027                           ;Displays.c: 108:             estado_sequencia01 = 68;
  3028   000216  0E44               	movlw	68
  3029   000218  6E27               	movwf	_estado_sequencia01^0,c
  3030                           
  3031                           ;Displays.c: 109:             break;
  3032   00021A  EF70  F001         	goto	i2l84
  3033   00021E                     i2l1140:
  3034                           
  3035                           ;Displays.c: 112:             display3 = 8;
  3036   00021E  0E08               	movlw	8
  3037   000220  6E29               	movwf	_display3^0,c
  3038                           
  3039                           ;Displays.c: 113:             display2 = 6;
  3040   000222  0E06               	movlw	6
  3041   000224  6E2A               	movwf	_display2^0,c
  3042                           
  3043                           ;Displays.c: 114:             estado_sequencia01 = 28;
  3044   000226  0E1C               	movlw	28
  3045   000228  6E27               	movwf	_estado_sequencia01^0,c
  3046                           
  3047                           ;Displays.c: 115:             break;
  3048   00022A  EF70  F001         	goto	i2l84
  3049   00022E                     i2l1142:
  3050                           
  3051                           ;Displays.c: 118:             display3 = 8;
  3052   00022E  0E08               	movlw	8
  3053   000230  6E29               	movwf	_display3^0,c
  3054                           
  3055                           ;Displays.c: 119:             display2 = 2;
  3056   000232  0E02               	movlw	2
  3057   000234  6E2A               	movwf	_display2^0,c
  3058                           
  3059                           ;Displays.c: 120:             estado_sequencia01 = 82;
  3060   000236  0E52               	movlw	82
  3061   000238  6E27               	movwf	_estado_sequencia01^0,c
  3062                           
  3063                           ;Displays.c: 121:             break;
  3064   00023A  EF70  F001         	goto	i2l84
  3065   00023E                     i2l1144:
  3066                           
  3067                           ;Displays.c: 124:             display3 = 2;
  3068   00023E  0E02               	movlw	2
  3069   000240  6E29               	movwf	_display3^0,c
  3070                           
  3071                           ;Displays.c: 125:             display2 = 8;
  3072   000242  0E08               	movlw	8
  3073   000244  6E2A               	movwf	_display2^0,c
  3074                           
  3075                           ;Displays.c: 126:             estado_sequencia01 = 0;
  3076   000246  0E00               	movlw	0
  3077   000248  6E27               	movwf	_estado_sequencia01^0,c
  3078                           
  3079                           ;Displays.c: 127:             break;
  3080   00024A  EF70  F001         	goto	i2l84
  3081   00024E                     i2l1146:
  3082                           
  3083                           ;Displays.c: 130:             display3 = 0;
  3084   00024E  0E00               	movlw	0
  3085   000250  6E29               	movwf	_display3^0,c
  3086                           
  3087                           ;Displays.c: 131:             display2 = 0;
  3088   000252  0E00               	movlw	0
  3089   000254  6E2A               	movwf	_display2^0,c
  3090                           
  3091                           ;Displays.c: 132:             estado_sequencia01 = 0;
  3092   000256  0E00               	movlw	0
  3093   000258  6E27               	movwf	_estado_sequencia01^0,c
  3094                           
  3095                           ;Displays.c: 133:             break;
  3096   00025A  EF70  F001         	goto	i2l84
  3097   00025E                     i2l1150:
  3098   00025E  5027               	movf	_estado_sequencia01^0,w,c
  3099   000260  6E2D               	movwf	??_cont1_crescente^0,c
  3100   000262  6A2E               	clrf	(??_cont1_crescente+1)^0,c
  3101                           
  3102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3103                           ; Switch size 1, requested type "simple"
  3104                           ; Number of cases is 1, Range of values is 0 to 0
  3105                           ; switch strategies available:
  3106                           ; Name         Instructions Cycles
  3107                           ; simple_byte            4     3 (average)
  3108                           ;	Chosen strategy is simple_byte
  3109   000264  502E               	movf	(??_cont1_crescente+1)^0,w,c
  3110   000266  0A00               	xorlw	0	; case 0
  3111   000268  B4D8               	btfsc	status,2,c
  3112   00026A  EF39  F001         	goto	i2l1728
  3113   00026E  EF27  F001         	goto	i2l1146
  3114   000272                     i2l1728:
  3115                           
  3116                           ; Switch size 1, requested type "simple"
  3117                           ; Number of cases is 13, Range of values is 0 to 82
  3118                           ; switch strategies available:
  3119                           ; Name         Instructions Cycles
  3120                           ; simple_byte           40    21 (average)
  3121                           ;	Chosen strategy is simple_byte
  3122   000272  502D               	movf	??_cont1_crescente^0,w,c
  3123   000274  0A00               	xorlw	0	; case 0
  3124   000276  B4D8               	btfsc	status,2,c
  3125   000278  EFBF  F000         	goto	i2l1120
  3126   00027C  0A0C               	xorlw	12	; case 12
  3127   00027E  B4D8               	btfsc	status,2,c
  3128   000280  EFEF  F000         	goto	i2l1132
  3129   000284  0A03               	xorlw	3	; case 15
  3130   000286  B4D8               	btfsc	status,2,c
  3131   000288  EFD7  F000         	goto	i2l1126
  3132   00028C  0A16               	xorlw	22	; case 25
  3133   00028E  B4D8               	btfsc	status,2,c
  3134   000290  EFDF  F000         	goto	i2l1128
  3135   000294  0A05               	xorlw	5	; case 28
  3136   000296  B4D8               	btfsc	status,2,c
  3137   000298  EF17  F001         	goto	i2l1142
  3138   00029C  0A32               	xorlw	50	; case 46
  3139   00029E  B4D8               	btfsc	status,2,c
  3140   0002A0  EFCF  F000         	goto	i2l1124
  3141   0002A4  0A01               	xorlw	1	; case 47
  3142   0002A6  B4D8               	btfsc	status,2,c
  3143   0002A8  EFFF  F000         	goto	i2l1136
  3144   0002AC  0A13               	xorlw	19	; case 60
  3145   0002AE  B4D8               	btfsc	status,2,c
  3146   0002B0  EFE7  F000         	goto	i2l1130
  3147   0002B4  0A03               	xorlw	3	; case 63
  3148   0002B6  B4D8               	btfsc	status,2,c
  3149   0002B8  EFC7  F000         	goto	i2l1122
  3150   0002BC  0A7F               	xorlw	127	; case 64
  3151   0002BE  B4D8               	btfsc	status,2,c
  3152   0002C0  EFF7  F000         	goto	i2l1134
  3153   0002C4  0A04               	xorlw	4	; case 68
  3154   0002C6  B4D8               	btfsc	status,2,c
  3155   0002C8  EF0F  F001         	goto	i2l1140
  3156   0002CC  0A0E               	xorlw	14	; case 74
  3157   0002CE  B4D8               	btfsc	status,2,c
  3158   0002D0  EF07  F001         	goto	i2l1138
  3159   0002D4  0A18               	xorlw	24	; case 82
  3160   0002D6  B4D8               	btfsc	status,2,c
  3161   0002D8  EF1F  F001         	goto	i2l1144
  3162   0002DC  EF27  F001         	goto	i2l1146
  3163   0002E0                     i2l84:
  3164   0002E0  0012               	return		;funcret
  3165   0002E2                     __end_of_cont1_crescente:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _Read_AD *****************
  3169 ;; Defined at:
  3170 ;;		line 86 in file "main.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3184 ;;      Params:         0       0       0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0
  3186 ;;      Temps:          2       0       0       0       0       0       0
  3187 ;;      Totals:         2       0       0       0       0       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_f_timers
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text24
  3198   000886                     __ptext24:
  3199                           	callstack 0
  3200   000886                     _Read_AD:
  3201                           	callstack 25
  3202   000886                     
  3203                           ;main.c: 88:     static uint8_t Valor_AD0 = 0;;main.c: 90:     Valor_AD0 = AD_data[0] >>
      +                           6;
  3204   000886  441D               	rlncf	_AD_data^0,w,c
  3205   000888  46E8               	rlncf	wreg,f,c
  3206   00088A  0B03               	andlw	3
  3207   00088C  6E22               	movwf	Read_AD@Valor_AD0^0,c
  3208                           
  3209                           ;main.c: 92:     switch(Valor_AD0)
  3210   00088E  EF61  F004         	goto	i2l1400
  3211   000892                     i2l1390:
  3212                           
  3213                           ;main.c: 95:             sequencia_1 = 0; sequencia_2 = 0;
  3214   000892  0E00               	movlw	0
  3215   000894  6E24               	movwf	_sequencia_1^0,c
  3216   000896  0E00               	movlw	0
  3217   000898  6E23               	movwf	_sequencia_2^0,c
  3218                           
  3219                           ;main.c: 96:             break;
  3220   00089A  EF7E  F004         	goto	i2l366
  3221   00089E                     i2l1392:
  3222                           
  3223                           ;main.c: 99:             sequencia_1 = 0; sequencia_2 = 1;
  3224   00089E  0E00               	movlw	0
  3225   0008A0  6E24               	movwf	_sequencia_1^0,c
  3226   0008A2  0E01               	movlw	1
  3227   0008A4  6E23               	movwf	_sequencia_2^0,c
  3228                           
  3229                           ;main.c: 100:             break;
  3230   0008A6  EF7E  F004         	goto	i2l366
  3231   0008AA                     i2l1394:
  3232                           
  3233                           ;main.c: 103:             sequencia_1 = 1; sequencia_2 = 0;
  3234   0008AA  0E01               	movlw	1
  3235   0008AC  6E24               	movwf	_sequencia_1^0,c
  3236   0008AE  0E00               	movlw	0
  3237   0008B0  6E23               	movwf	_sequencia_2^0,c
  3238                           
  3239                           ;main.c: 104:             break;
  3240   0008B2  EF7E  F004         	goto	i2l366
  3241   0008B6                     i2l1396:
  3242                           
  3243                           ;main.c: 107:             sequencia_1 = 1; sequencia_2 = 1;
  3244   0008B6  0E01               	movlw	1
  3245   0008B8  6E24               	movwf	_sequencia_1^0,c
  3246   0008BA  0E01               	movlw	1
  3247   0008BC  6E23               	movwf	_sequencia_2^0,c
  3248                           
  3249                           ;main.c: 108:             break;
  3250   0008BE  EF7E  F004         	goto	i2l366
  3251   0008C2                     i2l1400:
  3252   0008C2  5022               	movf	Read_AD@Valor_AD0^0,w,c
  3253   0008C4  6E2D               	movwf	??_Read_AD^0,c
  3254   0008C6  6A2E               	clrf	(??_Read_AD+1)^0,c
  3255                           
  3256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3257                           ; Switch size 1, requested type "simple"
  3258                           ; Number of cases is 1, Range of values is 0 to 0
  3259                           ; switch strategies available:
  3260                           ; Name         Instructions Cycles
  3261                           ; simple_byte            4     3 (average)
  3262                           ;	Chosen strategy is simple_byte
  3263   0008C8  502E               	movf	(??_Read_AD+1)^0,w,c
  3264   0008CA  0A00               	xorlw	0	; case 0
  3265   0008CC  B4D8               	btfsc	status,2,c
  3266   0008CE  EF6B  F004         	goto	i2l1730
  3267   0008D2  EF7E  F004         	goto	i2l366
  3268   0008D6                     i2l1730:
  3269                           
  3270                           ; Switch size 1, requested type "simple"
  3271                           ; Number of cases is 4, Range of values is 0 to 3
  3272                           ; switch strategies available:
  3273                           ; Name         Instructions Cycles
  3274                           ; simple_byte           13     7 (average)
  3275                           ;	Chosen strategy is simple_byte
  3276   0008D6  502D               	movf	??_Read_AD^0,w,c
  3277   0008D8  0A00               	xorlw	0	; case 0
  3278   0008DA  B4D8               	btfsc	status,2,c
  3279   0008DC  EF49  F004         	goto	i2l1390
  3280   0008E0  0A01               	xorlw	1	; case 1
  3281   0008E2  B4D8               	btfsc	status,2,c
  3282   0008E4  EF4F  F004         	goto	i2l1392
  3283   0008E8  0A03               	xorlw	3	; case 2
  3284   0008EA  B4D8               	btfsc	status,2,c
  3285   0008EC  EF55  F004         	goto	i2l1394
  3286   0008F0  0A01               	xorlw	1	; case 3
  3287   0008F2  B4D8               	btfsc	status,2,c
  3288   0008F4  EF5B  F004         	goto	i2l1396
  3289   0008F8  EF7E  F004         	goto	i2l366
  3290   0008FC                     i2l366:
  3291   0008FC  0012               	return		;funcret
  3292   0008FE                     __end_of_Read_AD:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _LED_State *****************
  3296 ;; Defined at:
  3297 ;;		line 296 in file "main.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3311 ;;      Params:         0       0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_f_timers
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text25
  3325   000800                     __ptext25:
  3326                           	callstack 0
  3327   000800                     _LED_State:
  3328                           	callstack 25
  3329   000800                     
  3330                           ;main.c: 298:     if(pausa_ou_continua)
  3331   000800  501C               	movf	_pausa_ou_continua^0,w,c
  3332   000802  B4D8               	btfsc	status,2,c
  3333   000804  EF06  F004         	goto	i2u13_41
  3334   000808  EF08  F004         	goto	i2u13_40
  3335   00080C                     i2u13_41:
  3336   00080C  EF0B  F004         	goto	i2l428
  3337   000810                     i2u13_40:
  3338   000810                     
  3339                           ;main.c: 299:     {;main.c: 300:        LATB7 = 1;
  3340   000810  8E8A               	bsf	3978,7,c	;volatile
  3341                           
  3342                           ;main.c: 301:     }
  3343   000812  EF0C  F004         	goto	i2l1372
  3344   000816                     i2l428:
  3345                           
  3346                           ;main.c: 304:     {;main.c: 305:         LATB7 = 0;
  3347   000816  9E8A               	bcf	3978,7,c	;volatile
  3348   000818                     i2l1372:
  3349                           
  3350                           ;main.c: 308:     if(!sequencia_1)
  3351   000818  5024               	movf	_sequencia_1^0,w,c
  3352   00081A  A4D8               	btfss	status,2,c
  3353   00081C  EF12  F004         	goto	i2u14_41
  3354   000820  EF14  F004         	goto	i2u14_40
  3355   000824                     i2u14_41:
  3356   000824  EF17  F004         	goto	i2l430
  3357   000828                     i2u14_40:
  3358   000828                     
  3359                           ;main.c: 309:     {;main.c: 310:         LATB6 = 1;
  3360   000828  8C8A               	bsf	3978,6,c	;volatile
  3361                           
  3362                           ;main.c: 311:     }
  3363   00082A  EF18  F004         	goto	i2l1376
  3364   00082E                     i2l430:
  3365                           
  3366                           ;main.c: 314:     {;main.c: 315:         LATB6 = 0;
  3367   00082E  9C8A               	bcf	3978,6,c	;volatile
  3368   000830                     i2l1376:
  3369                           
  3370                           ;main.c: 318:     if(!sequencia_2)
  3371   000830  5023               	movf	_sequencia_2^0,w,c
  3372   000832  A4D8               	btfss	status,2,c
  3373   000834  EF1E  F004         	goto	i2u15_41
  3374   000838  EF20  F004         	goto	i2u15_40
  3375   00083C                     i2u15_41:
  3376   00083C  EF23  F004         	goto	i2l432
  3377   000840                     i2u15_40:
  3378   000840                     
  3379                           ;main.c: 319:     {;main.c: 320:         LATB5 = 1;
  3380   000840  8A8A               	bsf	3978,5,c	;volatile
  3381                           
  3382                           ;main.c: 321:     }
  3383   000842  EF24  F004         	goto	i2l1380
  3384   000846                     i2l432:
  3385                           
  3386                           ;main.c: 324:     {;main.c: 325:         LATB5 = 0;
  3387   000846  9A8A               	bcf	3978,5,c	;volatile
  3388   000848                     i2l1380:
  3389                           
  3390                           ;main.c: 328:     if(temporizador1 == 300)
  3391   000848  0E2C               	movlw	44
  3392   00084A  1837               	xorwf	_temporizador1^0,w,c
  3393   00084C  E106               	bnz	i2u16_41
  3394   00084E  0438               	decf	(_temporizador1+1)^0,w,c
  3395   000850  A4D8               	btfss	status,2,c
  3396   000852  EF2D  F004         	goto	i2u16_41
  3397   000856  EF2F  F004         	goto	i2u16_40
  3398   00085A                     i2u16_41:
  3399   00085A  EF32  F004         	goto	i2l434
  3400   00085E                     i2u16_40:
  3401   00085E                     
  3402                           ;main.c: 329:     {;main.c: 330:         LATB4 = 1;
  3403   00085E  888A               	bsf	3978,4,c	;volatile
  3404                           
  3405                           ;main.c: 331:     }
  3406   000860  EF33  F004         	goto	i2l1384
  3407   000864                     i2l434:
  3408                           
  3409                           ;main.c: 334:     {;main.c: 335:         LATB4 = 0;
  3410   000864  988A               	bcf	3978,4,c	;volatile
  3411   000866                     i2l1384:
  3412                           
  3413                           ;main.c: 338:     if(temporizador2 == 300)
  3414   000866  0E2C               	movlw	44
  3415   000868  1835               	xorwf	_temporizador2^0,w,c
  3416   00086A  E106               	bnz	i2u17_41
  3417   00086C  0436               	decf	(_temporizador2+1)^0,w,c
  3418   00086E  A4D8               	btfss	status,2,c
  3419   000870  EF3C  F004         	goto	i2u17_41
  3420   000874  EF3E  F004         	goto	i2u17_40
  3421   000878                     i2u17_41:
  3422   000878  EF41  F004         	goto	i2l436
  3423   00087C                     i2u17_40:
  3424   00087C                     
  3425                           ;main.c: 339:     {;main.c: 340:         LATB3 = 1;
  3426   00087C  868A               	bsf	3978,3,c	;volatile
  3427                           
  3428                           ;main.c: 341:     }
  3429   00087E  EF42  F004         	goto	i2l438
  3430   000882                     i2l436:
  3431                           
  3432                           ;main.c: 344:     {;main.c: 345:         LATB3 = 0;
  3433   000882  968A               	bcf	3978,3,c	;volatile
  3434   000884                     i2l438:
  3435   000884  0012               	return		;funcret
  3436   000886                     __end_of_LED_State:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _f_int2 *****************
  3440 ;; Defined at:
  3441 ;;		line 181 in file "main.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         0       0       0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_f_interrupt_high
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text26
  3469   000AC6                     __ptext26:
  3470                           	callstack 0
  3471   000AC6                     _f_int2:
  3472                           	callstack 26
  3473   000AC6                     
  3474                           ;main.c: 183:     static uint8_t sentido2 = 0;;main.c: 185:     sentido2 ^= 1;
  3475   000AC6  0E01               	movlw	1
  3476   000AC8  1A1F               	xorwf	f_int2@sentido2^0,f,c
  3477   000ACA                     
  3478                           ;main.c: 187:     if(!sentido2)
  3479   000ACA  501F               	movf	f_int2@sentido2^0,w,c
  3480   000ACC  A4D8               	btfss	status,2,c
  3481   000ACE  EF6B  F005         	goto	i2u23_41
  3482   000AD2  EF6D  F005         	goto	i2u23_40
  3483   000AD6                     i2u23_41:
  3484   000AD6  EF73  F005         	goto	i2l1494
  3485   000ADA                     i2u23_40:
  3486   000ADA                     
  3487                           ;main.c: 188:     {;main.c: 189:         temporizador2 = 300;
  3488   000ADA  0E01               	movlw	1
  3489   000ADC  6E36               	movwf	(_temporizador2+1)^0,c
  3490   000ADE  0E2C               	movlw	44
  3491   000AE0  6E35               	movwf	_temporizador2^0,c
  3492                           
  3493                           ;main.c: 190:     }
  3494   000AE2  EF77  F005         	goto	i2l404
  3495   000AE6                     i2l1494:
  3496                           
  3497                           ;main.c: 193:     {;main.c: 194:         temporizador2 = 600;
  3498   000AE6  0E02               	movlw	2
  3499   000AE8  6E36               	movwf	(_temporizador2+1)^0,c
  3500   000AEA  0E58               	movlw	88
  3501   000AEC  6E35               	movwf	_temporizador2^0,c
  3502   000AEE                     i2l404:
  3503   000AEE  0012               	return		;funcret
  3504   000AF0                     __end_of_f_int2:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _f_int1 *****************
  3508 ;; Defined at:
  3509 ;;		line 164 in file "main.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3523 ;;      Params:         0       0       0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_f_interrupt_high
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text27
  3537   000AF0                     __ptext27:
  3538                           	callstack 0
  3539   000AF0                     _f_int1:
  3540                           	callstack 26
  3541   000AF0                     
  3542                           ;main.c: 166:     static uint8_t sentido1 = 0;;main.c: 168:     sentido1 ^= 1;
  3543   000AF0  0E01               	movlw	1
  3544   000AF2  1A20               	xorwf	f_int1@sentido1^0,f,c
  3545   000AF4                     
  3546                           ;main.c: 170:     if(!sentido1)
  3547   000AF4  5020               	movf	f_int1@sentido1^0,w,c
  3548   000AF6  A4D8               	btfss	status,2,c
  3549   000AF8  EF80  F005         	goto	i2u22_41
  3550   000AFC  EF82  F005         	goto	i2u22_40
  3551   000B00                     i2u22_41:
  3552   000B00  EF88  F005         	goto	i2l1486
  3553   000B04                     i2u22_40:
  3554   000B04                     
  3555                           ;main.c: 171:     {;main.c: 172:         temporizador1 = 300;
  3556   000B04  0E01               	movlw	1
  3557   000B06  6E38               	movwf	(_temporizador1+1)^0,c
  3558   000B08  0E2C               	movlw	44
  3559   000B0A  6E37               	movwf	_temporizador1^0,c
  3560                           
  3561                           ;main.c: 173:     }
  3562   000B0C  EF8C  F005         	goto	i2l397
  3563   000B10                     i2l1486:
  3564                           
  3565                           ;main.c: 176:     {;main.c: 177:         temporizador1 = 600;
  3566   000B10  0E02               	movlw	2
  3567   000B12  6E38               	movwf	(_temporizador1+1)^0,c
  3568   000B14  0E58               	movlw	88
  3569   000B16  6E37               	movwf	_temporizador1^0,c
  3570   000B18                     i2l397:
  3571   000B18  0012               	return		;funcret
  3572   000B1A                     __end_of_f_int1:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _f_int0 *****************
  3576 ;; Defined at:
  3577 ;;		line 145 in file "main.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3591 ;;      Params:         0       0       0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0
  3593 ;;      Temps:          2       0       0       0       0       0       0
  3594 ;;      Totals:         2       0       0       0       0       0       0
  3595 ;;Total ram usage:        2 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_f_interrupt_high
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text28
  3605   0009B6                     __ptext28:
  3606                           	callstack 0
  3607   0009B6                     _f_int0:
  3608                           	callstack 26
  3609   0009B6                     
  3610                           ;main.c: 147:     static uint8_t estado = 0;;main.c: 149:     switch(estado)
  3611   0009B6  EFE9  F004         	goto	i2l1474
  3612   0009BA                     i2l1468:
  3613                           
  3614                           ;main.c: 152:             pausa_ou_continua = 0;
  3615   0009BA  0E00               	movlw	0
  3616   0009BC  6E1C               	movwf	_pausa_ou_continua^0,c
  3617                           
  3618                           ;main.c: 153:             estado = 1;
  3619   0009BE  0E01               	movlw	1
  3620   0009C0  6E21               	movwf	f_int0@estado^0,c
  3621                           
  3622                           ;main.c: 154:             break;
  3623   0009C2  EFFE  F004         	goto	i2l390
  3624   0009C6                     i2l1470:
  3625                           
  3626                           ;main.c: 157:             pausa_ou_continua = 1;
  3627   0009C6  0E01               	movlw	1
  3628   0009C8  6E1C               	movwf	_pausa_ou_continua^0,c
  3629                           
  3630                           ;main.c: 158:             estado = 0;
  3631   0009CA  0E00               	movlw	0
  3632   0009CC  6E21               	movwf	f_int0@estado^0,c
  3633                           
  3634                           ;main.c: 159:             break;
  3635   0009CE  EFFE  F004         	goto	i2l390
  3636   0009D2                     i2l1474:
  3637   0009D2  5021               	movf	f_int0@estado^0,w,c
  3638   0009D4  6E2D               	movwf	??_f_int0^0,c
  3639   0009D6  6A2E               	clrf	(??_f_int0+1)^0,c
  3640                           
  3641                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3642                           ; Switch size 1, requested type "simple"
  3643                           ; Number of cases is 1, Range of values is 0 to 0
  3644                           ; switch strategies available:
  3645                           ; Name         Instructions Cycles
  3646                           ; simple_byte            4     3 (average)
  3647                           ;	Chosen strategy is simple_byte
  3648   0009D8  502E               	movf	(??_f_int0+1)^0,w,c
  3649   0009DA  0A00               	xorlw	0	; case 0
  3650   0009DC  B4D8               	btfsc	status,2,c
  3651   0009DE  EFF3  F004         	goto	i2l1732
  3652   0009E2  EFFE  F004         	goto	i2l390
  3653   0009E6                     i2l1732:
  3654                           
  3655                           ; Switch size 1, requested type "simple"
  3656                           ; Number of cases is 2, Range of values is 0 to 1
  3657                           ; switch strategies available:
  3658                           ; Name         Instructions Cycles
  3659                           ; simple_byte            7     4 (average)
  3660                           ;	Chosen strategy is simple_byte
  3661   0009E6  502D               	movf	??_f_int0^0,w,c
  3662   0009E8  0A00               	xorlw	0	; case 0
  3663   0009EA  B4D8               	btfsc	status,2,c
  3664   0009EC  EFDD  F004         	goto	i2l1468
  3665   0009F0  0A01               	xorlw	1	; case 1
  3666   0009F2  B4D8               	btfsc	status,2,c
  3667   0009F4  EFE3  F004         	goto	i2l1470
  3668   0009F8  EFFE  F004         	goto	i2l390
  3669   0009FC                     i2l390:
  3670   0009FC  0012               	return		;funcret
  3671   0009FE                     __end_of_f_int0:
  3672                           	callstack 0
  3673   000000                     
  3674                           	psect	rparam
  3675   000000                     
  3676                           	psect	temp
  3677   000039                     btemp:
  3678                           	callstack 0
  3679   000039                     	ds	1
  3680   000000                     int$flags	set	btemp
  3681   000000                     wtemp8	set	btemp+1
  3682   000000                     ttemp5	set	btemp+1
  3683   000000                     ttemp6	set	btemp+4
  3684   000000                     ttemp7	set	btemp+8
  3685                           
  3686                           	psect	idloc
  3687                           
  3688                           ;Config register IDLOC0 @ 0x200000
  3689                           ;	unspecified, using default values
  3690   200000                     	org	2097152
  3691   200000  FF                 	db	255
  3692                           
  3693                           ;Config register IDLOC1 @ 0x200001
  3694                           ;	unspecified, using default values
  3695   200001                     	org	2097153
  3696   200001  FF                 	db	255
  3697                           
  3698                           ;Config register IDLOC2 @ 0x200002
  3699                           ;	unspecified, using default values
  3700   200002                     	org	2097154
  3701   200002  FF                 	db	255
  3702                           
  3703                           ;Config register IDLOC3 @ 0x200003
  3704                           ;	unspecified, using default values
  3705   200003                     	org	2097155
  3706   200003  FF                 	db	255
  3707                           
  3708                           ;Config register IDLOC4 @ 0x200004
  3709                           ;	unspecified, using default values
  3710   200004                     	org	2097156
  3711   200004  FF                 	db	255
  3712                           
  3713                           ;Config register IDLOC5 @ 0x200005
  3714                           ;	unspecified, using default values
  3715   200005                     	org	2097157
  3716   200005  FF                 	db	255
  3717                           
  3718                           ;Config register IDLOC6 @ 0x200006
  3719                           ;	unspecified, using default values
  3720   200006                     	org	2097158
  3721   200006  FF                 	db	255
  3722                           
  3723                           ;Config register IDLOC7 @ 0x200007
  3724                           ;	unspecified, using default values
  3725   200007                     	org	2097159
  3726   200007  FF                 	db	255
  3727                           
  3728                           	psect	config
  3729                           
  3730                           ; Padding undefined space
  3731   300000                     	org	3145728
  3732   300000  FF                 	db	255
  3733                           
  3734                           ;Config register CONFIG1H @ 0x300001
  3735                           ;	Oscillator Selection bits
  3736                           ;	OSC = HS, HS oscillator
  3737                           ;	Fail-Safe Clock Monitor Enable bit
  3738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3739                           ;	Internal/External Oscillator Switchover bit
  3740                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3741   300001                     	org	3145729
  3742   300001  02                 	db	2
  3743                           
  3744                           ;Config register CONFIG2L @ 0x300002
  3745                           ;	Power-up Timer Enable bit
  3746                           ;	PWRT = OFF, PWRT disabled
  3747                           ;	Brown-out Reset Enable bits
  3748                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3749                           ;	Brown Out Reset Voltage bits
  3750                           ;	BORV = 3, Minimum setting
  3751   300002                     	org	3145730
  3752   300002  1F                 	db	31
  3753                           
  3754                           ;Config register CONFIG2H @ 0x300003
  3755                           ;	Watchdog Timer Enable bit
  3756                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3757                           ;	Watchdog Timer Postscale Select bits
  3758                           ;	WDTPS = 32768, 1:32768
  3759   300003                     	org	3145731
  3760   300003  1E                 	db	30
  3761                           
  3762                           ; Padding undefined space
  3763   300004                     	org	3145732
  3764   300004  FF                 	db	255
  3765                           
  3766                           ;Config register CONFIG3H @ 0x300005
  3767                           ;	CCP2 MUX bit
  3768                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3769                           ;	PORTB A/D Enable bit
  3770                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3771                           ;	Low-Power Timer1 Oscillator Enable bit
  3772                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3773                           ;	MCLR Pin Enable bit
  3774                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3775   300005                     	org	3145733
  3776   300005  83                 	db	131
  3777                           
  3778                           ;Config register CONFIG4L @ 0x300006
  3779                           ;	Stack Full/Underflow Reset Enable bit
  3780                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3781                           ;	Single-Supply ICSP Enable bit
  3782                           ;	LVP = OFF, Single-Supply ICSP disabled
  3783                           ;	Extended Instruction Set Enable bit
  3784                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3785                           ;	Background Debugger Enable bit
  3786                           ;	DEBUG = 0x1, unprogrammed default
  3787   300006                     	org	3145734
  3788   300006  81                 	db	129
  3789                           
  3790                           ; Padding undefined space
  3791   300007                     	org	3145735
  3792   300007  FF                 	db	255
  3793                           
  3794                           ;Config register CONFIG5L @ 0x300008
  3795                           ;	Code Protection bit
  3796                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3797                           ;	Code Protection bit
  3798                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3799                           ;	Code Protection bit
  3800                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3801                           ;	Code Protection bit
  3802                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3803   300008                     	org	3145736
  3804   300008  0F                 	db	15
  3805                           
  3806                           ;Config register CONFIG5H @ 0x300009
  3807                           ;	Boot Block Code Protection bit
  3808                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3809                           ;	Data EEPROM Code Protection bit
  3810                           ;	CPD = OFF, Data EEPROM not code-protected
  3811   300009                     	org	3145737
  3812   300009  C0                 	db	192
  3813                           
  3814                           ;Config register CONFIG6L @ 0x30000A
  3815                           ;	Write Protection bit
  3816                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3817                           ;	Write Protection bit
  3818                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3819                           ;	Write Protection bit
  3820                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3821                           ;	Write Protection bit
  3822                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3823   30000A                     	org	3145738
  3824   30000A  0F                 	db	15
  3825                           
  3826                           ;Config register CONFIG6H @ 0x30000B
  3827                           ;	Configuration Register Write Protection bit
  3828                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3829                           ;	Boot Block Write Protection bit
  3830                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3831                           ;	Data EEPROM Write Protection bit
  3832                           ;	WRTD = OFF, Data EEPROM not write-protected
  3833   30000B                     	org	3145739
  3834   30000B  E0                 	db	224
  3835                           
  3836                           ;Config register CONFIG7L @ 0x30000C
  3837                           ;	Table Read Protection bit
  3838                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3839                           ;	Table Read Protection bit
  3840                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3841                           ;	Table Read Protection bit
  3842                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3843                           ;	Table Read Protection bit
  3844                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3845   30000C                     	org	3145740
  3846   30000C  0F                 	db	15
  3847                           
  3848                           ;Config register CONFIG7H @ 0x30000D
  3849                           ;	Boot Block Table Read Protection bit
  3850                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3851   30000D                     	org	3145741
  3852   30000D  40                 	db	64
  3853                           tosu	equ	0xFFF
  3854                           tosh	equ	0xFFE
  3855                           tosl	equ	0xFFD
  3856                           stkptr	equ	0xFFC
  3857                           pclatu	equ	0xFFB
  3858                           pclath	equ	0xFFA
  3859                           pcl	equ	0xFF9
  3860                           tblptru	equ	0xFF8
  3861                           tblptrh	equ	0xFF7
  3862                           tblptrl	equ	0xFF6
  3863                           tablat	equ	0xFF5
  3864                           prodh	equ	0xFF4
  3865                           prodl	equ	0xFF3
  3866                           indf0	equ	0xFEF
  3867                           postinc0	equ	0xFEE
  3868                           postdec0	equ	0xFED
  3869                           preinc0	equ	0xFEC
  3870                           plusw0	equ	0xFEB
  3871                           fsr0h	equ	0xFEA
  3872                           fsr0l	equ	0xFE9
  3873                           wreg	equ	0xFE8
  3874                           indf1	equ	0xFE7
  3875                           postinc1	equ	0xFE6
  3876                           postdec1	equ	0xFE5
  3877                           preinc1	equ	0xFE4
  3878                           plusw1	equ	0xFE3
  3879                           fsr1h	equ	0xFE2
  3880                           fsr1l	equ	0xFE1
  3881                           bsr	equ	0xFE0
  3882                           indf2	equ	0xFDF
  3883                           postinc2	equ	0xFDE
  3884                           postdec2	equ	0xFDD
  3885                           preinc2	equ	0xFDC
  3886                           plusw2	equ	0xFDB
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         16
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      8      56
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _setup->_ADC_maq
    _ADC_maq->_select_channel

Critical Paths under _f_interrupt_high in COMRAM

    _f_interrupt_high->i2_ADC_maq
    i2_ADC_maq->i2_select_channel
    _f_timers->_Read_AD
    _f_timers->_mux_display
    _contador_displays_02->_cont2_crescente
    _contador_displays_02->_cont2_decrescente
    _contador_displays_01->_cont1_crescente
    _contador_displays_01->_cont1_decrescente

Critical Paths under _main in BANK0

    None.

Critical Paths under _f_interrupt_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _f_interrupt_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _f_interrupt_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _f_interrupt_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _f_interrupt_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _f_interrupt_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _ADC_maq
                            _AD_init
                 _disable_interrupts
                  _enable_interrupts
                     _interrupt_init
                           _setup_io
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_interrupts                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_maq                                              2     2      0      15
                                              6 COMRAM     2     2      0
                     _select_channel
                _start_AD_conversion
 ---------------------------------------------------------------------------------
 (3) _start_AD_conversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _select_channel                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _f_interrupt_high                                     2     2      0      22
                                              3 COMRAM     2     2      0
                             _f_int0
                             _f_int1
                             _f_int2
                           _f_timers
                          i2_ADC_maq
 ---------------------------------------------------------------------------------
 (5) i2_ADC_maq                                            2     2      0      22
                                              1 COMRAM     2     2      0
                   i2_select_channel
              i2_start_AD_conversion
 ---------------------------------------------------------------------------------
 (6) i2_start_AD_conversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i2_select_channel                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _f_timers                                             0     0      0       0
                          _LED_State
                            _Read_AD
               _contador_displays_01
               _contador_displays_02
                      _counter_state
                        _mux_display
 ---------------------------------------------------------------------------------
 (6) _mux_display                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _counter_state                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _contador_displays_02                                 0     0      0       0
                    _cont2_crescente
                  _cont2_decrescente
 ---------------------------------------------------------------------------------
 (7) _cont2_decrescente                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _cont2_crescente                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _contador_displays_01                                 0     0      0       0
                    _cont1_crescente
                  _cont1_decrescente
 ---------------------------------------------------------------------------------
 (7) _cont1_decrescente                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _cont1_crescente                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Read_AD                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _LED_State                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _f_int2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _f_int1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _f_int0                                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup
     _ADC_maq
       _select_channel
       _start_AD_conversion
     _AD_init
     _disable_interrupts
     _enable_interrupts
     _interrupt_init
     _setup_io

 _f_interrupt_high (ROOT)
   _f_int0
   _f_int1
   _f_int2
   _f_timers
     _LED_State
     _Read_AD
     _contador_displays_01
       _cont1_crescente
       _cont1_decrescente
     _contador_displays_02
       _cont2_crescente
       _cont2_decrescente
     _counter_state
     _mux_display
   i2_ADC_maq
     i2_select_channel
     i2_start_AD_conversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      8      38       1       44.4%
BITBIGSFRlhhhhh     21      0       0      21        0.0%
BITBIGSFRhhlhl      18      0       0      17        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhhlll       B      0       0      19        0.0%
BITBIGSFRllh         7      0       0      26        0.0%
BITBIGSFRlhhhhl      7      0       0      22        0.0%
BITBIGSFRlhhl        5      0       0      24        0.0%
BITBIGSFRhhllh       4      0       0      18        0.0%
BITBIGSFRlhhhl       1      0       0      23        0.0%
BITBIGSFRlhl         1      0       0      25        0.0%
BITBIGSFRhl          1      0       0      20        0.0%
BITBIGSFRlll         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      28        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 09 18:27:53 2022

                           l21 0B94                             l30 0958                             l15 0B86  
                           l18 0BB8                             l27 0902                             l29 0918  
                           _GO 007E11               f_timers@counter0 0018               f_timers@counter1 0016  
             f_timers@counter2 0014               f_timers@counter3 0012         __end_of_interrupt_init 0B6A  
                          l262 0B68                            l256 0BB4                            l192 0A68  
                          l259 0BAC                            l195 0B4E                            l369 0BBE  
                          _GIE 007F97                            wreg 000FE8                __end_of_ADC_maq 095A  
                ADC_maq@estado 002C                __end_of_AD_init 0B88                           l1114 0BB6  
                         l1116 0B8A                           l1320 0BAE                           l1322 0B36  
                         l1410 0A38                           l1324 0B50                           l1420 0A4A  
                         l1412 0A3C                           l1270 0B7A                           l1326 0BA4  
                         l1422 0A4C                           l1414 0A40                           l1280 091C  
                         l1272 08FE                           l1424 0A4E                           l1416 0A44  
                         l1282 0922                           l1274 0906                           l1426 0A60  
                         l1418 0A48                           l1284 0926                           l1276 090C  
                         l1428 0A64                           l1278 0910                           l1288 092E  
                         l1560 0B6E                           l1716 0942                           l1558 0B6A  
                         _ADIE 007CEE                           _ADIF 007CF6                           _LATA 000F89  
                         _LATB 000F8A                           _LATD 000F8C                           _IPEN 007E87  
                         _PEIE 007F96                           i2l21 0BA2                           i2l30 09B4  
                         i2l18 0BBC                           i2l27 095E                           i2l60 06B2  
                         i2l29 0974                           i2l62 06CE                           i2l63 06EA  
                         i2l64 0706                           i2l65 075C                           i2l84 02E0  
                         _TMR0 000FD6                           _main 0B6A                           _loop 0BBE  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
        i2_start_AD_conversion 0BBA                           fsr2l 000FD9                           btemp 0039  
                         start 000E                   ___param_bank 000000                __end_of_Read_AD 08FE  
       ??_contador_displays_01 002F         ??_contador_displays_02 002F                          ?_main 002D  
                        ?_loop 002D                ?_interrupt_init 002D                          _T0CON 000FD5  
                        _LATA2 007C4A                          _LATA3 007C4B                          _LATA4 007C4C  
                        _LATA5 007C4D                          _LATB3 007C53                          _LATB4 007C54  
                        _LATB5 007C55                          _LATB6 007C56                          _LATB7 007C57  
             i2_select_channel 0B96                          i2l103 0178                          i2l122 0540  
                        i2l141 0410                          i2l404 0AEE                          i2l421 07FE  
                        i2l253 05F0                          i2l430 082E                          i2l432 0846  
                        i2l425 07FE                          i2l434 0864                          i2l355 06AC  
                        i2l436 0882                          i2l428 0816                          i2l381 0A96  
                        i2l390 09FC                          i2l438 0884                          i2l366 08FC  
                        i2l375 0AC4                          i2l397 0B18                          _PORTB 000F81  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISD 000F95  
           _disable_interrupts 0BAE                          _setup 0A38                          tablat 000FF5  
                        ttemp5 003A                          ttemp6 003D                          ttemp7 0041  
                        status 000FD8                          wtemp8 003A            ?_disable_interrupts 002D  
             _f_interrupt_high 0008                __initialization 09FE                   __end_of_main 0B7A  
                 __end_of_loop 0BC0                      ??_ADC_maq 0033                         ??_main 0035  
                       ??_loop 0032                  __activetblptr 000002           ??_disable_interrupts 0032  
                    ??_AD_init 0032              __end_of_LED_State 0886              __end_ofi2_ADC_maq 09B6  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
                _counter_state 075E                         _ADRESH 000FC4                         ?_setup 002D  
                       _INT0IE 007F94                         _INT0IF 007F91                         _INT1IE 007F83  
                       _INT1IF 007F80                         _INT2IE 007F84                         _INT2IF 007F81  
                       i2l1120 017E                         i2l1200 042E                         i2l1130 01CE  
                       i2l1122 018E                         i2l1210 046A                         i2l1202 043A  
                       i2l1140 021E                         i2l1132 01DE                         i2l1124 019E  
                       i2l1220 04A6                         i2l1212 0476                         i2l1204 0446  
                       i2l1300 06D2                         i2l1142 022E                         i2l1134 01EE  
                       i2l1126 01AE                         i2l1150 025E                         i2l1118 017A  
                       i2l1222 04B2                         i2l1214 0482                         i2l1206 0452  
                       i2l1310 071A                         i2l1302 06E2                         i2l1400 08C2  
                       i2l1144 023E                         i2l1136 01FE                         i2l1128 01BE  
                       i2l1160 0026                         i2l1216 048E                         i2l1208 045E  
                       i2l1240 030A                         i2l1232 02E2                         i2l1304 06EE  
                       i2l1146 024E                         i2l1138 020E                         i2l1170 0076  
                       i2l1162 0036                         i2l1330 0AA8                         i2l1218 049A  
                       i2l1226 04BE                         i2l1250 0346                         i2l1242 0316  
                       i2l1234 02E6                         i2l1306 06FE                         i2l1314 0722  
                       i2l1180 00C6                         i2l1172 0086                         i2l1164 0046  
                       i2l1156 0012                         i2l1332 0AB8                         i2l1260 0382  
                       i2l1252 0352                         i2l1244 0322                         i2l1236 02F2  
                       i2l1340 0A8A                         i2l1308 070A                         i2l1182 00D6  
                       i2l1174 0096                         i2l1166 0056                         i2l1158 0016  
                       i2l1334 0AC0                         i2l1254 035E                         i2l1246 032E  
                       i2l1238 02FE                         i2l1342 0A92                         i2l1350 0786  
                       i2l1430 05FC                         i2l1406 0BBA                         i2l1184 00E6  
                       i2l1176 00A6                         i2l1168 0066                         i2l1328 0A98  
                       i2l1256 036A                         i2l1248 033A                         i2l1264 038E  
                       i2l1336 0A6A                         i2l1360 07CE                         i2l1352 0796  
                       i2l1344 075E                         i2l1440 063C                         i2l1432 0612  
                       i2l1370 0810                         i2l1178 00B6                         i2l1194 0412  
                       i2l1258 0376                         i2l1338 0A7A                         i2l1362 07D6  
                       i2l1354 07A6                         i2l1346 076E                         i2l1450 066E  
                       i2l1442 0644                         i2l1434 061A                         i2l1380 0848  
                       i2l1372 0818                         i2l1188 00F6                         i2l1196 0416  
                       i2l1364 07E6                         i2l1356 07AE                         i2l1348 077E  
                       i2l1460 069C                         i2l1452 0672                         i2l1444 0648  
                       i2l1436 061E                         i2l1620 0962                         i2l1470 09C6  
                       i2l1382 085E                         i2l1374 0828                         i2l1390 0892  
                       i2l1198 0422                         i2l1366 07F6                         i2l1358 07BE  
                       i2l1294 06AE                         i2l1462 06A0                         i2l1454 067A  
                       i2l1446 0650                         i2l1438 0626                         i2l1630 0982  
                       i2l1622 0968                         i2l1480 0AF0                         i2l1384 0866  
                       i2l1376 0830                         i2l1368 0800                         i2l1392 089E  
                       i2l1720 0736                         i2l1296 06B6                         i2l1464 06A4  
                       i2l1456 0690                         i2l1448 0666                         i2l1616 0B98  
                       i2l1624 096C                         i2l1640 054C                         i2l1474 09D2  
                       i2l1466 09B6                         i2l1482 0AF4                         i2l1490 0ACA  
                       i2l1386 087C                         i2l1378 0840                         i2l1730 08D6  
                       i2l1394 08AA                         i2l1722 03A2                         i2l1298 06C6  
                       i2l1458 0698                         i2l1626 0978                         i2l1634 098A  
                       i2l1618 095A                         i2l1650 0576                         i2l1642 055A  
                       i2l1732 09E6                         i2l1468 09BA                         i2l1484 0B04  
                       i2l1492 0ADA                         i2l1396 08B6                         i2l1388 0886  
                       i2l1724 04D2                         i2l1628 097E                         i2l1660 05A6  
                       i2l1652 0584                         i2l1644 0562                         i2l1486 0B10  
                       i2l1494 0AE6                         i2l1726 010A                         i2l1718 099E  
                       i2l1670 05CC                         i2l1662 05AA                         i2l1654 0588  
                       i2l1646 0566                         i2l1488 0AC6                         i2l1728 0272  
                       i2l1672 05CE                         i2l1664 05AC                         i2l1656 058A  
                       i2l1648 0568                         i2l1674 05DC                         i2l1666 05BA  
                       i2l1658 0598                         i2l1676 05EA                         i2l1668 05C8  
                       i2l1678 05EE                         _INTCON 000FF2         ?i2_start_AD_conversion 002D  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         i2u1_40 0AA8  
                       i2u1_41 0AA4                         i2u2_40 0AB8                         i2u2_41 0AB4  
                       i2u3_40 0A7A                         i2u3_41 0A76                         i2u4_40 0A8A  
                       i2u4_41 0A86                         i2u5_40 076E                         i2u5_41 076A  
                       i2u6_40 077E                         i2u6_41 077A                         i2u7_40 0796  
                       i2u7_41 0792                         i2u8_40 07A6                         i2u8_41 07A2  
                       i2u9_40 07BE                         i2u9_41 07BA                      ??_Read_AD 002D  
              _cont1_crescente 017A               __end_of_f_timers 06AE                         _f_int0 09B6  
                       _f_int1 0AF0                         _f_int2 0AC6                _cont2_crescente 0412  
                       clear_0 0A24                         isa$std 000001                   __pdataCOMRAM 0001  
           _estado_sequencia01 0027             _estado_sequencia02 0026                         tblptrh 000FF7  
                       tblptrl 000FF6               __end_of_setup_io 0B50                         tblptru 000FF8  
               ?_counter_state 002D                   ?_mux_display 002D                     __accesstop 0080  
      __end_of__initialization 0A2A                 _select_channel 0B88            _start_AD_conversion 0BB6  
                ___rparam_used 000001                 __pcstackCOMRAM 002D                  __end_of_setup 0A6A  
         ?_start_AD_conversion 002D                        ??_setup 0035         __end_of_select_channel 0B96  
      __end_of_cont1_crescente 02E2                     __pnvCOMRAM 0035       __end_ofi2_select_channel 0BA4  
      __end_of_cont2_crescente 0542               ??_interrupt_init 0032                        ?_f_int0 002D  
                      ?_f_int1 002D                        ?_f_int2 002D                        _ADC_maq 08FE  
        ??_start_AD_conversion 0032                        _AD_data 001D                        _AD_init 0B7A  
                      _INTCON2 000FF1                        _INTCON3 000FF0                ??_counter_state 002D  
                      i2u10_40 07CE                        i2u10_41 07CA                        i2u11_40 07E6  
                      i2u11_41 07E2       __end_of_f_interrupt_high 05FC                        i2u12_40 07F6  
                      i2u20_40 0666                        i2u12_41 07F2                        i2u20_41 0662  
                      i2u13_40 0810                        i2u21_40 0690                        i2u13_41 080C  
                      i2u21_41 068C                        i2u22_40 0B04                        i2u14_40 0828  
                      i2u22_41 0B00                        i2u14_41 0824                        i2u23_40 0ADA  
                      i2u15_40 0840                        i2u23_41 0AD6                        i2u15_41 083C  
                      i2u16_40 085E                        i2u40_40 05A6                        i2u16_41 085A  
                      i2u40_41 05A2                        i2u17_40 087C                        i2u41_40 05BA  
                      i2u17_41 0878                        i2u41_41 05B6                        i2u18_40 0612  
                      i2u42_40 05C8                        i2u18_41 060E                        i2u42_41 05C4  
                      i2u19_40 063C                        i2u43_40 05DC                        i2u19_41 0638  
                      i2u43_41 05D8                        i2u44_40 05EA                        i2u36_40 055A  
                      i2u44_41 05E6                        i2u36_41 0556                        i2u37_40 0576  
                      i2u37_41 0572                        i2u38_40 0584                        i2u38_41 0580  
                      i2u39_40 0598                        i2u39_41 0594                      ?_f_timers 002D  
              ?_select_channel 002D                        _Read_AD 0886                        __Hparam 0000  
                      __Lparam 0000                      ?_setup_io 002D                        __pcinit 09FE  
                      __ramtop 0600                        __ptext0 0B6A                        __ptext1 0A38  
                      __ptext2 0B36                        __ptext3 0B50                        __ptext4 0BA4  
                      __ptext5 0BAE                        __ptext6 0B7A                        __ptext7 08FE  
                      __ptext8 0BB6                        __ptext9 0B88                     ??_f_timers 002F  
      ??i2_start_AD_conversion 002D                 f_int1@sentido1 0020                 __pintcode_body 0542  
         end_of_initialization 0A2A                      _LED_State 0800               ?_cont1_crescente 002D  
               f_int2@sentido2 001F                      i2_ADC_maq 095A                  __Lmediumconst 0000  
                      int_func 0542               ?_cont2_crescente 002D                        postdec1 000FE5  
                   ??_setup_io 0032                        postinc0 000FEE               Read_AD@Valor_AD0 0022  
            _pausa_ou_continua 001C                     ?_LED_State 002D                     ?i2_ADC_maq 002D  
               __end_of_f_int0 09FE                 __end_of_f_int1 0B1A                 __end_of_f_int2 0AF0  
                __pidataCOMRAM 0B1A              _enable_interrupts 0BA4          select_channel@channel 0032  
           ?_enable_interrupts 002D            start_initialization 09FE            ??_enable_interrupts 0032  
            ?i2_select_channel 002D             ??i2_select_channel 002D                   f_int0@estado 0021  
                     ??_f_int0 002D                       ??_f_int1 002D                       ??_f_int2 002D  
    __end_of_enable_interrupts 0BAE                       ?_ADC_maq 002D                       ?_AD_init 002D  
                  __pbssCOMRAM 001D               ??_select_channel 0032              ?_f_interrupt_high 002D  
                  ??_LED_State 002D             ??_f_interrupt_high 0030                    ??i2_ADC_maq 002E  
                     ?_Read_AD 002D                      __pintcode 0008    __end_of_start_AD_conversion 0BBA  
          read_keyb@m_dado_RB3 001B            read_keyb@m_dado_RB4 001A              _cont1_decrescente 0012  
           ?_cont1_decrescente 002D          __end_of_counter_state 0800            ??_cont1_decrescente 002D  
__end_ofi2_start_AD_conversion 0BBE   __end_of_contador_displays_01 0AC6   __end_of_contador_displays_02 0A98  
    __end_of_cont1_decrescente 017A        i2select_channel@channel 002D              _cont2_decrescente 02E2  
           ?_cont2_decrescente 002D                      copy_data0 0A12            ??_cont2_decrescente 002D  
                ??_mux_display 002D                       __Hrparam 0000                       __Lrparam 0000  
    __end_of_cont2_decrescente 0412     __end_of_disable_interrupts 0BB6                       _f_timers 05FC  
                     __ptext10 0BBE                       __ptext20 0412                       __ptext12 095A  
                     __ptext21 0A98                       __ptext13 0BBA                       __ptext22 0012  
                     __ptext14 0B96                       __ptext23 017A                       __ptext15 05FC  
                     __ptext24 0886                       __ptext16 06AE                       __ptext25 0800  
                     __ptext17 075E                       __ptext26 0AC6                       __ptext18 0A6A  
                     __ptext27 0AF0                       __ptext19 02E2                       __ptext28 09B6  
                     _conv7seg 0001                       _display1 002B                       _display2 002A  
                     _display3 0029                       _display4 0028              mux_display@estado 0025  
          __end_of_mux_display 075E                       isa$xinst 000000                  _temporizador1 0037  
                _temporizador2 0035                       _setup_io 0B36                       int$flags 0039  
         _contador_displays_01 0A98           _contador_displays_02 0A6A                       intlevel2 0000  
        ?_contador_displays_01 002D          ?_contador_displays_02 002D              ??_cont1_crescente 002D  
                  _sequencia_1 0024                    _sequencia_2 0023                 _interrupt_init 0B50  
            ??_cont2_crescente 002D                    _mux_display 06AE  
