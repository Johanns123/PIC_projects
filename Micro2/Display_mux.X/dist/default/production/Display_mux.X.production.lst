

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Oct 07 13:49:46 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   0002C4                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _conv7seg
    72   0002C4  3F                 	db	63
    73   0002C5  06                 	db	6
    74   0002C6  5B                 	db	91
    75   0002C7  4F                 	db	79
    76   0002C8  66                 	db	102
    77   0002C9  6D                 	db	109
    78   0002CA  7D                 	db	125
    79   0002CB  07                 	db	7
    80   0002CC  7F                 	db	127
    81   0002CD  6F                 	db	111
    82   0002CE  77                 	db	119
    83   0002CF  7C                 	db	124
    84   0002D0  39                 	db	57
    85   0002D1  5E                 	db	94
    86   0002D2  79                 	db	121
    87   0002D3  71                 	db	113
    88   0002D4  00                 	db	0
    89                           
    90                           ;initializer for f_timers@counter1
    91   0002D5  0001               	dw	1
    92                           
    93                           ;initializer for f_timers@counter0
    94   0002D7  0001               	dw	1
    95   000000                     _INTCON2	set	4081
    96   000000                     _INTCON3	set	4080
    97   000000                     _INTCON	set	4082
    98   000000                     _LATA	set	3977
    99   000000                     _TMR0IE	set	32661
   100   000000                     _PEIE	set	32662
   101   000000                     _GIE	set	32663
   102   000000                     _LATA5	set	31821
   103   000000                     _LATA4	set	31820
   104   000000                     _LATA3	set	31819
   105   000000                     _INT2IE	set	32644
   106   000000                     _INT2IF	set	32641
   107   000000                     _INT1IE	set	32643
   108   000000                     _INT0IE	set	32660
   109   000000                     _INT0IF	set	32657
   110   000000                     _TMR0	set	4054
   111   000000                     _LATA2	set	31818
   112   000000                     _TMR0IF	set	32658
   113   000000                     _INT1IF	set	32640
   114   000000                     _LATB	set	3978
   115   000000                     _LATD	set	3980
   116   000000                     _TRISA	set	3986
   117   000000                     _ADCON1	set	4033
   118   000000                     _IPEN	set	32391
   119   000000                     _T0CON	set	4053
   120   000000                     _TRISD	set	3989
   121   000000                     _TRISB	set	3987
   122                           
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126   00023A                     __pcinit:
   127                           	callstack 0
   128   00023A                     start_initialization:
   129                           	callstack 0
   130   00023A                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Initialize objects allocated to COMRAM (21 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135   00023A  0EC4               	movlw	low __pidataCOMRAM
   136   00023C  6EF6               	movwf	tblptrl,c
   137   00023E  0E02               	movlw	high __pidataCOMRAM
   138   000240  6EF7               	movwf	tblptrh,c
   139   000242  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140   000244  6EF8               	movwf	tblptru,c
   141   000246  EE00  F001         	lfsr	0,__pdataCOMRAM
   142   00024A  EE10 F015          	lfsr	1,21
   143   00024E                     copy_data0:
   144   00024E  0009               	tblrd		*+
   145   000250  CFF5 FFEE          	movff	tablat,postinc0
   146   000254  50E5               	movf	postdec1,w,c
   147   000256  50E1               	movf	fsr1l,w,c
   148   000258  E1FA               	bnz	copy_data0
   149                           
   150                           ; Clear objects allocated to COMRAM (5 bytes)
   151   00025A  6A1A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   152   00025C  6A19               	clrf	(__pbssCOMRAM+3)& (0+255),c
   153   00025E  6A18               	clrf	(__pbssCOMRAM+2)& (0+255),c
   154   000260  6A17               	clrf	(__pbssCOMRAM+1)& (0+255),c
   155   000262  6A16               	clrf	__pbssCOMRAM& (0+255),c
   156   000264                     end_of_initialization:
   157                           	callstack 0
   158   000264                     __end_of__initialization:
   159                           	callstack 0
   160   000264  901F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   161   000266  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   162   000268  0E00               	movlw	low (__Lmediumconst shr (0+16))
   163   00026A  6EF8               	movwf	tblptru,c
   164   00026C  0100               	movlb	0
   165   00026E  EF6D  F001         	goto	_main	;jump to C main() function
   166                           
   167                           	psect	bssCOMRAM
   168   000016                     __pbssCOMRAM:
   169                           	callstack 0
   170   000016                     mux_display@estado:
   171                           	callstack 0
   172   000016                     	ds	1
   173   000017                     _unidade_disp_par02:
   174                           	callstack 0
   175   000017                     	ds	1
   176   000018                     _unidade_disp_par01:
   177                           	callstack 0
   178   000018                     	ds	1
   179   000019                     _dezena_disp_par02:
   180                           	callstack 0
   181   000019                     	ds	1
   182   00001A                     _dezena_disp_par01:
   183                           	callstack 0
   184   00001A                     	ds	1
   185                           
   186                           	psect	dataCOMRAM
   187   000001                     __pdataCOMRAM:
   188                           	callstack 0
   189   000001                     _conv7seg:
   190                           	callstack 0
   191   000001                     	ds	17
   192   000012                     f_timers@counter1:
   193                           	callstack 0
   194   000012                     	ds	2
   195   000014                     f_timers@counter0:
   196                           	callstack 0
   197   000014                     	ds	2
   198                           
   199                           	psect	cstackCOMRAM
   200   00001B                     __pcstackCOMRAM:
   201                           	callstack 0
   202   00001B                     ??_mux_display:
   203   00001B                     
   204                           ; 2 bytes @ 0x0
   205   00001B                     	ds	2
   206   00001D                     ??_f_interrupt_high:
   207                           
   208                           ; 1 bytes @ 0x2
   209   00001D                     	ds	2
   210   00001F                     
   211                           ; 1 bytes @ 0x4
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 92 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  2  103[None  ] int 
   224 ;; Registers used:
   225 ;;		wreg, status,2, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   231 ;;      Params:         0       0       0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0       0       0
   233 ;;      Temps:          0       0       0       0       0       0       0
   234 ;;      Totals:         0       0       0       0       0       0       0
   235 ;;Total ram usage:        0 bytes
   236 ;; Hardware stack levels required when called: 5
   237 ;; This function calls:
   238 ;;		_loop
   239 ;;		_setup
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246   0002DA                     __ptext0:
   247                           	callstack 0
   248   0002DA                     _main:
   249                           	callstack 26
   250   0002DA                     
   251                           ;main.c: 93:    setup();
   252   0002DA  EC48  F001         	call	_setup	;wreg free
   253   0002DE                     l971:
   254   0002DE  EC7C  F001         	call	_loop	;wreg free
   255   0002E2  EF6F  F001         	goto	l971
   256   0002E6  EF07  F000         	goto	start
   257   0002EA                     __end_of_main:
   258                           	callstack 0
   259                           
   260 ;; *************** function _setup *****************
   261 ;; Defined at:
   262 ;;		line 136 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   276 ;;      Params:         0       0       0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0       0       0
   279 ;;      Totals:         0       0       0       0       0       0       0
   280 ;;Total ram usage:        0 bytes
   281 ;; Hardware stack levels used: 1
   282 ;; Hardware stack levels required when called: 4
   283 ;; This function calls:
   284 ;;		_disable_interrupts
   285 ;;		_enable_interrupts
   286 ;;		_interrupt_init
   287 ;;		_setup_io
   288 ;; This function is called by:
   289 ;;		_main
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text1
   294   000290                     __ptext1:
   295                           	callstack 0
   296   000290                     _setup:
   297                           	callstack 26
   298   000290                     
   299                           ;main.c: 138:     disable_interrupts();
   300   000290  EC75  F001         	call	_disable_interrupts	;wreg free
   301   000294                     
   302                           ;main.c: 139:     setup_io();
   303   000294  EC39  F001         	call	_setup_io	;wreg free
   304   000298                     
   305                           ;main.c: 140:     interrupt_init();
   306   000298  EC55  F001         	call	_interrupt_init	;wreg free
   307   00029C                     
   308                           ;main.c: 141:     LATA2 = 1, LATA3 = 1, LATA4 = 1, LATA5 = 1;
   309   00029C  8489               	bsf	3977,2,c	;volatile
   310   00029E  8689               	bsf	3977,3,c	;volatile
   311   0002A0  8889               	bsf	3977,4,c	;volatile
   312   0002A2  8A89               	bsf	3977,5,c	;volatile
   313                           
   314                           ;main.c: 142:     enable_interrupts();
   315   0002A4  EC79  F001         	call	_enable_interrupts	;wreg free
   316   0002A8  0012               	return		;funcret
   317   0002AA                     __end_of_setup:
   318                           	callstack 0
   319                           
   320 ;; *************** function _setup_io *****************
   321 ;; Defined at:
   322 ;;		line 158 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   336 ;;      Params:         0       0       0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0       0       0
   338 ;;      Temps:          0       0       0       0       0       0       0
   339 ;;      Totals:         0       0       0       0       0       0       0
   340 ;;Total ram usage:        0 bytes
   341 ;; Hardware stack levels used: 1
   342 ;; Hardware stack levels required when called: 3
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_setup
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text2
   351   000272                     __ptext2:
   352                           	callstack 0
   353   000272                     _setup_io:
   354                           	callstack 26
   355   000272                     
   356                           ;main.c: 160:     ADCON1 = 0b00001111;
   357   000272  0E0F               	movlw	15
   358   000274  6EC1               	movwf	193,c	;volatile
   359                           
   360                           ;main.c: 161:     TRISA = 0b11000011;
   361   000276  0EC3               	movlw	195
   362   000278  6E92               	movwf	146,c	;volatile
   363                           
   364                           ;main.c: 162:     TRISB = 0b00000011;
   365   00027A  0E03               	movlw	3
   366   00027C  6E93               	movwf	147,c	;volatile
   367                           
   368                           ;main.c: 163:     TRISD = 0b00000000;
   369   00027E  0E00               	movlw	0
   370   000280  6E95               	movwf	149,c	;volatile
   371                           
   372                           ;main.c: 164:     LATA = 0b00000000;
   373   000282  0E00               	movlw	0
   374   000284  6E89               	movwf	137,c	;volatile
   375                           
   376                           ;main.c: 165:     LATD = 0b00000000;
   377   000286  0E00               	movlw	0
   378   000288  6E8C               	movwf	140,c	;volatile
   379                           
   380                           ;main.c: 166:     LATB = 0b00000000;
   381   00028A  0E00               	movlw	0
   382   00028C  6E8A               	movwf	138,c	;volatile
   383   00028E  0012               	return		;funcret
   384   000290                     __end_of_setup_io:
   385                           	callstack 0
   386                           
   387 ;; *************** function _interrupt_init *****************
   388 ;; Defined at:
   389 ;;		line 169 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   403 ;;      Params:         0       0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 3
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_setup
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text3
   418   0002AA                     __ptext3:
   419                           	callstack 0
   420   0002AA                     _interrupt_init:
   421                           	callstack 26
   422   0002AA                     
   423                           ;main.c: 171:     INTCON = 0b10010000;
   424   0002AA  0E90               	movlw	144
   425   0002AC  6EF2               	movwf	242,c	;volatile
   426                           
   427                           ;main.c: 172:     INTCON2 = 0b00000101;
   428   0002AE  0E05               	movlw	5
   429   0002B0  6EF1               	movwf	241,c	;volatile
   430                           
   431                           ;main.c: 173:     INTCON3 = 0b11011000;
   432   0002B2  0ED8               	movlw	216
   433   0002B4  6EF0               	movwf	240,c	;volatile
   434                           
   435                           ;main.c: 174:     T0CON = 0b11000001;
   436   0002B6  0EC1               	movlw	193
   437   0002B8  6ED5               	movwf	213,c	;volatile
   438                           
   439                           ;main.c: 180:     TMR0 = 0x06;
   440   0002BA  0E00               	movlw	0
   441   0002BC  6ED7               	movwf	215,c	;volatile
   442   0002BE  0E06               	movlw	6
   443   0002C0  6ED6               	movwf	214,c	;volatile
   444   0002C2  0012               	return		;funcret
   445   0002C4                     __end_of_interrupt_init:
   446                           	callstack 0
   447                           
   448 ;; *************** function _enable_interrupts *****************
   449 ;; Defined at:
   450 ;;		line 152 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		None
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   464 ;;      Params:         0       0       0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 3
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_setup
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text4
   479   0002F2                     __ptext4:
   480                           	callstack 0
   481   0002F2                     _enable_interrupts:
   482                           	callstack 26
   483   0002F2                     
   484                           ;main.c: 154:     TMR0IE = 1;
   485   0002F2  8AF2               	bsf	4082,5,c	;volatile
   486                           
   487                           ;main.c: 155:     GIE = 1;
   488   0002F4  8EF2               	bsf	4082,7,c	;volatile
   489   0002F6  0012               	return		;funcret
   490   0002F8                     __end_of_enable_interrupts:
   491                           	callstack 0
   492                           
   493 ;; *************** function _disable_interrupts *****************
   494 ;; Defined at:
   495 ;;		line 145 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		None
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   509 ;;      Params:         0       0       0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; Hardware stack levels required when called: 3
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_setup
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text5
   524   0002EA                     __ptext5:
   525                           	callstack 0
   526   0002EA                     _disable_interrupts:
   527                           	callstack 26
   528   0002EA                     
   529                           ;main.c: 147:     IPEN = 0;
   530   0002EA  9ED0               	bcf	4048,7,c	;volatile
   531                           
   532                           ;main.c: 148:     GIE = 0;
   533   0002EC  9EF2               	bcf	4082,7,c	;volatile
   534                           
   535                           ;main.c: 149:     PEIE = 0;
   536   0002EE  9CF2               	bcf	4082,6,c	;volatile
   537   0002F0  0012               	return		;funcret
   538   0002F2                     __end_of_disable_interrupts:
   539                           	callstack 0
   540                           
   541 ;; *************** function _loop *****************
   542 ;; Defined at:
   543 ;;		line 183 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		None
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   557 ;;      Params:         0       0       0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 3
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text6
   572   0002F8                     __ptext6:
   573                           	callstack 0
   574   0002F8                     _loop:
   575                           	callstack 27
   576   0002F8  0012               	return		;funcret
   577   0002FA                     __end_of_loop:
   578                           	callstack 0
   579                           
   580 ;; *************** function _f_interrupt_high *****************
   581 ;; Defined at:
   582 ;;		line 62 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   596 ;;      Params:         0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0
   598 ;;      Temps:          2       0       0       0       0       0       0
   599 ;;      Totals:         2       0       0       0       0       0       0
   600 ;;Total ram usage:        2 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 2
   603 ;; This function calls:
   604 ;;		_f_int0
   605 ;;		_f_int1
   606 ;;		_f_int2
   607 ;;		_f_timers
   608 ;; This function is called by:
   609 ;;		Interrupt level 2
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	intcode
   614   000008                     __pintcode:
   615                           	callstack 0
   616   000008                     _f_interrupt_high:
   617                           	callstack 26
   618                           
   619                           ;incstack = 0
   620   000008  821F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   621   00000A  ED69  F000         	call	int_func,f	;refresh shadow registers
   622                           
   623                           	psect	intcode_body
   624   0000D2                     __pintcode_body:
   625                           	callstack 26
   626   0000D2                     int_func:
   627                           	callstack 26
   628   0000D2  0006               	pop		; remove dummy address from shadow register refresh
   629   0000D4  CFD9 F01D          	movff	fsr2l,??_f_interrupt_high
   630   0000D8  CFDA F01E          	movff	fsr2h,??_f_interrupt_high+1
   631   0000DC                     
   632                           ;main.c: 64:     if(TMR0IF)
   633   0000DC  A4F2               	btfss	4082,2,c	;volatile
   634   0000DE  EF73  F000         	goto	i2u9_41
   635   0000E2  EF75  F000         	goto	i2u9_40
   636   0000E6                     i2u9_41:
   637   0000E6  EF7C  F000         	goto	i2l945
   638   0000EA                     i2u9_40:
   639   0000EA                     
   640                           ;main.c: 65:     {;main.c: 66:         TMR0 = 0x06;
   641   0000EA  0E00               	movlw	0
   642   0000EC  6ED7               	movwf	215,c	;volatile
   643   0000EE  0E06               	movlw	6
   644   0000F0  6ED6               	movwf	214,c	;volatile
   645   0000F2                     
   646                           ;main.c: 68:         f_timers();
   647   0000F2  ECF2  F000         	call	_f_timers	;wreg free
   648   0000F6                     
   649                           ;main.c: 71:         TMR0IF = 0x00;
   650   0000F6  94F2               	bcf	4082,2,c	;volatile
   651   0000F8                     i2l945:
   652                           
   653                           ;main.c: 73:     if(INT0IF && INT0IE)
   654   0000F8  A2F2               	btfss	4082,1,c	;volatile
   655   0000FA  EF81  F000         	goto	i2u10_41
   656   0000FE  EF83  F000         	goto	i2u10_40
   657   000102                     i2u10_41:
   658   000102  EF8D  F000         	goto	i2l953
   659   000106                     i2u10_40:
   660   000106  A8F2               	btfss	4082,4,c	;volatile
   661   000108  EF88  F000         	goto	i2u11_41
   662   00010C  EF8A  F000         	goto	i2u11_40
   663   000110                     i2u11_41:
   664   000110  EF8D  F000         	goto	i2l953
   665   000114                     i2u11_40:
   666   000114                     
   667                           ;main.c: 74:     {;main.c: 75:         f_int0();
   668   000114  EC7F  F001         	call	_f_int0	;wreg free
   669   000118                     
   670                           ;main.c: 76:         INT0IF = 0;
   671   000118  92F2               	bcf	4082,1,c	;volatile
   672   00011A                     i2l953:
   673                           
   674                           ;main.c: 79:     if(INT1IF && INT1IE)
   675   00011A  A0F0               	btfss	4080,0,c	;volatile
   676   00011C  EF92  F000         	goto	i2u12_41
   677   000120  EF94  F000         	goto	i2u12_40
   678   000124                     i2u12_41:
   679   000124  EF9E  F000         	goto	i2l961
   680   000128                     i2u12_40:
   681   000128  A6F0               	btfss	4080,3,c	;volatile
   682   00012A  EF99  F000         	goto	i2u13_41
   683   00012E  EF9B  F000         	goto	i2u13_40
   684   000132                     i2u13_41:
   685   000132  EF9E  F000         	goto	i2l961
   686   000136                     i2u13_40:
   687   000136                     
   688                           ;main.c: 80:     {;main.c: 81:         f_int1();
   689   000136  EC7E  F001         	call	_f_int1	;wreg free
   690   00013A                     
   691                           ;main.c: 82:         INT1IF = 0;
   692   00013A  90F0               	bcf	4080,0,c	;volatile
   693   00013C                     i2l961:
   694                           
   695                           ;main.c: 85:     if(INT2IF && INT2IE)
   696   00013C  A2F0               	btfss	4080,1,c	;volatile
   697   00013E  EFA3  F000         	goto	i2u14_41
   698   000142  EFA5  F000         	goto	i2u14_40
   699   000146                     i2u14_41:
   700   000146  EFAF  F000         	goto	i2l99
   701   00014A                     i2u14_40:
   702   00014A  A8F0               	btfss	4080,4,c	;volatile
   703   00014C  EFAA  F000         	goto	i2u15_41
   704   000150  EFAC  F000         	goto	i2u15_40
   705   000154                     i2u15_41:
   706   000154  EFAF  F000         	goto	i2l99
   707   000158                     i2u15_40:
   708   000158                     
   709                           ;main.c: 86:     {;main.c: 87:         f_int2();
   710   000158  EC7D  F001         	call	_f_int2	;wreg free
   711   00015C                     
   712                           ;main.c: 88:         INT2IF = 0;
   713   00015C  92F0               	bcf	4080,1,c	;volatile
   714   00015E                     i2l99:
   715   00015E  C01E  FFDA         	movff	??_f_interrupt_high+1,fsr2h
   716   000162  C01D  FFD9         	movff	??_f_interrupt_high,fsr2l
   717   000166  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   718   000168  0011               	retfie		f
   719   00016A                     __end_of_f_interrupt_high:
   720                           	callstack 0
   721                           
   722 ;; *************** function _f_timers *****************
   723 ;; Defined at:
   724 ;;		line 108 in file "main.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         0       0       0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; Hardware stack levels required when called: 1
   745 ;; This function calls:
   746 ;;		_contador_displays
   747 ;;		_mux_display
   748 ;; This function is called by:
   749 ;;		_f_interrupt_high
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text8
   754   0001E4                     __ptext8:
   755                           	callstack 0
   756   0001E4                     _f_timers:
   757                           	callstack 26
   758   0001E4                     
   759                           ;main.c: 110:     static uint16_t counter0 = 1, counter1 = 1;;main.c: 112:     if(counte
      +                          r0 < 5)
   760   0001E4  5015               	movf	(f_timers@counter0+1)^0,w,c
   761   0001E6  E107               	bnz	i2u7_41
   762   0001E8  0E05               	movlw	5
   763   0001EA  5C14               	subwf	f_timers@counter0^0,w,c
   764   0001EC  B0D8               	btfsc	status,0,c
   765   0001EE  EFFB  F000         	goto	i2u7_41
   766   0001F2  EFFD  F000         	goto	i2u7_40
   767   0001F6                     i2u7_41:
   768   0001F6  EF01  F001         	goto	i2l911
   769   0001FA                     i2u7_40:
   770   0001FA                     
   771                           ;main.c: 113:     {;main.c: 114:         counter0++;
   772   0001FA  4A14               	infsnz	f_timers@counter0^0,f,c
   773   0001FC  2A15               	incf	(f_timers@counter0+1)^0,f,c
   774                           
   775                           ;main.c: 115:     }
   776   0001FE  EF07  F001         	goto	i2l915
   777   000202                     i2l911:
   778                           
   779                           ;main.c: 118:     {;main.c: 119:         mux_display();
   780   000202  EC09  F000         	call	_mux_display	;wreg free
   781   000206                     
   782                           ;main.c: 120:         counter0 = 1;
   783   000206  0E00               	movlw	0
   784   000208  6E15               	movwf	(f_timers@counter0+1)^0,c
   785   00020A  0E01               	movlw	1
   786   00020C  6E14               	movwf	f_timers@counter0^0,c
   787   00020E                     i2l915:
   788                           
   789                           ;main.c: 124:     if(counter1 < 500)
   790   00020E  0EF4               	movlw	244
   791   000210  5C12               	subwf	f_timers@counter1^0,w,c
   792   000212  0E01               	movlw	1
   793   000214  5813               	subwfb	(f_timers@counter1+1)^0,w,c
   794   000216  B0D8               	btfsc	status,0,c
   795   000218  EF10  F001         	goto	i2u8_41
   796   00021C  EF12  F001         	goto	i2u8_40
   797   000220                     i2u8_41:
   798   000220  EF16  F001         	goto	i2l919
   799   000224                     i2u8_40:
   800   000224                     
   801                           ;main.c: 125:     {;main.c: 126:         counter1++;
   802   000224  4A12               	infsnz	f_timers@counter1^0,f,c
   803   000226  2A13               	incf	(f_timers@counter1+1)^0,f,c
   804                           
   805                           ;main.c: 127:     }
   806   000228  EF1C  F001         	goto	i2l124
   807   00022C                     i2l919:
   808                           
   809                           ;main.c: 130:     {;main.c: 131:         contador_displays();
   810   00022C  ECB5  F000         	call	_contador_displays	;wreg free
   811   000230                     
   812                           ;main.c: 132:         counter1 = 1;
   813   000230  0E00               	movlw	0
   814   000232  6E13               	movwf	(f_timers@counter1+1)^0,c
   815   000234  0E01               	movlw	1
   816   000236  6E12               	movwf	f_timers@counter1^0,c
   817   000238                     i2l124:
   818   000238  0012               	return		;funcret
   819   00023A                     __end_of_f_timers:
   820                           	callstack 0
   821                           
   822 ;; *************** function _mux_display *****************
   823 ;; Defined at:
   824 ;;		line 188 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   838 ;;      Params:         0       0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0
   840 ;;      Temps:          2       0       0       0       0       0       0
   841 ;;      Totals:         2       0       0       0       0       0       0
   842 ;;Total ram usage:        2 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_f_timers
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text9
   852   000012                     __ptext9:
   853                           	callstack 0
   854   000012                     _mux_display:
   855                           	callstack 26
   856   000012                     
   857                           ;main.c: 190:     static uint8_t estado = 0;;main.c: 192:     switch(estado)
   858   000012  EF4B  F000         	goto	i2l869
   859   000016                     i2l148:
   860                           
   861                           ;main.c: 195:             LATA2 = 1;
   862   000016  8489               	bsf	3977,2,c	;volatile
   863                           
   864                           ;main.c: 196:             LATA3 = 0;
   865   000018  9689               	bcf	3977,3,c	;volatile
   866                           
   867                           ;main.c: 197:             LATA4 = 0;
   868   00001A  9889               	bcf	3977,4,c	;volatile
   869                           
   870                           ;main.c: 198:             LATA5 = 0;
   871   00001C  9A89               	bcf	3977,5,c	;volatile
   872   00001E                     
   873                           ;main.c: 199:             LATD = conv7seg[dezena_disp_par01];
   874   00001E  0E01               	movlw	low _conv7seg
   875   000020  241A               	addwf	_dezena_disp_par01^0,w,c
   876   000022  6ED9               	movwf	fsr2l,c
   877   000024  6ADA               	clrf	fsr2h,c
   878   000026  0E00               	movlw	high _conv7seg
   879   000028  22DA               	addwfc	fsr2h,f,c
   880   00002A  50DF               	movf	indf2,w,c
   881   00002C  6E8C               	movwf	140,c	;volatile
   882   00002E                     
   883                           ;main.c: 200:             estado = 1;
   884   00002E  0E01               	movlw	1
   885   000030  6E16               	movwf	mux_display@estado^0,c
   886                           
   887                           ;main.c: 201:             break;
   888   000032  EF68  F000         	goto	i2l153
   889   000036                     i2l150:
   890                           
   891                           ;main.c: 204:             LATA2 = 0;
   892   000036  9489               	bcf	3977,2,c	;volatile
   893                           
   894                           ;main.c: 205:             LATA3 = 1;
   895   000038  8689               	bsf	3977,3,c	;volatile
   896                           
   897                           ;main.c: 206:             LATA4 = 0;
   898   00003A  9889               	bcf	3977,4,c	;volatile
   899                           
   900                           ;main.c: 207:             LATA5 = 0;
   901   00003C  9A89               	bcf	3977,5,c	;volatile
   902   00003E                     
   903                           ;main.c: 208:             LATD = conv7seg[unidade_disp_par01];
   904   00003E  0E01               	movlw	low _conv7seg
   905   000040  2418               	addwf	_unidade_disp_par01^0,w,c
   906   000042  6ED9               	movwf	fsr2l,c
   907   000044  6ADA               	clrf	fsr2h,c
   908   000046  0E00               	movlw	high _conv7seg
   909   000048  22DA               	addwfc	fsr2h,f,c
   910   00004A  50DF               	movf	indf2,w,c
   911   00004C  6E8C               	movwf	140,c	;volatile
   912   00004E                     
   913                           ;main.c: 209:             estado = 2;
   914   00004E  0E02               	movlw	2
   915   000050  6E16               	movwf	mux_display@estado^0,c
   916                           
   917                           ;main.c: 210:             break;
   918   000052  EF68  F000         	goto	i2l153
   919   000056                     i2l151:
   920                           
   921                           ;main.c: 213:             LATA2 = 0;
   922   000056  9489               	bcf	3977,2,c	;volatile
   923                           
   924                           ;main.c: 214:             LATA3 = 0;
   925   000058  9689               	bcf	3977,3,c	;volatile
   926                           
   927                           ;main.c: 215:             LATA4 = 1;
   928   00005A  8889               	bsf	3977,4,c	;volatile
   929                           
   930                           ;main.c: 216:             LATA5 = 0;
   931   00005C  9A89               	bcf	3977,5,c	;volatile
   932   00005E                     
   933                           ;main.c: 217:             LATD = conv7seg[dezena_disp_par02];
   934   00005E  0E01               	movlw	low _conv7seg
   935   000060  2419               	addwf	_dezena_disp_par02^0,w,c
   936   000062  6ED9               	movwf	fsr2l,c
   937   000064  6ADA               	clrf	fsr2h,c
   938   000066  0E00               	movlw	high _conv7seg
   939   000068  22DA               	addwfc	fsr2h,f,c
   940   00006A  50DF               	movf	indf2,w,c
   941   00006C  6E8C               	movwf	140,c	;volatile
   942   00006E                     
   943                           ;main.c: 218:             estado = 3;
   944   00006E  0E03               	movlw	3
   945   000070  6E16               	movwf	mux_display@estado^0,c
   946                           
   947                           ;main.c: 219:             break;
   948   000072  EF68  F000         	goto	i2l153
   949   000076                     i2l152:
   950                           
   951                           ;main.c: 222:             LATA2 = 0;
   952   000076  9489               	bcf	3977,2,c	;volatile
   953                           
   954                           ;main.c: 223:             LATA3 = 0;
   955   000078  9689               	bcf	3977,3,c	;volatile
   956                           
   957                           ;main.c: 224:             LATA4 = 0;
   958   00007A  9889               	bcf	3977,4,c	;volatile
   959                           
   960                           ;main.c: 225:             LATA5 = 1;
   961   00007C  8A89               	bsf	3977,5,c	;volatile
   962   00007E                     
   963                           ;main.c: 226:             LATD = conv7seg[unidade_disp_par02];
   964   00007E  0E01               	movlw	low _conv7seg
   965   000080  2417               	addwf	_unidade_disp_par02^0,w,c
   966   000082  6ED9               	movwf	fsr2l,c
   967   000084  6ADA               	clrf	fsr2h,c
   968   000086  0E00               	movlw	high _conv7seg
   969   000088  22DA               	addwfc	fsr2h,f,c
   970   00008A  50DF               	movf	indf2,w,c
   971   00008C  6E8C               	movwf	140,c	;volatile
   972   00008E                     
   973                           ;main.c: 227:             estado = 0;
   974   00008E  0E00               	movlw	0
   975   000090  6E16               	movwf	mux_display@estado^0,c
   976                           
   977                           ;main.c: 228:             break;
   978   000092  EF68  F000         	goto	i2l153
   979   000096                     i2l869:
   980   000096  5016               	movf	mux_display@estado^0,w,c
   981   000098  6E1B               	movwf	??_mux_display^0,c
   982   00009A  6A1C               	clrf	(??_mux_display+1)^0,c
   983                           
   984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   985                           ; Switch size 1, requested type "simple"
   986                           ; Number of cases is 1, Range of values is 0 to 0
   987                           ; switch strategies available:
   988                           ; Name         Instructions Cycles
   989                           ; simple_byte            4     3 (average)
   990                           ;	Chosen strategy is simple_byte
   991   00009C  501C               	movf	(??_mux_display+1)^0,w,c
   992   00009E  0A00               	xorlw	0	; case 0
   993   0000A0  B4D8               	btfsc	status,2,c
   994   0000A2  EF55  F000         	goto	i2l983
   995   0000A6  EF68  F000         	goto	i2l153
   996   0000AA                     i2l983:
   997                           
   998                           ; Switch size 1, requested type "simple"
   999                           ; Number of cases is 4, Range of values is 0 to 3
  1000                           ; switch strategies available:
  1001                           ; Name         Instructions Cycles
  1002                           ; simple_byte           13     7 (average)
  1003                           ;	Chosen strategy is simple_byte
  1004   0000AA  501B               	movf	??_mux_display^0,w,c
  1005   0000AC  0A00               	xorlw	0	; case 0
  1006   0000AE  B4D8               	btfsc	status,2,c
  1007   0000B0  EF0B  F000         	goto	i2l148
  1008   0000B4  0A01               	xorlw	1	; case 1
  1009   0000B6  B4D8               	btfsc	status,2,c
  1010   0000B8  EF1B  F000         	goto	i2l150
  1011   0000BC  0A03               	xorlw	3	; case 2
  1012   0000BE  B4D8               	btfsc	status,2,c
  1013   0000C0  EF2B  F000         	goto	i2l151
  1014   0000C4  0A01               	xorlw	1	; case 3
  1015   0000C6  B4D8               	btfsc	status,2,c
  1016   0000C8  EF3B  F000         	goto	i2l152
  1017   0000CC  EF68  F000         	goto	i2l153
  1018   0000D0                     i2l153:
  1019   0000D0  0012               	return		;funcret
  1020   0000D2                     __end_of_mux_display:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _contador_displays *****************
  1024 ;; Defined at:
  1025 ;;		line 233 in file "main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1039 ;;      Params:         0       0       0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_f_timers
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text10
  1053   00016A                     __ptext10:
  1054                           	callstack 0
  1055   00016A                     _contador_displays:
  1056                           	callstack 26
  1057   00016A                     
  1058                           ;main.c: 235:     unidade_disp_par01++;
  1059   00016A  2A18               	incf	_unidade_disp_par01^0,f,c
  1060                           
  1061                           ;main.c: 236:     unidade_disp_par02--;
  1062   00016C  0617               	decf	_unidade_disp_par02^0,f,c
  1063   00016E                     
  1064                           ;main.c: 238:     if(unidade_disp_par01 > 9)
  1065   00016E  0E09               	movlw	9
  1066   000170  6418               	cpfsgt	_unidade_disp_par01^0,c
  1067   000172  EFBD  F000         	goto	i2u1_41
  1068   000176  EFBF  F000         	goto	i2u1_40
  1069   00017A                     i2u1_41:
  1070   00017A  EFC2  F000         	goto	i2l883
  1071   00017E                     i2u1_40:
  1072   00017E                     
  1073                           ;main.c: 239:     {;main.c: 240:         dezena_disp_par01++;
  1074   00017E  2A1A               	incf	_dezena_disp_par01^0,f,c
  1075   000180                     
  1076                           ;main.c: 241:         unidade_disp_par01 = 0;
  1077   000180  0E00               	movlw	0
  1078   000182  6E18               	movwf	_unidade_disp_par01^0,c
  1079   000184                     i2l883:
  1080                           
  1081                           ;main.c: 244:     if(unidade_disp_par02 < 1 || unidade_disp_par02 == 255)
  1082   000184  5017               	movf	_unidade_disp_par02^0,w,c
  1083   000186  B4D8               	btfsc	status,2,c
  1084   000188  EFC8  F000         	goto	i2u2_41
  1085   00018C  EFCA  F000         	goto	i2u2_40
  1086   000190                     i2u2_41:
  1087   000190  EFD2  F000         	goto	i2l887
  1088   000194                     i2u2_40:
  1089   000194  2817               	incf	_unidade_disp_par02^0,w,c
  1090   000196  A4D8               	btfss	status,2,c
  1091   000198  EFD0  F000         	goto	i2u3_41
  1092   00019C  EFD2  F000         	goto	i2u3_40
  1093   0001A0                     i2u3_41:
  1094   0001A0  EFD5  F000         	goto	i2l891
  1095   0001A4                     i2u3_40:
  1096   0001A4                     i2l887:
  1097                           
  1098                           ;main.c: 245:     {;main.c: 246:         dezena_disp_par02--;
  1099   0001A4  0619               	decf	_dezena_disp_par02^0,f,c
  1100   0001A6                     
  1101                           ;main.c: 247:         unidade_disp_par02 = 9;
  1102   0001A6  0E09               	movlw	9
  1103   0001A8  6E17               	movwf	_unidade_disp_par02^0,c
  1104   0001AA                     i2l891:
  1105                           
  1106                           ;main.c: 250:     if(dezena_disp_par01 > 9)
  1107   0001AA  0E09               	movlw	9
  1108   0001AC  641A               	cpfsgt	_dezena_disp_par01^0,c
  1109   0001AE  EFDB  F000         	goto	i2u4_41
  1110   0001B2  EFDD  F000         	goto	i2u4_40
  1111   0001B6                     i2u4_41:
  1112   0001B6  EFDF  F000         	goto	i2l160
  1113   0001BA                     i2u4_40:
  1114   0001BA                     
  1115                           ;main.c: 251:     {;main.c: 252:         dezena_disp_par01 = 0;
  1116   0001BA  0E00               	movlw	0
  1117   0001BC  6E1A               	movwf	_dezena_disp_par01^0,c
  1118   0001BE                     i2l160:
  1119                           
  1120                           ;main.c: 255:     if(dezena_disp_par02 < 1 || dezena_disp_par02 == 255)
  1121   0001BE  5019               	movf	_dezena_disp_par02^0,w,c
  1122   0001C0  B4D8               	btfsc	status,2,c
  1123   0001C2  EFE5  F000         	goto	i2u5_41
  1124   0001C6  EFE7  F000         	goto	i2u5_40
  1125   0001CA                     i2u5_41:
  1126   0001CA  EFEF  F000         	goto	i2l897
  1127   0001CE                     i2u5_40:
  1128   0001CE  2819               	incf	_dezena_disp_par02^0,w,c
  1129   0001D0  A4D8               	btfss	status,2,c
  1130   0001D2  EFED  F000         	goto	i2u6_41
  1131   0001D6  EFEF  F000         	goto	i2u6_40
  1132   0001DA                     i2u6_41:
  1133   0001DA  EFF1  F000         	goto	i2l164
  1134   0001DE                     i2u6_40:
  1135   0001DE                     i2l897:
  1136                           
  1137                           ;main.c: 256:     {;main.c: 257:         dezena_disp_par02 = 9;
  1138   0001DE  0E09               	movlw	9
  1139   0001E0  6E19               	movwf	_dezena_disp_par02^0,c
  1140   0001E2                     i2l164:
  1141   0001E2  0012               	return		;funcret
  1142   0001E4                     __end_of_contador_displays:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _f_int2 *****************
  1146 ;; Defined at:
  1147 ;;		line 269 in file "main.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		None
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1161 ;;      Params:         0       0       0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_f_interrupt_high
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text11
  1175   0002FA                     __ptext11:
  1176                           	callstack 0
  1177   0002FA                     _f_int2:
  1178                           	callstack 27
  1179   0002FA  0012               	return		;funcret
  1180   0002FC                     __end_of_f_int2:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _f_int1 *****************
  1184 ;; Defined at:
  1185 ;;		line 265 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		None
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         0       0       0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_f_interrupt_high
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text12
  1213   0002FC                     __ptext12:
  1214                           	callstack 0
  1215   0002FC                     _f_int1:
  1216                           	callstack 27
  1217   0002FC  0012               	return		;funcret
  1218   0002FE                     __end_of_f_int1:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _f_int0 *****************
  1222 ;; Defined at:
  1223 ;;		line 261 in file "main.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		None
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1237 ;;      Params:         0       0       0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_f_interrupt_high
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text13
  1251   0002FE                     __ptext13:
  1252                           	callstack 0
  1253   0002FE                     _f_int0:
  1254                           	callstack 27
  1255   0002FE  0012               	return		;funcret
  1256   000300                     __end_of_f_int0:
  1257                           	callstack 0
  1258   000000                     
  1259                           	psect	rparam
  1260   000000                     
  1261                           	psect	temp
  1262   00001F                     btemp:
  1263                           	callstack 0
  1264   00001F                     	ds	1
  1265   000000                     int$flags	set	btemp
  1266   000000                     wtemp8	set	btemp+1
  1267   000000                     ttemp5	set	btemp+1
  1268   000000                     ttemp6	set	btemp+4
  1269   000000                     ttemp7	set	btemp+8
  1270                           
  1271                           	psect	idloc
  1272                           
  1273                           ;Config register IDLOC0 @ 0x200000
  1274                           ;	unspecified, using default values
  1275   200000                     	org	2097152
  1276   200000  FF                 	db	255
  1277                           
  1278                           ;Config register IDLOC1 @ 0x200001
  1279                           ;	unspecified, using default values
  1280   200001                     	org	2097153
  1281   200001  FF                 	db	255
  1282                           
  1283                           ;Config register IDLOC2 @ 0x200002
  1284                           ;	unspecified, using default values
  1285   200002                     	org	2097154
  1286   200002  FF                 	db	255
  1287                           
  1288                           ;Config register IDLOC3 @ 0x200003
  1289                           ;	unspecified, using default values
  1290   200003                     	org	2097155
  1291   200003  FF                 	db	255
  1292                           
  1293                           ;Config register IDLOC4 @ 0x200004
  1294                           ;	unspecified, using default values
  1295   200004                     	org	2097156
  1296   200004  FF                 	db	255
  1297                           
  1298                           ;Config register IDLOC5 @ 0x200005
  1299                           ;	unspecified, using default values
  1300   200005                     	org	2097157
  1301   200005  FF                 	db	255
  1302                           
  1303                           ;Config register IDLOC6 @ 0x200006
  1304                           ;	unspecified, using default values
  1305   200006                     	org	2097158
  1306   200006  FF                 	db	255
  1307                           
  1308                           ;Config register IDLOC7 @ 0x200007
  1309                           ;	unspecified, using default values
  1310   200007                     	org	2097159
  1311   200007  FF                 	db	255
  1312                           
  1313                           	psect	config
  1314                           
  1315                           ; Padding undefined space
  1316   300000                     	org	3145728
  1317   300000  FF                 	db	255
  1318                           
  1319                           ;Config register CONFIG1H @ 0x300001
  1320                           ;	Oscillator Selection bits
  1321                           ;	OSC = HS, HS oscillator
  1322                           ;	Fail-Safe Clock Monitor Enable bit
  1323                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1324                           ;	Internal/External Oscillator Switchover bit
  1325                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1326   300001                     	org	3145729
  1327   300001  02                 	db	2
  1328                           
  1329                           ;Config register CONFIG2L @ 0x300002
  1330                           ;	Power-up Timer Enable bit
  1331                           ;	PWRT = OFF, PWRT disabled
  1332                           ;	Brown-out Reset Enable bits
  1333                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1334                           ;	Brown Out Reset Voltage bits
  1335                           ;	BORV = 3, Minimum setting
  1336   300002                     	org	3145730
  1337   300002  1F                 	db	31
  1338                           
  1339                           ;Config register CONFIG2H @ 0x300003
  1340                           ;	Watchdog Timer Enable bit
  1341                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1342                           ;	Watchdog Timer Postscale Select bits
  1343                           ;	WDTPS = 32768, 1:32768
  1344   300003                     	org	3145731
  1345   300003  1E                 	db	30
  1346                           
  1347                           ; Padding undefined space
  1348   300004                     	org	3145732
  1349   300004  FF                 	db	255
  1350                           
  1351                           ;Config register CONFIG3H @ 0x300005
  1352                           ;	CCP2 MUX bit
  1353                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1354                           ;	PORTB A/D Enable bit
  1355                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1356                           ;	Low-Power Timer1 Oscillator Enable bit
  1357                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1358                           ;	MCLR Pin Enable bit
  1359                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1360   300005                     	org	3145733
  1361   300005  83                 	db	131
  1362                           
  1363                           ;Config register CONFIG4L @ 0x300006
  1364                           ;	Stack Full/Underflow Reset Enable bit
  1365                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1366                           ;	Single-Supply ICSP Enable bit
  1367                           ;	LVP = OFF, Single-Supply ICSP disabled
  1368                           ;	Extended Instruction Set Enable bit
  1369                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1370                           ;	Background Debugger Enable bit
  1371                           ;	DEBUG = 0x1, unprogrammed default
  1372   300006                     	org	3145734
  1373   300006  81                 	db	129
  1374                           
  1375                           ; Padding undefined space
  1376   300007                     	org	3145735
  1377   300007  FF                 	db	255
  1378                           
  1379                           ;Config register CONFIG5L @ 0x300008
  1380                           ;	Code Protection bit
  1381                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1382                           ;	Code Protection bit
  1383                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1384                           ;	Code Protection bit
  1385                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1386                           ;	Code Protection bit
  1387                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1388   300008                     	org	3145736
  1389   300008  0F                 	db	15
  1390                           
  1391                           ;Config register CONFIG5H @ 0x300009
  1392                           ;	Boot Block Code Protection bit
  1393                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1394                           ;	Data EEPROM Code Protection bit
  1395                           ;	CPD = OFF, Data EEPROM not code-protected
  1396   300009                     	org	3145737
  1397   300009  C0                 	db	192
  1398                           
  1399                           ;Config register CONFIG6L @ 0x30000A
  1400                           ;	Write Protection bit
  1401                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1402                           ;	Write Protection bit
  1403                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1404                           ;	Write Protection bit
  1405                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1406                           ;	Write Protection bit
  1407                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1408   30000A                     	org	3145738
  1409   30000A  0F                 	db	15
  1410                           
  1411                           ;Config register CONFIG6H @ 0x30000B
  1412                           ;	Configuration Register Write Protection bit
  1413                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1414                           ;	Boot Block Write Protection bit
  1415                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1416                           ;	Data EEPROM Write Protection bit
  1417                           ;	WRTD = OFF, Data EEPROM not write-protected
  1418   30000B                     	org	3145739
  1419   30000B  E0                 	db	224
  1420                           
  1421                           ;Config register CONFIG7L @ 0x30000C
  1422                           ;	Table Read Protection bit
  1423                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1424                           ;	Table Read Protection bit
  1425                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1426                           ;	Table Read Protection bit
  1427                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1428                           ;	Table Read Protection bit
  1429                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1430   30000C                     	org	3145740
  1431   30000C  0F                 	db	15
  1432                           
  1433                           ;Config register CONFIG7H @ 0x30000D
  1434                           ;	Boot Block Table Read Protection bit
  1435                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1436   30000D                     	org	3145741
  1437   30000D  40                 	db	64
  1438                           tosu	equ	0xFFF
  1439                           tosh	equ	0xFFE
  1440                           tosl	equ	0xFFD
  1441                           stkptr	equ	0xFFC
  1442                           pclatu	equ	0xFFB
  1443                           pclath	equ	0xFFA
  1444                           pcl	equ	0xFF9
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           prodh	equ	0xFF4
  1450                           prodl	equ	0xFF3
  1451                           indf0	equ	0xFEF
  1452                           postinc0	equ	0xFEE
  1453                           postdec0	equ	0xFED
  1454                           preinc0	equ	0xFEC
  1455                           plusw0	equ	0xFEB
  1456                           fsr0h	equ	0xFEA
  1457                           fsr0l	equ	0xFE9
  1458                           wreg	equ	0xFE8
  1459                           indf1	equ	0xFE7
  1460                           postinc1	equ	0xFE6
  1461                           postdec1	equ	0xFE5
  1462                           preinc1	equ	0xFE4
  1463                           plusw1	equ	0xFE3
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           bsr	equ	0xFE0
  1467                           indf2	equ	0xFDF
  1468                           postinc2	equ	0xFDE
  1469                           postdec2	equ	0xFDD
  1470                           preinc2	equ	0xFDC
  1471                           plusw2	equ	0xFDB
  1472                           fsr2h	equ	0xFDA
  1473                           fsr2l	equ	0xFD9
  1474                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        21
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      4      30
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _f_interrupt_high in COMRAM

    _f_timers->_mux_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _f_interrupt_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _f_interrupt_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _f_interrupt_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _f_interrupt_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _f_interrupt_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _f_interrupt_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                 _disable_interrupts
                  _enable_interrupts
                     _interrupt_init
                           _setup_io
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_interrupts                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _f_interrupt_high                                     2     2      0       0
                                              2 COMRAM     2     2      0
                             _f_int0
                             _f_int1
                             _f_int2
                           _f_timers
 ---------------------------------------------------------------------------------
 (4) _f_timers                                             0     0      0       0
                  _contador_displays
                        _mux_display
 ---------------------------------------------------------------------------------
 (5) _mux_display                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _contador_displays                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _f_int2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _f_int1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _f_int0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup
     _disable_interrupts
     _enable_interrupts
     _interrupt_init
     _setup_io

 _f_interrupt_high (ROOT)
   _f_int0
   _f_int1
   _f_int2
   _f_timers
     _contador_displays
     _mux_display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      4      1E       1       23.8%
BITBIGSFRllhllh     2B      0       0      20        0.0%
BITBIGSFRlhl        18      0       0      17        0.0%
BITBIGSFRllhlh       E      0       0      19        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRlll         9      0       0      24        0.0%
BITBIGSFRllhlll      5      0       0      22        0.0%
BITBIGSFRllhh        4      0       0      18        0.0%
BITBIGSFRllhllh      1      0       0      21        0.0%
BITBIGSFRllhlll      1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      25        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Oct 07 13:49:46 2022

        _unidade_disp_par01 0018          _unidade_disp_par02 0017            f_timers@counter0 0014  
          f_timers@counter1 0012      __end_of_interrupt_init 02C4                         l130 02F0  
                       l133 02F6                         l142 02F8                         l127 02A8  
                       l136 028E                         l139 02C2                         l901 0272  
                       l903 02AA                         l905 02F2                         l931 029E  
                       l923 0290                         l933 02A0                         l925 0294  
                       l935 02A2                         l927 0298                         l929 029C  
                       l971 02DE                         l969 02DA                         l899 02EA  
                       _GIE 007F97                        _LATA 000F89                        _LATB 000F8A  
                      _LATD 000F8C                        _IPEN 007E87                        _PEIE 007F96  
                      i2l99 015E                        _TMR0 000FD6                        _main 02DA  
                      _loop 02F8                        fsr2h 000FDA                        indf2 000FDF  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 001F  
                      start 000E                ___param_bank 000000                       ?_main 001B  
                     ?_loop 001B             ?_interrupt_init 001B                       _T0CON 000FD5  
                     _LATA2 007C4A                       _LATA3 007C4B                       _LATA4 007C4C  
                     _LATA5 007C4D                       i2l124 0238                       i2l150 0036  
                     i2l151 0056                       i2l160 01BE                       i2l152 0076  
                     i2l153 00D0                       i2l170 02FC                       i2l164 01E2  
                     i2l148 0016                       i2l173 02FA                       i2l167 02FE  
                     i2l911 0202                       i2l921 0230                       i2l913 0206  
                     i2l851 001E                       i2l915 020E                       i2l907 01E4  
                     i2l861 006E                       i2l853 002E                       i2l917 0224  
                     i2l909 01FA                       i2l941 00F2                       i2l863 007E  
                     i2l855 003E                       i2l919 022C                       i2l951 0118  
                     i2l943 00F6                       i2l881 0180                       i2l865 008E  
                     i2l857 004E                       i2l849 0012                       i2l961 013C  
                     i2l953 011A                       i2l945 00F8                       i2l937 00DC  
                     i2l891 01AA                       i2l883 0184                       i2l875 016A  
                     i2l859 005E                       i2l963 014A                       i2l955 0128  
                     i2l947 0106                       i2l939 00EA                       i2l893 01BA  
                     i2l885 0194                       i2l877 016E                       i2l869 0096  
                     i2l965 0158                       i2l957 0136                       i2l949 0114  
                     i2l895 01CE                       i2l887 01A4                       i2l879 017E  
                     i2l983 00AA                       i2l967 015C                       i2l959 013A  
                     i2l897 01DE                       i2l889 01A6                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISD 000F95          _disable_interrupts 02EA  
                     _setup 0290                       tablat 000FF5                       ttemp5 0020  
                     ttemp6 0023                       ttemp7 0027                       status 000FD8  
                     wtemp8 0020         ?_disable_interrupts 001B            _f_interrupt_high 0008  
           __initialization 023A                __end_of_main 02EA                __end_of_loop 02FA  
                    ??_main 001F                      ??_loop 001F               __activetblptr 000002  
      ??_disable_interrupts 001F                      _ADCON1 000FC1                      ?_setup 001B  
                    _INT0IE 007F94                      _INT0IF 007F91                      _INT1IE 007F83  
                    _INT1IF 007F80                      _INT2IE 007F84                      _INT2IF 007F81  
                    _INTCON 000FF2                      _TMR0IE 007F95                      _TMR0IF 007F92  
                    i2u1_40 017E                      i2u1_41 017A                      i2u2_40 0194  
                    i2u2_41 0190                      i2u3_40 01A4                      i2u3_41 01A0  
                    i2u4_40 01BA                      i2u4_41 01B6                      i2u5_40 01CE  
                    i2u5_41 01CA                      i2u6_40 01DE                      i2u6_41 01DA  
                    i2u7_40 01FA                      i2u7_41 01F6                      i2u8_40 0224  
                    i2u8_41 0220                      i2u9_40 00EA                      i2u9_41 00E6  
          __end_of_f_timers 023A                      _f_int0 02FE                      _f_int1 02FC  
                    _f_int2 02FA                      isa$std 000001                __pdataCOMRAM 0001  
                    tblptrh 000FF7                      tblptrl 000FF6            __end_of_setup_io 0290  
                    tblptru 000FF8                ?_mux_display 001B                  __accesstop 0080  
   __end_of__initialization 0264               ___rparam_used 000001              __pcstackCOMRAM 001B  
             __end_of_setup 02AA                     ??_setup 001F            ??_interrupt_init 001F  
                   ?_f_int0 001B                     ?_f_int1 001B                     ?_f_int2 001B  
                   _INTCON2 000FF1                     _INTCON3 000FF0           _contador_displays 016A  
                   i2u10_40 0106                     i2u10_41 0102                     i2u11_40 0114  
  __end_of_f_interrupt_high 016A                     i2u11_41 0110                     i2u12_40 0128  
                   i2u12_41 0124                     i2u13_40 0136                     i2u13_41 0132  
                   i2u14_40 014A                     i2u14_41 0146                     i2u15_40 0158  
                   i2u15_41 0154                   ?_f_timers 001B          ?_contador_displays 001B  
       ??_contador_displays 001B                     __Hparam 0000                     __Lparam 0000  
                 ?_setup_io 001B                     __pcinit 023A                     __ramtop 0600  
                   __ptext0 02DA                     __ptext1 0290                     __ptext2 0272  
                   __ptext3 02AA                     __ptext4 02F2                     __ptext5 02EA  
                   __ptext6 02F8                     __ptext8 01E4                     __ptext9 0012  
 __end_of_contador_displays 01E4                  ??_f_timers 001D              __pintcode_body 00D2  
      end_of_initialization 0264               __Lmediumconst 0000                     int_func 00D2  
                   postdec1 000FE5                  ??_setup_io 001F                     postinc0 000FEE  
            __end_of_f_int0 0300              __end_of_f_int1 02FE              __end_of_f_int2 02FC  
             __pidataCOMRAM 02C4           _enable_interrupts 02F2          ?_enable_interrupts 001B  
       start_initialization 023A         ??_enable_interrupts 001F                    ??_f_int0 001B  
                  ??_f_int1 001B                    ??_f_int2 001B   __end_of_enable_interrupts 02F8  
               __pbssCOMRAM 0016           ?_f_interrupt_high 001B          ??_f_interrupt_high 001D  
                 __pintcode 0008           _dezena_disp_par01 001A           _dezena_disp_par02 0019  
                 copy_data0 024E               ??_mux_display 001B                    __Hrparam 0000  
                  __Lrparam 0000  __end_of_disable_interrupts 02F2                    _f_timers 01E4  
                  __ptext10 016A                    __ptext11 02FA                    __ptext12 02FC  
                  __ptext13 02FE                    _conv7seg 0001           mux_display@estado 0016  
       __end_of_mux_display 00D2                    isa$xinst 000000                    _setup_io 0272  
                  int$flags 001F                    intlevel2 0000              _interrupt_init 02AA  
               _mux_display 0012  
