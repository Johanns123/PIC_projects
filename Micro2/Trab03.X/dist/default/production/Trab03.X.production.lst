

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 30 09:01:42 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Version 2.40
    75                           ; Generated 17/11/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4520 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataCOMRAM
   111   00285E                     __pidataCOMRAM:
   112                           	callstack 0
   113                           
   114                           ;initializer for _duty_LCD1_TECLADO
   115   00285E  20                 	db	32
   116                           
   117                           	psect	idataBANK0
   118   002626                     __pidataBANK0:
   119                           	callstack 0
   120                           
   121                           ;initializer for _linha2
   122   002626  41                 	db	65
   123   002627  42                 	db	66
   124   002628  43                 	db	67
   125   002629  44                 	db	68
   126   00262A  45                 	db	69
   127   00262B  46                 	db	70
   128   00262C  47                 	db	71
   129   00262D  48                 	db	72
   130   00262E  49                 	db	73
   131   00262F  4A                 	db	74
   132   002630  00                 	db	0
   133   002631  00                 	db	0
   134   002632  00                 	db	0
   135   002633  00                 	db	0
   136   002634  00                 	db	0
   137   002635  00                 	db	0
   138   002636  00                 	db	0
   139                           
   140                           ;initializer for _linha1
   141   002637  41                 	db	65
   142   002638  42                 	db	66
   143   002639  43                 	db	67
   144   00263A  44                 	db	68
   145   00263B  45                 	db	69
   146   00263C  46                 	db	70
   147   00263D  47                 	db	71
   148   00263E  48                 	db	72
   149   00263F  49                 	db	73
   150   002640  4A                 	db	74
   151   002641  00                 	db	0
   152   002642  00                 	db	0
   153   002643  00                 	db	0
   154   002644  00                 	db	0
   155   002645  00                 	db	0
   156   002646  00                 	db	0
   157   002647  00                 	db	0
   158                           
   159                           ;initializer for _conv7seg
   160   002648  3F                 	db	63
   161   002649  06                 	db	6
   162   00264A  5B                 	db	91
   163   00264B  4F                 	db	79
   164   00264C  66                 	db	102
   165   00264D  6D                 	db	109
   166   00264E  7D                 	db	125
   167   00264F  07                 	db	7
   168   002650  7F                 	db	127
   169   002651  6F                 	db	111
   170   002652  77                 	db	119
   171   002653  7C                 	db	124
   172   002654  39                 	db	57
   173   002655  5E                 	db	94
   174   002656  79                 	db	121
   175   002657  71                 	db	113
   176   002658  00                 	db	0
   177                           
   178                           ;initializer for f_timers@counter3
   179   002659  0001               	dw	1
   180                           
   181                           ;initializer for f_timers@counter2
   182   00265B  0001               	dw	1
   183                           
   184                           ;initializer for f_timers@counter1
   185   00265D  0001               	dw	1
   186                           
   187                           ;initializer for f_timers@counter0
   188   00265F  0001               	dw	1
   189                           
   190                           ;initializer for read_keyb@m_dado_RB5
   191   002661  01                 	db	1
   192                           
   193                           ;initializer for read_keyb@m_dado_RB4
   194   002662  01                 	db	1
   195                           
   196                           ;initializer for read_keyb@m_dado_RB3
   197   002663  01                 	db	1
   198                           
   199                           ;initializer for _duty_LCD4_TECLADO
   200   002664  20                 	db	32
   201                           
   202                           ;initializer for _duty_LCD3_TECLADO
   203   002665  20                 	db	32
   204                           
   205                           ;initializer for _duty_LCD2_TECLADO
   206   002666  20                 	db	32
   207   000000                     _INTCON2	set	4081
   208                           
   209                           	psect	nvBANK0
   210   0000F4                     __pnvBANK0:
   211                           	callstack 0
   212   0000F4                     _temporizador2:
   213                           	callstack 0
   214   0000F4                     	ds	2
   215   0000F6                     _temporizador1:
   216                           	callstack 0
   217   0000F6                     	ds	2
   218   000000                     _INTCON3	set	4080
   219   000000                     _INTCON	set	4082
   220   000000                     _LATA	set	3977
   221   000000                     _TMR0IE	set	32661
   222   000000                     _PEIE	set	32662
   223   000000                     _GIE	set	32663
   224   000000                     _INT2IE	set	32644
   225   000000                     _INT2IF	set	32641
   226   000000                     _INT1IE	set	32643
   227   000000                     _INT0IE	set	32660
   228   000000                     _INT0IF	set	32657
   229   000000                     _LATA4	set	31820
   230   000000                     _LATA3	set	31819
   231   000000                     _LATA5	set	31821
   232   000000                     _GO	set	32273
   233   000000                     _PORTB	set	3969
   234   000000                     _PORTD	set	3971
   235   000000                     _ADCON2	set	4032
   236   000000                     _ADCON1	set	4033
   237   000000                     _ADCON0	set	4034
   238   000000                     _LATA2	set	31818
   239   000000                     _ADRESH	set	4036
   240   000000                     _T2CON	set	4042
   241   000000                     _LATB	set	3978
   242   000000                     _LATD	set	3980
   243   000000                     _TRISA	set	3986
   244   000000                     _CCP1CON	set	4029
   245   000000                     _TMR0	set	4054
   246   000000                     _PR2	set	4043
   247   000000                     _IPEN	set	32391
   248   000000                     _TMR0IF	set	32658
   249   000000                     _CCPR1L	set	4030
   250   000000                     _TRISE	set	3990
   251   000000                     _TRISD	set	3989
   252   000000                     _TRISC	set	3988
   253   000000                     _TRISB	set	3987
   254   000000                     _ADIE	set	31982
   255   000000                     _ADIF	set	31990
   256   000000                     _INT1IF	set	32640
   257   000000                     _T0CON	set	4053
   258   000000                     _PORTEbits	set	3972
   259                           
   260                           	psect	smallconst
   261   000600                     __psmallconst:
   262                           	callstack 0
   263   000600  00                 	db	0
   264   000601                     STR_2:
   265   000601  25                 	db	37
   266   000602  64                 	db	100	;'d'
   267   000603  25                 	db	37
   268   000604  25                 	db	37
   269   000605  00                 	db	0
   270   000606                     STR_1:
   271   000606  30                 	db	48	;'0'
   272   000607  25                 	db	37
   273   000608  00                 	db	0
   274   000609  00                 	db	0	; dummy byte at the end
   275   000000                     
   276                           ; #config settings
   277                           
   278                           	psect	cinit
   279   00242A                     __pcinit:
   280                           	callstack 0
   281   00242A                     start_initialization:
   282                           	callstack 0
   283   00242A                     __initialization:
   284                           	callstack 0
   285                           
   286                           ; Initialize objects allocated to BANK0 (65 bytes)
   287                           ; load TBLPTR registers with __pidataBANK0
   288   00242A  0E26               	movlw	low __pidataBANK0
   289   00242C  6EF6               	movwf	tblptrl,c
   290   00242E  0E26               	movlw	high __pidataBANK0
   291   002430  6EF7               	movwf	tblptrh,c
   292   002432  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   293   002434  6EF8               	movwf	tblptru,c
   294   002436  EE00  F080         	lfsr	0,__pdataBANK0
   295   00243A  EE10 F041          	lfsr	1,65
   296   00243E                     copy_data0:
   297   00243E  0009               	tblrd		*+
   298   002440  CFF5 FFEE          	movff	tablat,postinc0
   299   002444  50E5               	movf	postdec1,w,c
   300   002446  50E1               	movf	fsr1l,w,c
   301   002448  E1FA               	bnz	copy_data0
   302                           
   303                           ; Initialize objects allocated to COMRAM (1 bytes)
   304                           ; load TBLPTR registers with __pidataCOMRAM
   305   00244A  0E5E               	movlw	low __pidataCOMRAM
   306   00244C  6EF6               	movwf	tblptrl,c
   307   00244E  0E28               	movlw	high __pidataCOMRAM
   308   002450  6EF7               	movwf	tblptrh,c
   309   002452  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   310   002454  6EF8               	movwf	tblptru,c
   311   002456  0009               	tblrd		*+	;fetch initializer
   312   002458  CFF5 F07E          	movff	tablat,__pdataCOMRAM
   313                           
   314                           ; Clear objects allocated to BANK1 (32 bytes)
   315   00245C  EE01  F000         	lfsr	0,__pbssBANK1
   316   002460  0E20               	movlw	32
   317   002462                     clear_0:
   318   002462  6AEE               	clrf	postinc0,c
   319   002464  06E8               	decf	wreg,f,c
   320   002466  E1FD               	bnz	clear_0
   321                           
   322                           ; Clear objects allocated to BANK0 (41 bytes)
   323   002468  EE00  F0C1         	lfsr	0,__pbssBANK0
   324   00246C  0E29               	movlw	41
   325   00246E                     clear_1:
   326   00246E  6AEE               	clrf	postinc0,c
   327   002470  06E8               	decf	wreg,f,c
   328   002472  E1FD               	bnz	clear_1
   329                           
   330                           ; Clear objects allocated to COMRAM (8 bytes)
   331   002474  EE00  F076         	lfsr	0,__pbssCOMRAM
   332   002478  0E08               	movlw	8
   333   00247A                     clear_2:
   334   00247A  6AEE               	clrf	postinc0,c
   335   00247C  06E8               	decf	wreg,f,c
   336   00247E  E1FD               	bnz	clear_2
   337   002480                     end_of_initialization:
   338                           	callstack 0
   339   002480                     __end_of__initialization:
   340                           	callstack 0
   341   002480  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   342   002482  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   343   002484  0E00               	movlw	low (__Lmediumconst shr (0+16))
   344   002486  6EF8               	movwf	tblptru,c
   345   002488  0100               	movlb	0
   346   00248A  EFFD  F013         	goto	_main	;jump to C main() function
   347                           
   348                           	psect	bssCOMRAM
   349   000076                     __pbssCOMRAM:
   350                           	callstack 0
   351   000076                     _pwm_ventoinha:
   352                           	callstack 0
   353   000076                     	ds	2
   354   000078                     read_keyboard@dado:
   355                           	callstack 0
   356   000078                     	ds	1
   357   000079                     _dado4:
   358                           	callstack 0
   359   000079                     	ds	1
   360   00007A                     _dado3:
   361                           	callstack 0
   362   00007A                     	ds	1
   363   00007B                     _dado2:
   364                           	callstack 0
   365   00007B                     	ds	1
   366   00007C                     _dado1:
   367                           	callstack 0
   368   00007C                     	ds	1
   369   00007D                     _i:
   370                           	callstack 0
   371   00007D                     	ds	1
   372                           
   373                           	psect	dataCOMRAM
   374   00007E                     __pdataCOMRAM:
   375                           	callstack 0
   376   00007E                     _duty_LCD1_TECLADO:
   377                           	callstack 0
   378   00007E                     	ds	1
   379                           
   380                           	psect	bssBANK0
   381   0000C1                     __pbssBANK0:
   382                           	callstack 0
   383   0000C1                     _duty_teclado:
   384                           	callstack 0
   385   0000C1                     	ds	8
   386   0000C9                     _AD_data:
   387                           	callstack 0
   388   0000C9                     	ds	4
   389   0000CD                     _width:
   390                           	callstack 0
   391   0000CD                     	ds	2
   392   0000CF                     _prec:
   393                           	callstack 0
   394   0000CF                     	ds	2
   395   0000D1                     f_int2@duty_normalized:
   396                           	callstack 0
   397   0000D1                     	ds	2
   398   0000D3                     _porcentagem:
   399                           	callstack 0
   400   0000D3                     	ds	2
   401   0000D5                     _flags:
   402                           	callstack 0
   403   0000D5                     	ds	1
   404   0000D6                     _memoria_dado:
   405                           	callstack 0
   406   0000D6                     	ds	1
   407   0000D7                     _duty_AD:
   408                           	callstack 0
   409   0000D7                     	ds	1
   410   0000D8                     mux_display@estado:
   411                           	callstack 0
   412   0000D8                     	ds	1
   413   0000D9                     _estado_sequencia02:
   414                           	callstack 0
   415   0000D9                     	ds	1
   416   0000DA                     _estado_sequencia01:
   417                           	callstack 0
   418   0000DA                     	ds	1
   419   0000DB                     _display4:
   420                           	callstack 0
   421   0000DB                     	ds	1
   422   0000DC                     _display3:
   423                           	callstack 0
   424   0000DC                     	ds	1
   425   0000DD                     _display2:
   426                           	callstack 0
   427   0000DD                     	ds	1
   428   0000DE                     _display1:
   429                           	callstack 0
   430   0000DE                     	ds	1
   431   0000DF                     ADC_maq@estado:
   432                           	callstack 0
   433   0000DF                     	ds	1
   434   0000E0                     _buffer:
   435                           	callstack 0
   436   0000E0                     	ds	10
   437                           
   438                           	psect	dataBANK0
   439   000080                     __pdataBANK0:
   440                           	callstack 0
   441   000080                     _linha2:
   442                           	callstack 0
   443   000080                     	ds	17
   444   000091                     _linha1:
   445                           	callstack 0
   446   000091                     	ds	17
   447   0000A2                     _conv7seg:
   448                           	callstack 0
   449   0000A2                     	ds	17
   450   0000B3                     f_timers@counter3:
   451                           	callstack 0
   452   0000B3                     	ds	2
   453   0000B5                     f_timers@counter2:
   454                           	callstack 0
   455   0000B5                     	ds	2
   456   0000B7                     f_timers@counter1:
   457                           	callstack 0
   458   0000B7                     	ds	2
   459   0000B9                     f_timers@counter0:
   460                           	callstack 0
   461   0000B9                     	ds	2
   462   0000BB                     read_keyb@m_dado_RB5:
   463                           	callstack 0
   464   0000BB                     	ds	1
   465   0000BC                     read_keyb@m_dado_RB4:
   466                           	callstack 0
   467   0000BC                     	ds	1
   468   0000BD                     read_keyb@m_dado_RB3:
   469                           	callstack 0
   470   0000BD                     	ds	1
   471   0000BE                     _duty_LCD4_TECLADO:
   472                           	callstack 0
   473   0000BE                     	ds	1
   474   0000BF                     _duty_LCD3_TECLADO:
   475                           	callstack 0
   476   0000BF                     	ds	1
   477   0000C0                     _duty_LCD2_TECLADO:
   478                           	callstack 0
   479   0000C0                     	ds	1
   480                           
   481                           	psect	bssBANK1
   482   000100                     __pbssBANK1:
   483                           	callstack 0
   484   000100                     _dbuf:
   485                           	callstack 0
   486   000100                     	ds	32
   487                           
   488                           	psect	cstackBANK1
   489   000120                     __pcstackBANK1:
   490                           	callstack 0
   491   000120                     lcd_wr@val:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x0
   495   000120                     	ds	1
   496   000121                     lcd_cmd@val:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x1
   500   000121                     	ds	1
   501   000122                     ??_lcd_init:
   502                           
   503                           ; 1 bytes @ 0x2
   504   000122                     	ds	1
   505   000123                     
   506                           ; 1 bytes @ 0x3
   507                           
   508                           	psect	cstackBANK0
   509   0000EA                     __pcstackBANK0:
   510                           	callstack 0
   511   0000EA                     ??_f_interrupt_high:
   512                           
   513                           ; 1 bytes @ 0x0
   514   0000EA                     	ds	10
   515                           
   516                           	psect	cstackCOMRAM
   517   000001                     __pcstackCOMRAM:
   518                           	callstack 0
   519   000001                     ??_mux_display:
   520   000001                     ?___wmul:
   521                           	callstack 0
   522   000001                     ?___lwmod:
   523                           	callstack 0
   524   000001                     ?___xxtofl:
   525                           	callstack 0
   526   000001                     ?___aodiv:
   527                           	callstack 0
   528   000001                     ?___aomod:
   529                           	callstack 0
   530   000001                     select_channel@channel:
   531                           	callstack 0
   532   000001                     i2lcd_wr@val:
   533                           	callstack 0
   534   000001                     f_pwm@duty:
   535                           	callstack 0
   536   000001                     ler_teclado@i:
   537                           	callstack 0
   538   000001                     ___wmul@multiplier:
   539                           	callstack 0
   540   000001                     ___lwmod@dividend:
   541                           	callstack 0
   542   000001                     fputc@c:
   543                           	callstack 0
   544   000001                     ___xxtofl@val:
   545                           	callstack 0
   546   000001                     ___aodiv@dividend:
   547                           	callstack 0
   548   000001                     ___aomod@dividend:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x0
   552   000001                     	ds	1
   553   000002                     ??_ADC_maq:
   554   000002                     lcd_dat@val:
   555                           	callstack 0
   556   000002                     i2lcd_cmd@val:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x1
   560   000002                     	ds	1
   561   000003                     ??_f_pwm:
   562   000003                     lcd_str@str:
   563                           	callstack 0
   564   000003                     ler_teclado@i_390:
   565                           	callstack 0
   566   000003                     ___wmul@multiplicand:
   567                           	callstack 0
   568   000003                     ___lwmod@divisor:
   569                           	callstack 0
   570   000003                     fputc@fp:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x2
   574   000003                     	ds	2
   575   000005                     ??_fputc:
   576   000005                     ??_lcd_str:
   577   000005                     ??___xxtofl:
   578   000005                     ___lwmod@counter:
   579                           	callstack 0
   580   000005                     ler_teclado@i_391:
   581                           	callstack 0
   582   000005                     ___wmul@product:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x4
   586   000005                     	ds	1
   587   000006                     ?___lwdiv:
   588                           	callstack 0
   589   000006                     ___lwdiv@dividend:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x5
   593   000006                     	ds	1
   594   000007                     lcd_str@i:
   595                           	callstack 0
   596   000007                     ler_teclado@saida:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x6
   600   000007                     	ds	1
   601   000008                     ler_teclado@entrada:
   602                           	callstack 0
   603   000008                     ___lwdiv@divisor:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x7
   607   000008                     	ds	1
   608   000009                     ??_read_keyboard:
   609   000009                     ___xxtofl@sign:
   610                           	callstack 0
   611   000009                     ___aodiv@divisor:
   612                           	callstack 0
   613   000009                     ___aomod@divisor:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0x8
   617   000009                     	ds	1
   618   00000A                     ___xxtofl@exp:
   619                           	callstack 0
   620   00000A                     ___lwdiv@quotient:
   621                           	callstack 0
   622   00000A                     fputs@s:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x9
   626   00000A                     	ds	1
   627   00000B                     read_keyboard@i:
   628                           	callstack 0
   629   00000B                     ___xxtofl@arg:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0xA
   633   00000B                     	ds	1
   634   00000C                     ___lwdiv@counter:
   635                           	callstack 0
   636   00000C                     fputs@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0xB
   640   00000C                     	ds	2
   641   00000E                     fputs@c:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0xD
   645   00000E                     	ds	1
   646   00000F                     ?___flmul:
   647                           	callstack 0
   648   00000F                     fputs@i:
   649                           	callstack 0
   650   00000F                     ___flmul@b:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0xE
   654   00000F                     	ds	2
   655   000011                     ___aodiv@counter:
   656                           	callstack 0
   657   000011                     ___aomod@counter:
   658                           	callstack 0
   659   000011                     pad@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x10
   663   000011                     	ds	1
   664   000012                     ___aodiv@sign:
   665                           	callstack 0
   666   000012                     ___aomod@sign:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x11
   670   000012                     	ds	1
   671   000013                     ?_abs:
   672                           	callstack 0
   673   000013                     pad@buf:
   674                           	callstack 0
   675   000013                     abs@a:
   676                           	callstack 0
   677   000013                     ___flmul@a:
   678                           	callstack 0
   679   000013                     ___aodiv@quotient:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x12
   683   000013                     	ds	2
   684   000015                     ??_abs:
   685   000015                     pad@p:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x14
   689   000015                     	ds	2
   690   000017                     ??___flmul:
   691   000017                     ??_pad:
   692                           
   693                           ; 1 bytes @ 0x16
   694   000017                     	ds	1
   695   000018                     pad@i:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x17
   699   000018                     	ds	2
   700   00001A                     pad@w:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x19
   704   00001A                     	ds	1
   705   00001B                     ___flmul@sign:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x1A
   709   00001B                     	ds	1
   710   00001C                     dtoa@fp:
   711                           	callstack 0
   712   00001C                     ___flmul@grs:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x1B
   716   00001C                     	ds	2
   717   00001E                     dtoa@d:
   718                           	callstack 0
   719                           
   720                           ; 8 bytes @ 0x1D
   721   00001E                     	ds	2
   722   000020                     ___flmul@aexp:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x1F
   726   000020                     	ds	1
   727   000021                     ___flmul@bexp:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x20
   731   000021                     	ds	1
   732   000022                     ___flmul@prod:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x21
   736   000022                     	ds	4
   737   000026                     ??_dtoa:
   738   000026                     ___flmul@temp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x25
   742   000026                     	ds	2
   743   000028                     ?___fldiv:
   744                           	callstack 0
   745   000028                     ___fldiv@b:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x27
   749   000028                     	ds	4
   750   00002C                     ___fldiv@a:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x2B
   754   00002C                     	ds	2
   755   00002E                     _dtoa$910:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x2D
   759   00002E                     	ds	2
   760   000030                     ??___fldiv:
   761   000030                     dtoa@p:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x2F
   765   000030                     	ds	2
   766   000032                     dtoa@w:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x31
   770   000032                     	ds	2
   771   000034                     ___fldiv@rem:
   772                           	callstack 0
   773   000034                     dtoa@n:
   774                           	callstack 0
   775                           
   776                           ; 8 bytes @ 0x33
   777   000034                     	ds	4
   778   000038                     ___fldiv@sign:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x37
   782   000038                     	ds	1
   783   000039                     ___fldiv@new_exp:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x38
   787   000039                     	ds	2
   788   00003B                     ___fldiv@grs:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x3A
   792   00003B                     	ds	1
   793   00003C                     dtoa@i:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x3B
   797   00003C                     	ds	2
   798   00003E                     dtoa@s:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x3D
   802   00003E                     	ds	1
   803   00003F                     ___fldiv@bexp:
   804                           	callstack 0
   805   00003F                     vfpfcnvrt@fp:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x3E
   809   00003F                     	ds	1
   810   000040                     ___fldiv@aexp:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x3F
   814   000040                     	ds	1
   815   000041                     ?___fltol:
   816                           	callstack 0
   817   000041                     vfpfcnvrt@fmt:
   818                           	callstack 0
   819   000041                     ___fltol@f1:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x40
   823   000041                     	ds	2
   824   000043                     vfpfcnvrt@ap:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x42
   828   000043                     	ds	2
   829   000045                     ??___fltol:
   830   000045                     ??_vfpfcnvrt:
   831                           
   832                           ; 1 bytes @ 0x44
   833   000045                     	ds	2
   834   000047                     vfpfcnvrt@convarg:
   835                           	callstack 0
   836                           
   837                           ; 8 bytes @ 0x46
   838   000047                     	ds	2
   839   000049                     ___fltol@sign1:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x48
   843   000049                     	ds	1
   844   00004A                     ___fltol@exp1:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x49
   848   00004A                     	ds	5
   849   00004F                     vfpfcnvrt@cp:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x4E
   853   00004F                     	ds	2
   854   000051                     ?_vfprintf:
   855                           	callstack 0
   856   000051                     vfprintf@fp:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x50
   860   000051                     	ds	2
   861   000053                     vfprintf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x52
   865   000053                     	ds	2
   866   000055                     vfprintf@ap:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x54
   870   000055                     	ds	2
   871   000057                     vfprintf@cfmt:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x56
   875   000057                     	ds	2
   876   000059                     ?_sprintf:
   877                           	callstack 0
   878   000059                     sprintf@s:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x58
   882   000059                     	ds	2
   883   00005B                     sprintf@fmt:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x5A
   887   00005B                     	ds	4
   888   00005F                     sprintf@ap:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x5E
   892   00005F                     	ds	2
   893   000061                     sprintf@f:
   894                           	callstack 0
   895                           
   896                           ; 11 bytes @ 0x60
   897   000061                     	ds	11
   898   00006C                     ??_Read_AD:
   899   00006C                     ??_f_int2:
   900                           
   901                           ; 1 bytes @ 0x6B
   902   00006C                     	ds	2
   903   00006E                     Read_AD@data:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x6D
   907   00006E                     	ds	2
   908   000070                     Read_AD@pwm_aux:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x6F
   912   000070                     	ds	2
   913   000072                     read_keyb@dado_RB3:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x71
   917   000072                     	ds	1
   918   000073                     read_keyb@dado_RB4:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x72
   922   000073                     	ds	1
   923   000074                     read_keyb@dado_RB5:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x73
   927   000074                     	ds	1
   928   000075                     read_keyb@dado:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x74
   932   000075                     	ds	1
   933   000076                     
   934                           ; 1 bytes @ 0x75
   935 ;;
   936 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   937 ;;
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 34 in file "main.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2  351[None  ] int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   954 ;;      Params:         0       0       0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels required when called: 16
   960 ;; This function calls:
   961 ;;		_loop
   962 ;;		_setup
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text0
   969   0027FA                     __ptext0:
   970                           	callstack 0
   971   0027FA                     _main:
   972                           	callstack 15
   973   0027FA                     
   974                           ;main.c: 37:    setup();
   975   0027FA  EC79  F012         	call	_setup	;wreg free
   976   0027FE                     l3693:
   977   0027FE  EC2D  F014         	call	_loop	;wreg free
   978   002802  EFFF  F013         	goto	l3693
   979   002806  EF07  F000         	goto	start
   980   00280A                     __end_of_main:
   981                           	callstack 0
   982                           
   983 ;; *************** function _setup *****************
   984 ;; Defined at:
   985 ;;		line 16 in file "IO.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   999 ;;      Params:         0       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 15
  1006 ;; This function calls:
  1007 ;;		_AD_init
  1008 ;;		_disable_interrupts
  1009 ;;		_enable_interrupts
  1010 ;;		_interrupt_init
  1011 ;;		_lcd_init
  1012 ;;		_setup_io
  1013 ;;		_start_AD_conversion
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text1
  1020   0024F2                     __ptext1:
  1021                           	callstack 0
  1022   0024F2                     _setup:
  1023                           	callstack 15
  1024   0024F2                     
  1025                           ;IO.c: 18:     disable_interrupts();
  1026   0024F2  EC1D  F014         	call	_disable_interrupts	;wreg free
  1027   0024F6                     
  1028                           ;IO.c: 19:     setup_io();
  1029   0024F6  ECBD  F013         	call	_setup_io	;wreg free
  1030   0024FA                     
  1031                           ;IO.c: 20:     interrupt_init();
  1032   0024FA  ECF0  F013         	call	_interrupt_init	;wreg free
  1033   0024FE                     
  1034                           ;IO.c: 21:     T2CON = 0b00000101;
  1035   0024FE  0E05               	movlw	5
  1036   002500  6ECA               	movwf	202,c	;volatile
  1037   002502                     
  1038                           ;IO.c: 22:     PR2 = 255;
  1039   002502  68CB               	setf	203,c	;volatile
  1040   002504                     
  1041                           ;IO.c: 23:     CCP1CON = 0b00001100;
  1042   002504  0E0C               	movlw	12
  1043   002506  6EBD               	movwf	189,c	;volatile
  1044   002508                     
  1045                           ;IO.c: 24:     AD_init();
  1046   002508  EC05  F014         	call	_AD_init	;wreg free
  1047   00250C                     
  1048                           ;IO.c: 25:     LATA2 = 1, LATA3 = 1, LATA4 = 1, LATA5 = 1;
  1049   00250C  8489               	bsf	3977,2,c	;volatile
  1050   00250E  8689               	bsf	3977,3,c	;volatile
  1051   002510  8889               	bsf	3977,4,c	;volatile
  1052   002512  8A89               	bsf	3977,5,c	;volatile
  1053                           
  1054                           ;IO.c: 26:     temporizador1 = 200;
  1055   002514  0E00               	movlw	0
  1056   002516  0100               	movlb	0	; () banked
  1057   002518  6FF7               	movwf	(_temporizador1+1)& (0+255),b
  1058   00251A  0EC8               	movlw	200
  1059   00251C  6FF6               	movwf	_temporizador1& (0+255),b
  1060                           
  1061                           ;IO.c: 27:     temporizador2 = 300;
  1062   00251E  0E01               	movlw	1
  1063   002520  6FF5               	movwf	(_temporizador2+1)& (0+255),b
  1064   002522  0E2C               	movlw	44
  1065   002524  6FF4               	movwf	_temporizador2& (0+255),b
  1066   002526                     
  1067                           ; BSR set to: 0
  1068                           ;IO.c: 28:     lcd_init();
  1069   002526  ECAE  F011         	call	_lcd_init	;wreg free
  1070                           
  1071                           ;IO.c: 29:     start_AD_conversion();
  1072   00252A  EC29  F014         	call	_start_AD_conversion	;wreg free
  1073   00252E                     
  1074                           ;IO.c: 30:     display1 = 0;
  1075   00252E  0E00               	movlw	0
  1076   002530  0100               	movlb	0	; () banked
  1077   002532  6FDE               	movwf	_display1& (0+255),b
  1078   002534                     
  1079                           ; BSR set to: 0
  1080                           ;IO.c: 31:     display2 = 0;
  1081   002534  0E00               	movlw	0
  1082   002536  6FDD               	movwf	_display2& (0+255),b
  1083   002538                     
  1084                           ; BSR set to: 0
  1085                           ;IO.c: 32:     display3 = 0;
  1086   002538  0E00               	movlw	0
  1087   00253A  6FDC               	movwf	_display3& (0+255),b
  1088   00253C                     
  1089                           ; BSR set to: 0
  1090                           ;IO.c: 33:     display4 = 0;
  1091   00253C  0E00               	movlw	0
  1092   00253E  6FDB               	movwf	_display4& (0+255),b
  1093                           
  1094                           ;IO.c: 34:     enable_interrupts();
  1095   002540  EC18  F014         	call	_enable_interrupts	;wreg free
  1096   002544  0012               	return		;funcret
  1097   002546                     __end_of_setup:
  1098                           	callstack 0
  1099                           
  1100 ;; *************** function _start_AD_conversion *****************
  1101 ;; Defined at:
  1102 ;;		line 19 in file "ADC.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		None
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1116 ;;      Params:         0       0       0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; Hardware stack levels required when called: 12
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_setup
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text2
  1131   002852                     __ptext2:
  1132                           	callstack 0
  1133   002852                     _start_AD_conversion:
  1134                           	callstack 17
  1135   002852                     
  1136                           ;ADC.c: 21:     GO = 1;
  1137   002852  82C2               	bsf	4034,1,c	;volatile
  1138   002854  0012               	return		;funcret
  1139   002856                     __end_of_start_AD_conversion:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _setup_io *****************
  1143 ;; Defined at:
  1144 ;;		line 39 in file "IO.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1158 ;;      Params:         0       0       0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 12
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_setup
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text3
  1173   00277A                     __ptext3:
  1174                           	callstack 0
  1175   00277A                     _setup_io:
  1176                           	callstack 17
  1177   00277A                     
  1178                           ;IO.c: 41:     TRISA = 0b11000011;
  1179   00277A  0EC3               	movlw	195
  1180   00277C  6E92               	movwf	146,c	;volatile
  1181                           
  1182                           ;IO.c: 42:     TRISB = 0b00111111;
  1183   00277E  0E3F               	movlw	63
  1184   002780  6E93               	movwf	147,c	;volatile
  1185                           
  1186                           ;IO.c: 43:     TRISC = 0b11111011;
  1187   002782  0EFB               	movlw	251
  1188   002784  6E94               	movwf	148,c	;volatile
  1189                           
  1190                           ;IO.c: 44:     TRISD = 0b00000000;
  1191   002786  0E00               	movlw	0
  1192   002788  6E95               	movwf	149,c	;volatile
  1193                           
  1194                           ;IO.c: 45:     TRISE = 0b11111001;
  1195   00278A  0EF9               	movlw	249
  1196   00278C  6E96               	movwf	150,c	;volatile
  1197                           
  1198                           ;IO.c: 46:     LATA = 0b00000000;
  1199   00278E  0E00               	movlw	0
  1200   002790  6E89               	movwf	137,c	;volatile
  1201                           
  1202                           ;IO.c: 47:     LATB = 0b00000000;
  1203   002792  0E00               	movlw	0
  1204   002794  6E8A               	movwf	138,c	;volatile
  1205                           
  1206                           ;IO.c: 48:     LATD = 0b00000000;
  1207   002796  0E00               	movlw	0
  1208   002798  6E8C               	movwf	140,c	;volatile
  1209   00279A  0012               	return		;funcret
  1210   00279C                     __end_of_setup_io:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _lcd_init *****************
  1214 ;; Defined at:
  1215 ;;		line 56 in file "lcd.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1229 ;;      Params:         0       0       0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       1       0       0       0       0
  1232 ;;      Totals:         0       0       1       0       0       0       0
  1233 ;;Total ram usage:        1 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 14
  1236 ;; This function calls:
  1237 ;;		_lcd_cmd
  1238 ;; This function is called by:
  1239 ;;		_setup
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text4
  1244   00235C                     __ptext4:
  1245                           	callstack 0
  1246   00235C                     _lcd_init:
  1247                           	callstack 15
  1248   00235C                     
  1249                           ;lcd.c: 58:  PORTEbits.RE1=0;
  1250   00235C  9284               	bcf	132,1,c	;volatile
  1251                           
  1252                           ;lcd.c: 59:  PORTEbits.RE2=0;
  1253   00235E  9484               	bcf	132,2,c	;volatile
  1254   002360                     
  1255                           ;lcd.c: 60:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1256   002360  0E1A               	movlw	26
  1257   002362  0101               	movlb	1	; () banked
  1258   002364  6F22               	movwf	??_lcd_init& (0+255),b
  1259   002366  0EF8               	movlw	248
  1260   002368                     u3017:
  1261   002368  2EE8               	decfsz	wreg,f,c
  1262   00236A  D7FE               	bra	u3017
  1263   00236C  2F22               	decfsz	??_lcd_init& (0+255),f,b
  1264   00236E  D7FC               	bra	u3017
  1265   002370  F000               	nop	
  1266   002372                     
  1267                           ;lcd.c: 61:  PORTEbits.RE1=1;
  1268   002372  8284               	bsf	132,1,c	;volatile
  1269   002374                     
  1270                           ;lcd.c: 63:  lcd_cmd(0x38);
  1271   002374  0E38               	movlw	56
  1272   002376  EC84  F013         	call	_lcd_cmd
  1273   00237A                     
  1274                           ;lcd.c: 64:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1275   00237A  0E07               	movlw	7
  1276   00237C  0101               	movlb	1	; () banked
  1277   00237E  6F22               	movwf	??_lcd_init& (0+255),b
  1278   002380  0E7D               	movlw	125
  1279   002382                     u3027:
  1280   002382  2EE8               	decfsz	wreg,f,c
  1281   002384  D7FE               	bra	u3027
  1282   002386  2F22               	decfsz	??_lcd_init& (0+255),f,b
  1283   002388  D7FC               	bra	u3027
  1284                           
  1285                           ;lcd.c: 65:  lcd_cmd(0x38);
  1286   00238A  0E38               	movlw	56
  1287   00238C  EC84  F013         	call	_lcd_cmd
  1288   002390                     
  1289                           ;lcd.c: 66:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1290   002390  0EC8               	movlw	200
  1291   002392                     u3037:
  1292   002392  D000               	nop2	
  1293   002394  2EE8               	decfsz	wreg,f,c
  1294   002396  D7FD               	bra	u3037
  1295   002398                     
  1296                           ;lcd.c: 67:  lcd_cmd(0x38);
  1297   002398  0E38               	movlw	56
  1298   00239A  EC84  F013         	call	_lcd_cmd
  1299   00239E                     
  1300                           ;lcd.c: 68:  lcd_cmd(0x08);
  1301   00239E  0E08               	movlw	8
  1302   0023A0  EC84  F013         	call	_lcd_cmd
  1303   0023A4                     
  1304                           ;lcd.c: 69:  lcd_cmd(0x0F);
  1305   0023A4  0E0F               	movlw	15
  1306   0023A6  EC84  F013         	call	_lcd_cmd
  1307   0023AA                     
  1308                           ;lcd.c: 70:  lcd_cmd(0x01);
  1309   0023AA  0E01               	movlw	1
  1310   0023AC  EC84  F013         	call	_lcd_cmd
  1311   0023B0                     
  1312                           ;lcd.c: 71:  lcd_cmd(0x38);
  1313   0023B0  0E38               	movlw	56
  1314   0023B2  EC84  F013         	call	_lcd_cmd
  1315   0023B6                     
  1316                           ;lcd.c: 72:     lcd_cmd(0x80);
  1317   0023B6  0E80               	movlw	128
  1318   0023B8  EC84  F013         	call	_lcd_cmd
  1319   0023BC                     
  1320                           ;lcd.c: 73:     lcd_cmd(0x0C);
  1321   0023BC  0E0C               	movlw	12
  1322   0023BE  EC84  F013         	call	_lcd_cmd
  1323   0023C2  0012               	return		;funcret
  1324   0023C4                     __end_of_lcd_init:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _lcd_cmd *****************
  1328 ;; Defined at:
  1329 ;;		line 34 in file "lcd.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  val             1    wreg     unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  val             1    1[BANK1 ] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1343 ;;      Params:         0       0       0       0       0       0       0
  1344 ;;      Locals:         0       0       1       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0
  1346 ;;      Totals:         0       0       1       0       0       0       0
  1347 ;;Total ram usage:        1 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 13
  1350 ;; This function calls:
  1351 ;;		_lcd_wr
  1352 ;; This function is called by:
  1353 ;;		_lcd_init
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text5
  1358   002708                     __ptext5:
  1359                           	callstack 0
  1360   002708                     _lcd_cmd:
  1361                           	callstack 15
  1362                           
  1363                           ;incstack = 0
  1364                           ;lcd_cmd@val stored from wreg
  1365   002708  0101               	movlb	1	; () banked
  1366   00270A  6F21               	movwf	lcd_cmd@val& (0+255),b
  1367   00270C                     
  1368                           ;lcd.c: 34: void lcd_cmd(unsigned char val);lcd.c: 35: {;lcd.c: 36:  PORTEbits.RE1=1;
  1369   00270C  8284               	bsf	132,1,c	;volatile
  1370   00270E                     
  1371                           ;lcd.c: 37:     lcd_wr(val);
  1372   00270E  0101               	movlb	1	; () banked
  1373   002710  5121               	movf	lcd_cmd@val& (0+255),w,b
  1374   002712  EC13  F014         	call	_lcd_wr
  1375   002716                     
  1376                           ;lcd.c: 38:     PORTEbits.RE2=0;
  1377   002716  9484               	bcf	132,2,c	;volatile
  1378   002718                     
  1379                           ;lcd.c: 39:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1380   002718  0E0D               	movlw	13
  1381   00271A                     u3047:
  1382   00271A  2EE8               	decfsz	wreg,f,c
  1383   00271C  D7FE               	bra	u3047
  1384   00271E  F000               	nop	
  1385   002720                     
  1386                           ;lcd.c: 40:     PORTEbits.RE1=0;
  1387   002720  9284               	bcf	132,1,c	;volatile
  1388   002722                     
  1389                           ;lcd.c: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1390   002722  0E0D               	movlw	13
  1391   002724                     u3057:
  1392   002724  2EE8               	decfsz	wreg,f,c
  1393   002726  D7FE               	bra	u3057
  1394   002728  F000               	nop	
  1395   00272A                     
  1396                           ;lcd.c: 42:  PORTEbits.RE1=1;
  1397   00272A  8284               	bsf	132,1,c	;volatile
  1398   00272C  0012               	return		;funcret
  1399   00272E                     __end_of_lcd_cmd:
  1400                           	callstack 0
  1401                           
  1402 ;; *************** function _lcd_wr *****************
  1403 ;; Defined at:
  1404 ;;		line 29 in file "lcd.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  val             1    wreg     unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  val             1    0[BANK1 ] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1418 ;;      Params:         0       0       0       0       0       0       0
  1419 ;;      Locals:         0       0       1       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0
  1421 ;;      Totals:         0       0       1       0       0       0       0
  1422 ;;Total ram usage:        1 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 12
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_lcd_cmd
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text6
  1433   002826                     __ptext6:
  1434                           	callstack 0
  1435   002826                     _lcd_wr:
  1436                           	callstack 15
  1437                           
  1438                           ;incstack = 0
  1439                           ;lcd_wr@val stored from wreg
  1440   002826  0101               	movlb	1	; () banked
  1441   002828  6F20               	movwf	lcd_wr@val& (0+255),b
  1442   00282A                     
  1443                           ;lcd.c: 29: void lcd_wr(unsigned char val);lcd.c: 30: {;lcd.c: 31:   PORTD=val;
  1444   00282A  C120  FF83         	movff	lcd_wr@val,3971	;volatile
  1445   00282E  0012               	return		;funcret
  1446   002830                     __end_of_lcd_wr:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _interrupt_init *****************
  1450 ;; Defined at:
  1451 ;;		line 71 in file "Interrupt.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1465 ;;      Params:         0       0       0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0
  1468 ;;      Totals:         0       0       0       0       0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 12
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_setup
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text7
  1480   0027E0                     __ptext7:
  1481                           	callstack 0
  1482   0027E0                     _interrupt_init:
  1483                           	callstack 17
  1484   0027E0                     
  1485                           ;Interrupt.c: 73:     INTCON = 0b10010000;
  1486   0027E0  0E90               	movlw	144
  1487   0027E2  6EF2               	movwf	242,c	;volatile
  1488                           
  1489                           ;Interrupt.c: 74:     INTCON2 = 0b00000101;
  1490   0027E4  0E05               	movlw	5
  1491   0027E6  6EF1               	movwf	241,c	;volatile
  1492                           
  1493                           ;Interrupt.c: 75:     INTCON3 = 0b11011000;
  1494   0027E8  0ED8               	movlw	216
  1495   0027EA  6EF0               	movwf	240,c	;volatile
  1496                           
  1497                           ;Interrupt.c: 76:     T0CON = 0b11000001;
  1498   0027EC  0EC1               	movlw	193
  1499   0027EE  6ED5               	movwf	213,c	;volatile
  1500                           
  1501                           ;Interrupt.c: 82:     TMR0 = 0x06;
  1502   0027F0  0E00               	movlw	0
  1503   0027F2  6ED7               	movwf	215,c	;volatile
  1504   0027F4  0E06               	movlw	6
  1505   0027F6  6ED6               	movwf	214,c	;volatile
  1506   0027F8  0012               	return		;funcret
  1507   0027FA                     __end_of_interrupt_init:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _enable_interrupts *****************
  1511 ;; Defined at:
  1512 ;;		line 64 in file "Interrupt.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		None
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 12
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_setup
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text8
  1541   002830                     __ptext8:
  1542                           	callstack 0
  1543   002830                     _enable_interrupts:
  1544                           	callstack 17
  1545   002830                     
  1546                           ;Interrupt.c: 65:     TMR0IE = 1;
  1547   002830  8AF2               	bsf	4082,5,c	;volatile
  1548                           
  1549                           ;Interrupt.c: 66:     ADIE = 1;
  1550   002832  8C9D               	bsf	3997,6,c	;volatile
  1551                           
  1552                           ;Interrupt.c: 67:     PEIE = 1;
  1553   002834  8CF2               	bsf	4082,6,c	;volatile
  1554                           
  1555                           ;Interrupt.c: 68:     GIE = 1;
  1556   002836  8EF2               	bsf	4082,7,c	;volatile
  1557   002838  0012               	return		;funcret
  1558   00283A                     __end_of_enable_interrupts:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _disable_interrupts *****************
  1562 ;; Defined at:
  1563 ;;		line 58 in file "Interrupt.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		None
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1577 ;;      Params:         0       0       0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0
  1580 ;;      Totals:         0       0       0       0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 12
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_setup
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text9
  1592   00283A                     __ptext9:
  1593                           	callstack 0
  1594   00283A                     _disable_interrupts:
  1595                           	callstack 17
  1596   00283A                     
  1597                           ;Interrupt.c: 59:     IPEN = 0;
  1598   00283A  9ED0               	bcf	4048,7,c	;volatile
  1599                           
  1600                           ;Interrupt.c: 60:     GIE = 0;
  1601   00283C  9EF2               	bcf	4082,7,c	;volatile
  1602                           
  1603                           ;Interrupt.c: 61:     PEIE = 0;
  1604   00283E  9CF2               	bcf	4082,6,c	;volatile
  1605   002840  0012               	return		;funcret
  1606   002842                     __end_of_disable_interrupts:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _AD_init *****************
  1610 ;; Defined at:
  1611 ;;		line 12 in file "ADC.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0
  1628 ;;      Totals:         0       0       0       0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 12
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_setup
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text10
  1640   00280A                     __ptext10:
  1641                           	callstack 0
  1642   00280A                     _AD_init:
  1643                           	callstack 17
  1644   00280A                     
  1645                           ;ADC.c: 14:     ADCON0 = 0b00000001;
  1646   00280A  0E01               	movlw	1
  1647   00280C  6EC2               	movwf	194,c	;volatile
  1648                           
  1649                           ;ADC.c: 15:     ADCON1 = 0b00001101;
  1650   00280E  0E0D               	movlw	13
  1651   002810  6EC1               	movwf	193,c	;volatile
  1652                           
  1653                           ;ADC.c: 16:     ADCON2 = 0b00010100;
  1654   002812  0E14               	movlw	20
  1655   002814  6EC0               	movwf	192,c	;volatile
  1656   002816  0012               	return		;funcret
  1657   002818                     __end_of_AD_init:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _loop *****************
  1661 ;; Defined at:
  1662 ;;		line 50 in file "main.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		None
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1676 ;;      Params:         0       0       0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 12
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text11
  1691   00285A                     __ptext11:
  1692                           	callstack 0
  1693   00285A                     _loop:
  1694                           	callstack 18
  1695   00285A  0012               	return		;funcret
  1696   00285C                     __end_of_loop:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _f_interrupt_high *****************
  1700 ;; Defined at:
  1701 ;;		line 26 in file "Interrupt.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1715 ;;      Params:         0       0       0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0
  1717 ;;      Temps:          0      10       0       0       0       0       0
  1718 ;;      Totals:         0      10       0       0       0       0       0
  1719 ;;Total ram usage:       10 bytes
  1720 ;; Hardware stack levels used: 1
  1721 ;; Hardware stack levels required when called: 11
  1722 ;; This function calls:
  1723 ;;		_ADC_maq
  1724 ;;		_f_timers
  1725 ;; This function is called by:
  1726 ;;		Interrupt level 2
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	intcode
  1731   000008                     __pintcode:
  1732                           	callstack 0
  1733   000008                     _f_interrupt_high:
  1734                           	callstack 15
  1735                           
  1736                           ;incstack = 0
  1737   000008  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1738   00000A  ED17  F00F         	call	int_func,f	;refresh shadow registers
  1739                           
  1740                           	psect	intcode_body
  1741   001E2E                     __pintcode_body:
  1742                           	callstack 15
  1743   001E2E                     int_func:
  1744                           	callstack 15
  1745   001E2E  0006               	pop		; remove dummy address from shadow register refresh
  1746   001E30  CFE1 F0EA          	movff	fsr1l,??_f_interrupt_high
  1747   001E34  CFE2 F0EB          	movff	fsr1h,??_f_interrupt_high+1
  1748   001E38  CFD9 F0EC          	movff	fsr2l,??_f_interrupt_high+2
  1749   001E3C  CFDA F0ED          	movff	fsr2h,??_f_interrupt_high+3
  1750   001E40  CFF3 F0EE          	movff	prodl,??_f_interrupt_high+4
  1751   001E44  CFF4 F0EF          	movff	prodh,??_f_interrupt_high+5
  1752   001E48  CFF6 F0F0          	movff	tblptrl,??_f_interrupt_high+6
  1753   001E4C  CFF7 F0F1          	movff	tblptrh,??_f_interrupt_high+7
  1754   001E50  CFF8 F0F2          	movff	tblptru,??_f_interrupt_high+8
  1755   001E54  CFF5 F0F3          	movff	tablat,??_f_interrupt_high+9
  1756   001E58                     
  1757                           ;Interrupt.c: 28:     if (TMR0IF) {
  1758   001E58  A4F2               	btfss	4082,2,c	;volatile
  1759   001E5A  EF31  F00F         	goto	i2u292_41
  1760   001E5E  EF33  F00F         	goto	i2u292_40
  1761   001E62                     i2u292_41:
  1762   001E62  EF3A  F00F         	goto	i2l3501
  1763   001E66                     i2u292_40:
  1764   001E66                     
  1765                           ;Interrupt.c: 29:         TMR0 = 0x06;
  1766   001E66  0E00               	movlw	0
  1767   001E68  6ED7               	movwf	215,c	;volatile
  1768   001E6A  0E06               	movlw	6
  1769   001E6C  6ED6               	movwf	214,c	;volatile
  1770   001E6E                     
  1771                           ;Interrupt.c: 31:         f_timers();
  1772   001E6E  ECF3  F00F         	call	_f_timers	;wreg free
  1773   001E72                     
  1774                           ;Interrupt.c: 34:         TMR0IF = 0x00;
  1775   001E72  94F2               	bcf	4082,2,c	;volatile
  1776   001E74                     i2l3501:
  1777                           
  1778                           ;Interrupt.c: 37:     if (INT0IF && INT0IE) {
  1779   001E74  A2F2               	btfss	4082,1,c	;volatile
  1780   001E76  EF3F  F00F         	goto	i2u293_41
  1781   001E7A  EF41  F00F         	goto	i2u293_40
  1782   001E7E                     i2u293_41:
  1783   001E7E  EF49  F00F         	goto	i2l211
  1784   001E82                     i2u293_40:
  1785   001E82  A8F2               	btfss	4082,4,c	;volatile
  1786   001E84  EF46  F00F         	goto	i2u294_41
  1787   001E88  EF48  F00F         	goto	i2u294_40
  1788   001E8C                     i2u294_41:
  1789   001E8C  EF49  F00F         	goto	i2l211
  1790   001E90                     i2u294_40:
  1791   001E90                     
  1792                           ;Interrupt.c: 39:         INT0IF = 0;
  1793   001E90  92F2               	bcf	4082,1,c	;volatile
  1794   001E92                     i2l211:
  1795                           
  1796                           ;Interrupt.c: 42:     if (INT1IF && INT1IE) {
  1797   001E92  A0F0               	btfss	4080,0,c	;volatile
  1798   001E94  EF4E  F00F         	goto	i2u295_41
  1799   001E98  EF50  F00F         	goto	i2u295_40
  1800   001E9C                     i2u295_41:
  1801   001E9C  EF58  F00F         	goto	i2l212
  1802   001EA0                     i2u295_40:
  1803   001EA0  A6F0               	btfss	4080,3,c	;volatile
  1804   001EA2  EF55  F00F         	goto	i2u296_41
  1805   001EA6  EF57  F00F         	goto	i2u296_40
  1806   001EAA                     i2u296_41:
  1807   001EAA  EF58  F00F         	goto	i2l212
  1808   001EAE                     i2u296_40:
  1809   001EAE                     
  1810                           ;Interrupt.c: 44:         INT1IF = 0;
  1811   001EAE  90F0               	bcf	4080,0,c	;volatile
  1812   001EB0                     i2l212:
  1813                           
  1814                           ;Interrupt.c: 47:     if (INT2IF && INT2IE) {
  1815   001EB0  A2F0               	btfss	4080,1,c	;volatile
  1816   001EB2  EF5D  F00F         	goto	i2u297_41
  1817   001EB6  EF5F  F00F         	goto	i2u297_40
  1818   001EBA                     i2u297_41:
  1819   001EBA  EF67  F00F         	goto	i2l213
  1820   001EBE                     i2u297_40:
  1821   001EBE  A8F0               	btfss	4080,4,c	;volatile
  1822   001EC0  EF64  F00F         	goto	i2u298_41
  1823   001EC4  EF66  F00F         	goto	i2u298_40
  1824   001EC8                     i2u298_41:
  1825   001EC8  EF67  F00F         	goto	i2l213
  1826   001ECC                     i2u298_40:
  1827   001ECC                     
  1828                           ;Interrupt.c: 49:         INT2IF = 0;
  1829   001ECC  92F0               	bcf	4080,1,c	;volatile
  1830   001ECE                     i2l213:
  1831                           
  1832                           ;Interrupt.c: 52:     if (ADIF && ADIE) {
  1833   001ECE  AC9E               	btfss	3998,6,c	;volatile
  1834   001ED0  EF6C  F00F         	goto	i2u299_41
  1835   001ED4  EF6E  F00F         	goto	i2u299_40
  1836   001ED8                     i2u299_41:
  1837   001ED8  EF78  F00F         	goto	i2l215
  1838   001EDC                     i2u299_40:
  1839   001EDC  AC9D               	btfss	3997,6,c	;volatile
  1840   001EDE  EF73  F00F         	goto	i2u300_41
  1841   001EE2  EF75  F00F         	goto	i2u300_40
  1842   001EE6                     i2u300_41:
  1843   001EE6  EF78  F00F         	goto	i2l215
  1844   001EEA                     i2u300_40:
  1845   001EEA                     
  1846                           ;Interrupt.c: 53:         ADC_maq();
  1847   001EEA  ECE2  F011         	call	_ADC_maq	;wreg free
  1848   001EEE                     
  1849                           ;Interrupt.c: 54:         ADIF = 0;
  1850   001EEE  9C9E               	bcf	3998,6,c	;volatile
  1851   001EF0                     i2l215:
  1852   001EF0  C0F3  FFF5         	movff	??_f_interrupt_high+9,tablat
  1853   001EF4  C0F2  FFF8         	movff	??_f_interrupt_high+8,tblptru
  1854   001EF8  C0F1  FFF7         	movff	??_f_interrupt_high+7,tblptrh
  1855   001EFC  C0F0  FFF6         	movff	??_f_interrupt_high+6,tblptrl
  1856   001F00  C0EF  FFF4         	movff	??_f_interrupt_high+5,prodh
  1857   001F04  C0EE  FFF3         	movff	??_f_interrupt_high+4,prodl
  1858   001F08  C0ED  FFDA         	movff	??_f_interrupt_high+3,fsr2h
  1859   001F0C  C0EC  FFD9         	movff	??_f_interrupt_high+2,fsr2l
  1860   001F10  C0EB  FFE2         	movff	??_f_interrupt_high+1,fsr1h
  1861   001F14  C0EA  FFE1         	movff	??_f_interrupt_high,fsr1l
  1862   001F18  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1863   001F1A  0011               	retfie		f
  1864   001F1C                     __end_of_f_interrupt_high:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _f_timers *****************
  1868 ;; Defined at:
  1869 ;;		line 84 in file "Interrupt.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1883 ;;      Params:         0       0       0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 10
  1890 ;; This function calls:
  1891 ;;		_Read_AD
  1892 ;;		_mux_display
  1893 ;;		_read_keyb
  1894 ;;		_read_keyboard
  1895 ;;		_show_to_LCD
  1896 ;; This function is called by:
  1897 ;;		_f_interrupt_high
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text13
  1902   001FE6                     __ptext13:
  1903                           	callstack 0
  1904   001FE6                     _f_timers:
  1905                           	callstack 15
  1906   001FE6                     
  1907                           ;Interrupt.c: 85:     static uint16_t counter0 = 1, counter1 = 1, counter2 = 1, counter3
      +                           = 1;;Interrupt.c: 87:     if (counter0 < 5)
  1908   001FE6  0100               	movlb	0	; () banked
  1909   001FE8  51BA               	movf	(f_timers@counter0+1)& (0+255),w,b
  1910   001FEA  E107               	bnz	i2u288_41
  1911   001FEC  0E05               	movlw	5
  1912   001FEE  5DB9               	subwf	f_timers@counter0& (0+255),w,b
  1913   001FF0  B0D8               	btfsc	status,0,c
  1914   001FF2  EFFD  F00F         	goto	i2u288_41
  1915   001FF6  EFFF  F00F         	goto	i2u288_40
  1916   001FFA                     i2u288_41:
  1917   001FFA  EF03  F010         	goto	i2l3463
  1918   001FFE                     i2u288_40:
  1919   001FFE                     
  1920                           ; BSR set to: 0
  1921                           ;Interrupt.c: 88:     {;Interrupt.c: 89:         counter0++;
  1922   001FFE  4BB9               	infsnz	f_timers@counter0& (0+255),f,b
  1923   002000  2BBA               	incf	(f_timers@counter0+1)& (0+255),f,b
  1924                           
  1925                           ;Interrupt.c: 90:     }
  1926   002002  EF0A  F010         	goto	i2l3467
  1927   002006                     i2l3463:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;Interrupt.c: 92:         mux_display();
  1931   002006  EC4E  F010         	call	_mux_display	;wreg free
  1932   00200A                     
  1933                           ;Interrupt.c: 93:         counter0 = 1;
  1934   00200A  0E00               	movlw	0
  1935   00200C  0100               	movlb	0	; () banked
  1936   00200E  6FBA               	movwf	(f_timers@counter0+1)& (0+255),b
  1937   002010  0E01               	movlw	1
  1938   002012  6FB9               	movwf	f_timers@counter0& (0+255),b
  1939   002014                     i2l3467:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;Interrupt.c: 96:     if (counter1 < temporizador1)
  1943   002014  51F6               	movf	_temporizador1& (0+255),w,b
  1944   002016  5DB7               	subwf	f_timers@counter1& (0+255),w,b
  1945   002018  51F7               	movf	(_temporizador1+1)& (0+255),w,b
  1946   00201A  59B8               	subwfb	(f_timers@counter1+1)& (0+255),w,b
  1947   00201C  B0D8               	btfsc	status,0,c
  1948   00201E  EF13  F010         	goto	i2u289_41
  1949   002022  EF15  F010         	goto	i2u289_40
  1950   002026                     i2u289_41:
  1951   002026  EF19  F010         	goto	i2l3471
  1952   00202A                     i2u289_40:
  1953   00202A                     
  1954                           ; BSR set to: 0
  1955                           ;Interrupt.c: 97:     {;Interrupt.c: 98:         counter1++;
  1956   00202A  4BB7               	infsnz	f_timers@counter1& (0+255),f,b
  1957   00202C  2BB8               	incf	(f_timers@counter1+1)& (0+255),f,b
  1958                           
  1959                           ;Interrupt.c: 99:     }
  1960   00202E  EF20  F010         	goto	i2l3475
  1961   002032                     i2l3471:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;Interrupt.c: 101:         show_to_LCD();
  1965   002032  EC97  F013         	call	_show_to_LCD	;wreg free
  1966   002036                     
  1967                           ;Interrupt.c: 102:         counter1 = 1;
  1968   002036  0E00               	movlw	0
  1969   002038  0100               	movlb	0	; () banked
  1970   00203A  6FB8               	movwf	(f_timers@counter1+1)& (0+255),b
  1971   00203C  0E01               	movlw	1
  1972   00203E  6FB7               	movwf	f_timers@counter1& (0+255),b
  1973   002040                     i2l3475:
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;Interrupt.c: 105:     if (counter2 < temporizador2)
  1977   002040  51F4               	movf	_temporizador2& (0+255),w,b
  1978   002042  5DB5               	subwf	f_timers@counter2& (0+255),w,b
  1979   002044  51F5               	movf	(_temporizador2+1)& (0+255),w,b
  1980   002046  59B6               	subwfb	(f_timers@counter2+1)& (0+255),w,b
  1981   002048  B0D8               	btfsc	status,0,c
  1982   00204A  EF29  F010         	goto	i2u290_41
  1983   00204E  EF2B  F010         	goto	i2u290_40
  1984   002052                     i2u290_41:
  1985   002052  EF2F  F010         	goto	i2l3479
  1986   002056                     i2u290_40:
  1987   002056                     
  1988                           ; BSR set to: 0
  1989                           ;Interrupt.c: 106:     {;Interrupt.c: 107:         counter2++;
  1990   002056  4BB5               	infsnz	f_timers@counter2& (0+255),f,b
  1991   002058  2BB6               	incf	(f_timers@counter2+1)& (0+255),f,b
  1992                           
  1993                           ;Interrupt.c: 108:     }
  1994   00205A  EF33  F010         	goto	i2l3481
  1995   00205E                     i2l3479:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;Interrupt.c: 110:         counter2 = 1;
  1999   00205E  0E00               	movlw	0
  2000   002060  6FB6               	movwf	(f_timers@counter2+1)& (0+255),b
  2001   002062  0E01               	movlw	1
  2002   002064  6FB5               	movwf	f_timers@counter2& (0+255),b
  2003   002066                     i2l3481:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;Interrupt.c: 113:     if (counter3 < 10)
  2007   002066  51B4               	movf	(f_timers@counter3+1)& (0+255),w,b
  2008   002068  E107               	bnz	i2u291_41
  2009   00206A  0E0A               	movlw	10
  2010   00206C  5DB3               	subwf	f_timers@counter3& (0+255),w,b
  2011   00206E  B0D8               	btfsc	status,0,c
  2012   002070  EF3C  F010         	goto	i2u291_41
  2013   002074  EF3E  F010         	goto	i2u291_40
  2014   002078                     i2u291_41:
  2015   002078  EF42  F010         	goto	i2l3485
  2016   00207C                     i2u291_40:
  2017   00207C                     
  2018                           ; BSR set to: 0
  2019                           ;Interrupt.c: 114:     {;Interrupt.c: 115:         counter3++;
  2020   00207C  4BB3               	infsnz	f_timers@counter3& (0+255),f,b
  2021   00207E  2BB4               	incf	(f_timers@counter3+1)& (0+255),f,b
  2022                           
  2023                           ;Interrupt.c: 116:     }
  2024   002080  EF4D  F010         	goto	i2l243
  2025   002084                     i2l3485:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;Interrupt.c: 119:     {;Interrupt.c: 120:         read_keyboard();
  2029   002084  EC26  F008         	call	_read_keyboard	;wreg free
  2030   002088                     
  2031                           ;Interrupt.c: 121:         read_keyb();
  2032   002088  ECA7  F010         	call	_read_keyb	;wreg free
  2033   00208C                     
  2034                           ;Interrupt.c: 122:         Read_AD();
  2035   00208C  EC24  F00D         	call	_Read_AD	;wreg free
  2036   002090                     
  2037                           ;Interrupt.c: 123:         counter3 = 1;
  2038   002090  0E00               	movlw	0
  2039   002092  0100               	movlb	0	; () banked
  2040   002094  6FB4               	movwf	(f_timers@counter3+1)& (0+255),b
  2041   002096  0E01               	movlw	1
  2042   002098  6FB3               	movwf	f_timers@counter3& (0+255),b
  2043   00209A                     i2l243:
  2044                           
  2045                           ; BSR set to: 0
  2046   00209A  0012               	return		;funcret
  2047   00209C                     __end_of_f_timers:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _show_to_LCD *****************
  2051 ;; Defined at:
  2052 ;;		line 114 in file "main.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2066 ;;      Params:         0       0       0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0
  2069 ;;      Totals:         0       0       0       0       0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 2
  2073 ;; This function calls:
  2074 ;;		_lcd_dat
  2075 ;;		i2_lcd_cmd
  2076 ;; This function is called by:
  2077 ;;		_f_timers
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text14
  2082   00272E                     __ptext14:
  2083                           	callstack 0
  2084   00272E                     _show_to_LCD:
  2085                           	callstack 22
  2086   00272E                     
  2087                           ;main.c: 123:     lcd_cmd(0x80);
  2088   00272E  0E80               	movlw	128
  2089   002730  ECCE  F013         	call	i2_lcd_cmd
  2090                           
  2091                           ;main.c: 124:     lcd_dat(duty_LCD1_TECLADO);
  2092   002734  507E               	movf	_duty_LCD1_TECLADO^0,w,c
  2093   002736  ECDF  F013         	call	_lcd_dat
  2094                           
  2095                           ;main.c: 125:     lcd_dat(duty_LCD2_TECLADO);
  2096   00273A  0100               	movlb	0	; () banked
  2097   00273C  51C0               	movf	_duty_LCD2_TECLADO& (0+255),w,b
  2098   00273E  ECDF  F013         	call	_lcd_dat
  2099                           
  2100                           ;main.c: 126:     lcd_dat(duty_LCD3_TECLADO);
  2101   002742  0100               	movlb	0	; () banked
  2102   002744  51BF               	movf	_duty_LCD3_TECLADO& (0+255),w,b
  2103   002746  ECDF  F013         	call	_lcd_dat
  2104                           
  2105                           ;main.c: 127:     lcd_dat(duty_LCD4_TECLADO);
  2106   00274A  0100               	movlb	0	; () banked
  2107   00274C  51BE               	movf	_duty_LCD4_TECLADO& (0+255),w,b
  2108   00274E  ECDF  F013         	call	_lcd_dat
  2109   002752  0012               	return		;funcret
  2110   002754                     __end_of_show_to_LCD:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _read_keyboard *****************
  2114 ;; Defined at:
  2115 ;;		line 142 in file "main.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  i               2   10[COMRAM] int 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2129 ;;      Params:         0       0       0       0       0       0       0
  2130 ;;      Locals:         2       0       0       0       0       0       0
  2131 ;;      Temps:          2       0       0       0       0       0       0
  2132 ;;      Totals:         4       0       0       0       0       0       0
  2133 ;;Total ram usage:        4 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 1
  2136 ;; This function calls:
  2137 ;;		_ler_teclado
  2138 ;; This function is called by:
  2139 ;;		_f_timers
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text15
  2144   00104C                     __ptext15:
  2145                           	callstack 0
  2146   00104C                     _read_keyboard:
  2147                           	callstack 23
  2148   00104C                     
  2149                           ;main.c: 145:     static uint8_t dado;;main.c: 147:     dado = ler_teclado();
  2150   00104C  ECD8  F00A         	call	_ler_teclado	;wreg free
  2151   001050  6E78               	movwf	read_keyboard@dado^0,c
  2152   001052                     
  2153                           ;main.c: 149:     if (dado!=16 && dado != memoria_dado)
  2154   001052  0E10               	movlw	16
  2155   001054  1878               	xorwf	read_keyboard@dado^0,w,c
  2156   001056  B4D8               	btfsc	status,2,c
  2157   001058  EF30  F008         	goto	i2u275_41
  2158   00105C  EF32  F008         	goto	i2u275_40
  2159   001060                     i2u275_41:
  2160   001060  EF2F  F009         	goto	i2l3331
  2161   001064                     i2u275_40:
  2162   001064  0100               	movlb	0	; () banked
  2163   001066  51D6               	movf	_memoria_dado& (0+255),w,b
  2164   001068  1878               	xorwf	read_keyboard@dado^0,w,c
  2165   00106A  B4D8               	btfsc	status,2,c
  2166   00106C  EF3A  F008         	goto	i2u276_41
  2167   001070  EF3C  F008         	goto	i2u276_40
  2168   001074                     i2u276_41:
  2169   001074  EF2F  F009         	goto	i2l3331
  2170   001078                     i2u276_40:
  2171   001078                     
  2172                           ; BSR set to: 0
  2173                           ;main.c: 150:     {;main.c: 151:         if(dado == 11 || dado == 10)
  2174   001078  0E0B               	movlw	11
  2175   00107A  1878               	xorwf	read_keyboard@dado^0,w,c
  2176   00107C  B4D8               	btfsc	status,2,c
  2177   00107E  EF43  F008         	goto	i2u277_41
  2178   001082  EF45  F008         	goto	i2u277_40
  2179   001086                     i2u277_41:
  2180   001086  EF4E  F008         	goto	i2l3269
  2181   00108A                     i2u277_40:
  2182   00108A                     
  2183                           ; BSR set to: 0
  2184   00108A  0E0A               	movlw	10
  2185   00108C  1878               	xorwf	read_keyboard@dado^0,w,c
  2186   00108E  A4D8               	btfss	status,2,c
  2187   001090  EF4C  F008         	goto	i2u278_41
  2188   001094  EF4E  F008         	goto	i2u278_40
  2189   001098                     i2u278_41:
  2190   001098  EF05  F009         	goto	i2l3323
  2191   00109C                     i2u278_40:
  2192   00109C                     i2l3269:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;main.c: 152:         {;main.c: 153:             dado1 = dado2 = dado3 = dado4 = 0;
  2196   00109C  0E00               	movlw	0
  2197   00109E  6E79               	movwf	_dado4^0,c
  2198   0010A0  C079  F07A         	movff	_dado4,_dado3
  2199   0010A4  C07A  F07B         	movff	_dado3,_dado2
  2200   0010A8  C07B  F07C         	movff	_dado2,_dado1
  2201                           
  2202                           ;main.c: 154:             memoria_dado = 0;
  2203   0010AC  0E00               	movlw	0
  2204   0010AE  6FD6               	movwf	_memoria_dado& (0+255),b
  2205                           
  2206                           ;main.c: 155:             i = 0;
  2207   0010B0  0E00               	movlw	0
  2208   0010B2  6E7D               	movwf	_i^0,c
  2209                           
  2210                           ;main.c: 156:             duty_LCD1_TECLADO = ' ';
  2211   0010B4  0E20               	movlw	32
  2212   0010B6  6E7E               	movwf	_duty_LCD1_TECLADO^0,c
  2213                           
  2214                           ;main.c: 157:             duty_LCD2_TECLADO = ' ';
  2215   0010B8  0E20               	movlw	32
  2216   0010BA  6FC0               	movwf	_duty_LCD2_TECLADO& (0+255),b
  2217                           
  2218                           ;main.c: 158:             duty_LCD3_TECLADO = ' ';
  2219   0010BC  0E20               	movlw	32
  2220   0010BE  6FBF               	movwf	_duty_LCD3_TECLADO& (0+255),b
  2221                           
  2222                           ;main.c: 159:             duty_LCD4_TECLADO = ' ';
  2223   0010C0  0E20               	movlw	32
  2224   0010C2  6FBE               	movwf	_duty_LCD4_TECLADO& (0+255),b
  2225                           
  2226                           ;main.c: 160:             for(int i = 0; i < 3; i++)
  2227   0010C4  0E00               	movlw	0
  2228   0010C6  6E0C               	movwf	(read_keyboard@i+1)^0,c
  2229   0010C8  0E00               	movlw	0
  2230   0010CA  6E0B               	movwf	read_keyboard@i^0,c
  2231   0010CC                     i2l3275:
  2232                           
  2233                           ;main.c: 161:             {;main.c: 162:                 duty_teclado[i] = 0;
  2234   0010CC  90D8               	bcf	status,0,c
  2235   0010CE  340B               	rlcf	read_keyboard@i^0,w,c
  2236   0010D0  6ED9               	movwf	fsr2l,c
  2237   0010D2  340C               	rlcf	(read_keyboard@i+1)^0,w,c
  2238   0010D4  6EDA               	movwf	fsr2h,c
  2239   0010D6  0EC1               	movlw	low _duty_teclado
  2240   0010D8  26D9               	addwf	fsr2l,f,c
  2241   0010DA  0E00               	movlw	high _duty_teclado
  2242   0010DC  22DA               	addwfc	fsr2h,f,c
  2243   0010DE  0E00               	movlw	0
  2244   0010E0  6EDE               	movwf	postinc2,c
  2245   0010E2  0E00               	movlw	0
  2246   0010E4  6EDD               	movwf	postdec2,c
  2247   0010E6                     
  2248                           ;main.c: 163:             }
  2249   0010E6  4A0B               	infsnz	read_keyboard@i^0,f,c
  2250   0010E8  2A0C               	incf	(read_keyboard@i+1)^0,f,c
  2251   0010EA  BE0C               	btfsc	(read_keyboard@i+1)^0,7,c
  2252   0010EC  EF81  F008         	goto	i2u279_41
  2253   0010F0  500C               	movf	(read_keyboard@i+1)^0,w,c
  2254   0010F2  E109               	bnz	i2u279_40
  2255   0010F4  0E03               	movlw	3
  2256   0010F6  5C0B               	subwf	read_keyboard@i^0,w,c
  2257   0010F8  A0D8               	btfss	status,0,c
  2258   0010FA  EF81  F008         	goto	i2u279_41
  2259   0010FE  EF83  F008         	goto	i2u279_40
  2260   001102                     i2u279_41:
  2261   001102  EF66  F008         	goto	i2l3275
  2262   001106                     i2u279_40:
  2263   001106  EF31  F009         	goto	i2l393
  2264   00110A                     i2l395:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;main.c: 169:                 dado1 = dado;
  2268   00110A  C078  F07C         	movff	read_keyboard@dado,_dado1
  2269   00110E                     
  2270                           ; BSR set to: 0
  2271                           ;main.c: 170:                 duty_teclado[i] = dado1;
  2272   00110E  507C               	movf	_dado1^0,w,c
  2273   001110  6E09               	movwf	??_read_keyboard^0,c
  2274   001112  6A0A               	clrf	(??_read_keyboard+1)^0,c
  2275   001114  507D               	movf	_i^0,w,c
  2276   001116  0D02               	mullw	2
  2277   001118  0EC1               	movlw	low _duty_teclado
  2278   00111A  24F3               	addwf	243,w,c
  2279   00111C  6ED9               	movwf	fsr2l,c
  2280   00111E  0E00               	movlw	high _duty_teclado
  2281   001120  20F4               	addwfc	prodh,w,c
  2282   001122  6EDA               	movwf	fsr2h,c
  2283   001124  C009  FFDE         	movff	??_read_keyboard,postinc2
  2284   001128  C00A  FFDD         	movff	??_read_keyboard+1,postdec2
  2285                           
  2286                           ;main.c: 171:                 duty_LCD1_TECLADO = '0' + duty_teclado[i];
  2287   00112C  507D               	movf	_i^0,w,c
  2288   00112E  0D02               	mullw	2
  2289   001130  0EC1               	movlw	low _duty_teclado
  2290   001132  24F3               	addwf	243,w,c
  2291   001134  6ED9               	movwf	fsr2l,c
  2292   001136  0E00               	movlw	high _duty_teclado
  2293   001138  20F4               	addwfc	prodh,w,c
  2294   00113A  6EDA               	movwf	fsr2h,c
  2295   00113C  50DF               	movf	indf2,w,c
  2296   00113E  0F30               	addlw	48
  2297   001140  6E7E               	movwf	_duty_LCD1_TECLADO^0,c
  2298   001142                     i2l3283:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;main.c: 172:                 display1 = dado1;
  2302   001142  C07C  F0DE         	movff	_dado1,_display1
  2303   001146                     
  2304                           ; BSR set to: 0
  2305                           ;main.c: 173:                 display2 = dado2;
  2306   001146  C07B  F0DD         	movff	_dado2,_display2
  2307   00114A                     
  2308                           ; BSR set to: 0
  2309                           ;main.c: 174:                 display3 = dado3;
  2310   00114A  C07A  F0DC         	movff	_dado3,_display3
  2311   00114E                     
  2312                           ; BSR set to: 0
  2313                           ;main.c: 175:                 display4 = dado4;
  2314   00114E  C079  F0DB         	movff	_dado4,_display4
  2315                           
  2316                           ;main.c: 176:                 break;
  2317   001152  EF22  F009         	goto	i2l3325
  2318   001156                     i2l397:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;main.c: 179:                 dado2 = dado;
  2322   001156  C078  F07B         	movff	read_keyboard@dado,_dado2
  2323   00115A                     
  2324                           ; BSR set to: 0
  2325                           ;main.c: 180:                 duty_teclado[i] = dado2;
  2326   00115A  507B               	movf	_dado2^0,w,c
  2327   00115C  6E09               	movwf	??_read_keyboard^0,c
  2328   00115E  6A0A               	clrf	(??_read_keyboard+1)^0,c
  2329   001160  507D               	movf	_i^0,w,c
  2330   001162  0D02               	mullw	2
  2331   001164  0EC1               	movlw	low _duty_teclado
  2332   001166  24F3               	addwf	243,w,c
  2333   001168  6ED9               	movwf	fsr2l,c
  2334   00116A  0E00               	movlw	high _duty_teclado
  2335   00116C  20F4               	addwfc	prodh,w,c
  2336   00116E  6EDA               	movwf	fsr2h,c
  2337   001170  C009  FFDE         	movff	??_read_keyboard,postinc2
  2338   001174  C00A  FFDD         	movff	??_read_keyboard+1,postdec2
  2339                           
  2340                           ;main.c: 181:                 duty_LCD2_TECLADO = '0' + duty_teclado[i];
  2341   001178  507D               	movf	_i^0,w,c
  2342   00117A  0D02               	mullw	2
  2343   00117C  0EC1               	movlw	low _duty_teclado
  2344   00117E  24F3               	addwf	243,w,c
  2345   001180  6ED9               	movwf	fsr2l,c
  2346   001182  0E00               	movlw	high _duty_teclado
  2347   001184  20F4               	addwfc	prodh,w,c
  2348   001186  6EDA               	movwf	fsr2h,c
  2349   001188  50DF               	movf	indf2,w,c
  2350   00118A  0F30               	addlw	48
  2351   00118C  6FC0               	movwf	_duty_LCD2_TECLADO& (0+255),b
  2352   00118E  EFA1  F008         	goto	i2l3283
  2353   001192                     i2l398:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;main.c: 189:                 dado3 = dado;
  2357   001192  C078  F07A         	movff	read_keyboard@dado,_dado3
  2358   001196                     
  2359                           ; BSR set to: 0
  2360                           ;main.c: 190:                 duty_teclado[i] = dado3;
  2361   001196  507A               	movf	_dado3^0,w,c
  2362   001198  6E09               	movwf	??_read_keyboard^0,c
  2363   00119A  6A0A               	clrf	(??_read_keyboard+1)^0,c
  2364   00119C  507D               	movf	_i^0,w,c
  2365   00119E  0D02               	mullw	2
  2366   0011A0  0EC1               	movlw	low _duty_teclado
  2367   0011A2  24F3               	addwf	243,w,c
  2368   0011A4  6ED9               	movwf	fsr2l,c
  2369   0011A6  0E00               	movlw	high _duty_teclado
  2370   0011A8  20F4               	addwfc	prodh,w,c
  2371   0011AA  6EDA               	movwf	fsr2h,c
  2372   0011AC  C009  FFDE         	movff	??_read_keyboard,postinc2
  2373   0011B0  C00A  FFDD         	movff	??_read_keyboard+1,postdec2
  2374                           
  2375                           ;main.c: 191:                 duty_LCD3_TECLADO = '0' + duty_teclado[i];
  2376   0011B4  507D               	movf	_i^0,w,c
  2377   0011B6  0D02               	mullw	2
  2378   0011B8  0EC1               	movlw	low _duty_teclado
  2379   0011BA  24F3               	addwf	243,w,c
  2380   0011BC  6ED9               	movwf	fsr2l,c
  2381   0011BE  0E00               	movlw	high _duty_teclado
  2382   0011C0  20F4               	addwfc	prodh,w,c
  2383   0011C2  6EDA               	movwf	fsr2h,c
  2384   0011C4  50DF               	movf	indf2,w,c
  2385   0011C6  0F30               	addlw	48
  2386   0011C8  6FBF               	movwf	_duty_LCD3_TECLADO& (0+255),b
  2387   0011CA  EFA1  F008         	goto	i2l3283
  2388   0011CE                     i2l399:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;main.c: 199:                 dado4 = dado;
  2392   0011CE  C078  F079         	movff	read_keyboard@dado,_dado4
  2393   0011D2                     
  2394                           ; BSR set to: 0
  2395                           ;main.c: 200:                 duty_teclado[i] = dado4;
  2396   0011D2  5079               	movf	_dado4^0,w,c
  2397   0011D4  6E09               	movwf	??_read_keyboard^0,c
  2398   0011D6  6A0A               	clrf	(??_read_keyboard+1)^0,c
  2399   0011D8  507D               	movf	_i^0,w,c
  2400   0011DA  0D02               	mullw	2
  2401   0011DC  0EC1               	movlw	low _duty_teclado
  2402   0011DE  24F3               	addwf	243,w,c
  2403   0011E0  6ED9               	movwf	fsr2l,c
  2404   0011E2  0E00               	movlw	high _duty_teclado
  2405   0011E4  20F4               	addwfc	prodh,w,c
  2406   0011E6  6EDA               	movwf	fsr2h,c
  2407   0011E8  C009  FFDE         	movff	??_read_keyboard,postinc2
  2408   0011EC  C00A  FFDD         	movff	??_read_keyboard+1,postdec2
  2409                           
  2410                           ;main.c: 201:                 duty_LCD4_TECLADO = '0' + duty_teclado[i];
  2411   0011F0  507D               	movf	_i^0,w,c
  2412   0011F2  0D02               	mullw	2
  2413   0011F4  0EC1               	movlw	low _duty_teclado
  2414   0011F6  24F3               	addwf	243,w,c
  2415   0011F8  6ED9               	movwf	fsr2l,c
  2416   0011FA  0E00               	movlw	high _duty_teclado
  2417   0011FC  20F4               	addwfc	prodh,w,c
  2418   0011FE  6EDA               	movwf	fsr2h,c
  2419   001200  50DF               	movf	indf2,w,c
  2420   001202  0F30               	addlw	48
  2421   001204  6FBE               	movwf	_duty_LCD4_TECLADO& (0+255),b
  2422   001206  EFA1  F008         	goto	i2l3283
  2423   00120A                     i2l3323:
  2424                           
  2425                           ; BSR set to: 0
  2426   00120A  507D               	movf	_i^0,w,c
  2427   00120C  6E09               	movwf	??_read_keyboard^0,c
  2428   00120E  6A0A               	clrf	(??_read_keyboard+1)^0,c
  2429                           
  2430                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2431                           ; Switch size 1, requested type "simple"
  2432                           ; Number of cases is 1, Range of values is 0 to 0
  2433                           ; switch strategies available:
  2434                           ; Name         Instructions Cycles
  2435                           ; simple_byte            4     3 (average)
  2436                           ;	Chosen strategy is simple_byte
  2437   001210  500A               	movf	(??_read_keyboard+1)^0,w,c
  2438   001212  0A00               	xorlw	0	; case 0
  2439   001214  B4D8               	btfsc	status,2,c
  2440   001216  EF0F  F009         	goto	i2l3775
  2441   00121A  EF22  F009         	goto	i2l3325
  2442   00121E                     i2l3775:
  2443                           
  2444                           ; BSR set to: 0
  2445                           ; Switch size 1, requested type "simple"
  2446                           ; Number of cases is 4, Range of values is 0 to 3
  2447                           ; switch strategies available:
  2448                           ; Name         Instructions Cycles
  2449                           ; simple_byte           13     7 (average)
  2450                           ;	Chosen strategy is simple_byte
  2451   00121E  5009               	movf	??_read_keyboard^0,w,c
  2452   001220  0A00               	xorlw	0	; case 0
  2453   001222  B4D8               	btfsc	status,2,c
  2454   001224  EF85  F008         	goto	i2l395
  2455   001228  0A01               	xorlw	1	; case 1
  2456   00122A  B4D8               	btfsc	status,2,c
  2457   00122C  EFAB  F008         	goto	i2l397
  2458   001230  0A03               	xorlw	3	; case 2
  2459   001232  B4D8               	btfsc	status,2,c
  2460   001234  EFC9  F008         	goto	i2l398
  2461   001238  0A01               	xorlw	1	; case 3
  2462   00123A  B4D8               	btfsc	status,2,c
  2463   00123C  EFE7  F008         	goto	i2l399
  2464   001240  EF22  F009         	goto	i2l3325
  2465   001244                     i2l3325:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 209:         if(i > 3) i = 0;
  2469   001244  0E03               	movlw	3
  2470   001246  647D               	cpfsgt	_i^0,c
  2471   001248  EF28  F009         	goto	i2u280_41
  2472   00124C  EF2A  F009         	goto	i2u280_40
  2473   001250                     i2u280_41:
  2474   001250  EF2E  F009         	goto	i2l3329
  2475   001254                     i2u280_40:
  2476   001254                     
  2477                           ; BSR set to: 0
  2478   001254  0E00               	movlw	0
  2479   001256  6E7D               	movwf	_i^0,c
  2480   001258  EF2F  F009         	goto	i2l3331
  2481   00125C                     i2l3329:
  2482                           
  2483                           ; BSR set to: 0
  2484   00125C  2A7D               	incf	_i^0,f,c
  2485   00125E                     i2l3331:
  2486                           
  2487                           ;main.c: 215:     memoria_dado = dado;
  2488   00125E  C078  F0D6         	movff	read_keyboard@dado,_memoria_dado
  2489   001262                     i2l393:
  2490   001262  0012               	return		;funcret
  2491   001264                     __end_of_read_keyboard:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _ler_teclado *****************
  2495 ;; Defined at:
  2496 ;;		line 15 in file "teclado.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  i               2    4[COMRAM] int 
  2501 ;;  i               2    2[COMRAM] int 
  2502 ;;  i               2    0[COMRAM] int 
  2503 ;;  entrada         1    7[COMRAM] unsigned char 
  2504 ;;  saida           1    6[COMRAM] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      unsigned char 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2514 ;;      Params:         0       0       0       0       0       0       0
  2515 ;;      Locals:         8       0       0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0
  2517 ;;      Totals:         8       0       0       0       0       0       0
  2518 ;;Total ram usage:        8 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_read_keyboard
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text16
  2528   0015B0                     __ptext16:
  2529                           	callstack 0
  2530   0015B0                     _ler_teclado:
  2531                           	callstack 23
  2532   0015B0                     
  2533                           ;teclado.c: 18:     uint8_t entrada, saida=16;
  2534   0015B0  0E10               	movlw	16
  2535   0015B2  6E07               	movwf	ler_teclado@saida^0,c
  2536                           
  2537                           ;teclado.c: 20:     TRISB = 0b11111000;
  2538   0015B4  0EF8               	movlw	248
  2539   0015B6  6E93               	movwf	147,c	;volatile
  2540                           
  2541                           ;teclado.c: 21:     TRISD = 0b00001111;
  2542   0015B8  0E0F               	movlw	15
  2543   0015BA  6E95               	movwf	149,c	;volatile
  2544   0015BC                     
  2545                           ;teclado.c: 23:     LATB |= 0b00000111;
  2546   0015BC  0E07               	movlw	7
  2547   0015BE  128A               	iorwf	138,f,c	;volatile
  2548   0015C0                     
  2549                           ;teclado.c: 25:     LATB ^= 0b00000001;
  2550   0015C0  0E01               	movlw	1
  2551   0015C2  1A8A               	xorwf	138,f,c	;volatile
  2552                           
  2553                           ;teclado.c: 26:     for (int i=0; i<10; i++) __nop();
  2554   0015C4  0E00               	movlw	0
  2555   0015C6  6E02               	movwf	(ler_teclado@i+1)^0,c
  2556   0015C8  0E00               	movlw	0
  2557   0015CA  6E01               	movwf	ler_teclado@i^0,c
  2558   0015CC                     i2l431:
  2559   0015CC  F000               	nop	
  2560   0015CE  4A01               	infsnz	ler_teclado@i^0,f,c
  2561   0015D0  2A02               	incf	(ler_teclado@i+1)^0,f,c
  2562   0015D2  BE02               	btfsc	(ler_teclado@i+1)^0,7,c
  2563   0015D4  EFF5  F00A         	goto	i2u254_41
  2564   0015D8  5002               	movf	(ler_teclado@i+1)^0,w,c
  2565   0015DA  E109               	bnz	i2u254_40
  2566   0015DC  0E0A               	movlw	10
  2567   0015DE  5C01               	subwf	ler_teclado@i^0,w,c
  2568   0015E0  A0D8               	btfss	status,0,c
  2569   0015E2  EFF5  F00A         	goto	i2u254_41
  2570   0015E6  EFF7  F00A         	goto	i2u254_40
  2571   0015EA                     i2u254_41:
  2572   0015EA  EFE6  F00A         	goto	i2l431
  2573   0015EE                     i2u254_40:
  2574   0015EE                     
  2575                           ;teclado.c: 27:     entrada = PORTD;
  2576   0015EE  CF83 F008          	movff	3971,ler_teclado@entrada	;volatile
  2577                           
  2578                           ;teclado.c: 29:     if ((entrada & 1) == 0) saida=10;
  2579   0015F2  B008               	btfsc	ler_teclado@entrada^0,0,c
  2580   0015F4  EFFE  F00A         	goto	i2u255_41
  2581   0015F8  EF00  F00B         	goto	i2u255_40
  2582   0015FC                     i2u255_41:
  2583   0015FC  EF02  F00B         	goto	i2l3087
  2584   001600                     i2u255_40:
  2585   001600  0E0A               	movlw	10
  2586   001602  6E07               	movwf	ler_teclado@saida^0,c
  2587   001604                     i2l3087:
  2588                           
  2589                           ;teclado.c: 30:     if ((entrada & 2) == 0) saida=7;
  2590   001604  B208               	btfsc	ler_teclado@entrada^0,1,c
  2591   001606  EF07  F00B         	goto	i2u256_41
  2592   00160A  EF09  F00B         	goto	i2u256_40
  2593   00160E                     i2u256_41:
  2594   00160E  EF0B  F00B         	goto	i2l3091
  2595   001612                     i2u256_40:
  2596   001612  0E07               	movlw	7
  2597   001614  6E07               	movwf	ler_teclado@saida^0,c
  2598   001616                     i2l3091:
  2599                           
  2600                           ;teclado.c: 31:     if ((entrada & 4) == 0) saida=4;
  2601   001616  B408               	btfsc	ler_teclado@entrada^0,2,c
  2602   001618  EF10  F00B         	goto	i2u257_41
  2603   00161C  EF12  F00B         	goto	i2u257_40
  2604   001620                     i2u257_41:
  2605   001620  EF14  F00B         	goto	i2l3095
  2606   001624                     i2u257_40:
  2607   001624  0E04               	movlw	4
  2608   001626  6E07               	movwf	ler_teclado@saida^0,c
  2609   001628                     i2l3095:
  2610                           
  2611                           ;teclado.c: 32:     if ((entrada & 8) == 0) saida=1;
  2612   001628  B608               	btfsc	ler_teclado@entrada^0,3,c
  2613   00162A  EF19  F00B         	goto	i2u258_41
  2614   00162E  EF1B  F00B         	goto	i2u258_40
  2615   001632                     i2u258_41:
  2616   001632  EF1D  F00B         	goto	i2l3099
  2617   001636                     i2u258_40:
  2618   001636  0E01               	movlw	1
  2619   001638  6E07               	movwf	ler_teclado@saida^0,c
  2620   00163A                     i2l3099:
  2621                           
  2622                           ;teclado.c: 34:     LATB ^= 0b00000011;
  2623   00163A  0E03               	movlw	3
  2624   00163C  1A8A               	xorwf	138,f,c	;volatile
  2625   00163E                     
  2626                           ;teclado.c: 35:     for (int i=0; i<10; i++) __nop();
  2627   00163E  0E00               	movlw	0
  2628   001640  6E04               	movwf	(ler_teclado@i_390+1)^0,c
  2629   001642  0E00               	movlw	0
  2630   001644  6E03               	movwf	ler_teclado@i_390^0,c
  2631   001646                     i2l437:
  2632   001646  F000               	nop	
  2633   001648  4A03               	infsnz	ler_teclado@i_390^0,f,c
  2634   00164A  2A04               	incf	(ler_teclado@i_390+1)^0,f,c
  2635   00164C  BE04               	btfsc	(ler_teclado@i_390+1)^0,7,c
  2636   00164E  EF32  F00B         	goto	i2u259_41
  2637   001652  5004               	movf	(ler_teclado@i_390+1)^0,w,c
  2638   001654  E109               	bnz	i2u259_40
  2639   001656  0E0A               	movlw	10
  2640   001658  5C03               	subwf	ler_teclado@i_390^0,w,c
  2641   00165A  A0D8               	btfss	status,0,c
  2642   00165C  EF32  F00B         	goto	i2u259_41
  2643   001660  EF34  F00B         	goto	i2u259_40
  2644   001664                     i2u259_41:
  2645   001664  EF23  F00B         	goto	i2l437
  2646   001668                     i2u259_40:
  2647   001668                     
  2648                           ;teclado.c: 36:     entrada = PORTD;
  2649   001668  CF83 F008          	movff	3971,ler_teclado@entrada	;volatile
  2650                           
  2651                           ;teclado.c: 38:     if ((entrada & 1) == 0) saida=0;
  2652   00166C  B008               	btfsc	ler_teclado@entrada^0,0,c
  2653   00166E  EF3B  F00B         	goto	i2u260_41
  2654   001672  EF3D  F00B         	goto	i2u260_40
  2655   001676                     i2u260_41:
  2656   001676  EF3F  F00B         	goto	i2l3111
  2657   00167A                     i2u260_40:
  2658   00167A  0E00               	movlw	0
  2659   00167C  6E07               	movwf	ler_teclado@saida^0,c
  2660   00167E                     i2l3111:
  2661                           
  2662                           ;teclado.c: 39:     if ((entrada & 2) == 0) saida=8;
  2663   00167E  B208               	btfsc	ler_teclado@entrada^0,1,c
  2664   001680  EF44  F00B         	goto	i2u261_41
  2665   001684  EF46  F00B         	goto	i2u261_40
  2666   001688                     i2u261_41:
  2667   001688  EF48  F00B         	goto	i2l3115
  2668   00168C                     i2u261_40:
  2669   00168C  0E08               	movlw	8
  2670   00168E  6E07               	movwf	ler_teclado@saida^0,c
  2671   001690                     i2l3115:
  2672                           
  2673                           ;teclado.c: 40:     if ((entrada & 4) == 0) saida=5;
  2674   001690  B408               	btfsc	ler_teclado@entrada^0,2,c
  2675   001692  EF4D  F00B         	goto	i2u262_41
  2676   001696  EF4F  F00B         	goto	i2u262_40
  2677   00169A                     i2u262_41:
  2678   00169A  EF51  F00B         	goto	i2l3119
  2679   00169E                     i2u262_40:
  2680   00169E  0E05               	movlw	5
  2681   0016A0  6E07               	movwf	ler_teclado@saida^0,c
  2682   0016A2                     i2l3119:
  2683                           
  2684                           ;teclado.c: 41:     if ((entrada & 8) == 0) saida=2;
  2685   0016A2  B608               	btfsc	ler_teclado@entrada^0,3,c
  2686   0016A4  EF56  F00B         	goto	i2u263_41
  2687   0016A8  EF58  F00B         	goto	i2u263_40
  2688   0016AC                     i2u263_41:
  2689   0016AC  EF5A  F00B         	goto	i2l3123
  2690   0016B0                     i2u263_40:
  2691   0016B0  0E02               	movlw	2
  2692   0016B2  6E07               	movwf	ler_teclado@saida^0,c
  2693   0016B4                     i2l3123:
  2694                           
  2695                           ;teclado.c: 43:     LATB ^= 0b00000110;
  2696   0016B4  0E06               	movlw	6
  2697   0016B6  1A8A               	xorwf	138,f,c	;volatile
  2698   0016B8                     
  2699                           ;teclado.c: 44:     for (int i=0; i<10; i++) __nop();
  2700   0016B8  0E00               	movlw	0
  2701   0016BA  6E06               	movwf	(ler_teclado@i_391+1)^0,c
  2702   0016BC  0E00               	movlw	0
  2703   0016BE  6E05               	movwf	ler_teclado@i_391^0,c
  2704   0016C0                     i2l443:
  2705   0016C0  F000               	nop	
  2706   0016C2  4A05               	infsnz	ler_teclado@i_391^0,f,c
  2707   0016C4  2A06               	incf	(ler_teclado@i_391+1)^0,f,c
  2708   0016C6  BE06               	btfsc	(ler_teclado@i_391+1)^0,7,c
  2709   0016C8  EF6F  F00B         	goto	i2u264_41
  2710   0016CC  5006               	movf	(ler_teclado@i_391+1)^0,w,c
  2711   0016CE  E109               	bnz	i2u264_40
  2712   0016D0  0E0A               	movlw	10
  2713   0016D2  5C05               	subwf	ler_teclado@i_391^0,w,c
  2714   0016D4  A0D8               	btfss	status,0,c
  2715   0016D6  EF6F  F00B         	goto	i2u264_41
  2716   0016DA  EF71  F00B         	goto	i2u264_40
  2717   0016DE                     i2u264_41:
  2718   0016DE  EF60  F00B         	goto	i2l443
  2719   0016E2                     i2u264_40:
  2720   0016E2                     
  2721                           ;teclado.c: 45:     entrada = PORTD;
  2722   0016E2  CF83 F008          	movff	3971,ler_teclado@entrada	;volatile
  2723                           
  2724                           ;teclado.c: 47:     if ((entrada & 1) == 0) saida=11;
  2725   0016E6  B008               	btfsc	ler_teclado@entrada^0,0,c
  2726   0016E8  EF78  F00B         	goto	i2u265_41
  2727   0016EC  EF7A  F00B         	goto	i2u265_40
  2728   0016F0                     i2u265_41:
  2729   0016F0  EF7C  F00B         	goto	i2l3135
  2730   0016F4                     i2u265_40:
  2731   0016F4  0E0B               	movlw	11
  2732   0016F6  6E07               	movwf	ler_teclado@saida^0,c
  2733   0016F8                     i2l3135:
  2734                           
  2735                           ;teclado.c: 48:     if ((entrada & 2) == 0) saida=9;
  2736   0016F8  B208               	btfsc	ler_teclado@entrada^0,1,c
  2737   0016FA  EF81  F00B         	goto	i2u266_41
  2738   0016FE  EF83  F00B         	goto	i2u266_40
  2739   001702                     i2u266_41:
  2740   001702  EF85  F00B         	goto	i2l3139
  2741   001706                     i2u266_40:
  2742   001706  0E09               	movlw	9
  2743   001708  6E07               	movwf	ler_teclado@saida^0,c
  2744   00170A                     i2l3139:
  2745                           
  2746                           ;teclado.c: 49:     if ((entrada & 4) == 0) saida=6;
  2747   00170A  B408               	btfsc	ler_teclado@entrada^0,2,c
  2748   00170C  EF8A  F00B         	goto	i2u267_41
  2749   001710  EF8C  F00B         	goto	i2u267_40
  2750   001714                     i2u267_41:
  2751   001714  EF8E  F00B         	goto	i2l3143
  2752   001718                     i2u267_40:
  2753   001718  0E06               	movlw	6
  2754   00171A  6E07               	movwf	ler_teclado@saida^0,c
  2755   00171C                     i2l3143:
  2756                           
  2757                           ;teclado.c: 50:     if ((entrada & 8) == 0) saida=3;
  2758   00171C  B608               	btfsc	ler_teclado@entrada^0,3,c
  2759   00171E  EF93  F00B         	goto	i2u268_41
  2760   001722  EF95  F00B         	goto	i2u268_40
  2761   001726                     i2u268_41:
  2762   001726  EF97  F00B         	goto	i2l3147
  2763   00172A                     i2u268_40:
  2764   00172A  0E03               	movlw	3
  2765   00172C  6E07               	movwf	ler_teclado@saida^0,c
  2766   00172E                     i2l3147:
  2767                           
  2768                           ;teclado.c: 52:     TRISB = 0b11111111;
  2769   00172E  6893               	setf	147,c	;volatile
  2770                           
  2771                           ;teclado.c: 53:     TRISD = 0b00000000;
  2772   001730  0E00               	movlw	0
  2773   001732  6E95               	movwf	149,c	;volatile
  2774                           
  2775                           ;teclado.c: 55:     return saida;
  2776   001734  5007               	movf	ler_teclado@saida^0,w,c
  2777   001736  0012               	return		;funcret
  2778   001738                     __end_of_ler_teclado:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _read_keyb *****************
  2782 ;; Defined at:
  2783 ;;		line 56 in file "main.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  dado            1  116[COMRAM] unsigned char 
  2788 ;;  dado_RB5        1  115[COMRAM] unsigned char 
  2789 ;;  dado_RB4        1  114[COMRAM] unsigned char 
  2790 ;;  dado_RB3        1  113[COMRAM] unsigned char 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2800 ;;      Params:         0       0       0       0       0       0       0
  2801 ;;      Locals:         4       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0
  2803 ;;      Totals:         4       0       0       0       0       0       0
  2804 ;;Total ram usage:        4 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 9
  2807 ;; This function calls:
  2808 ;;		_f_int0
  2809 ;;		_f_int1
  2810 ;;		_f_int2
  2811 ;; This function is called by:
  2812 ;;		_f_timers
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text17
  2817   00214E                     __ptext17:
  2818                           	callstack 0
  2819   00214E                     _read_keyb:
  2820                           	callstack 15
  2821   00214E                     
  2822                           ;main.c: 58:     uint8_t dado, dado_RB3, dado_RB4, dado_RB5;;main.c: 60:     static uint
      +                          8_t m_dado_RB3 = 1, m_dado_RB4 = 1, m_dado_RB5 = 1;;main.c: 62:     dado = PORTB;
  2823   00214E  CF81 F075          	movff	3969,read_keyb@dado	;volatile
  2824                           
  2825                           ;main.c: 65:     if (dado & 0b00001000)
  2826   002152  A675               	btfss	read_keyb@dado^0,3,c
  2827   002154  EFAE  F010         	goto	i2u281_41
  2828   002158  EFB0  F010         	goto	i2u281_40
  2829   00215C                     i2u281_41:
  2830   00215C  EFB4  F010         	goto	i2l3343
  2831   002160                     i2u281_40:
  2832   002160                     
  2833                           ;main.c: 66:     {;main.c: 67:         dado_RB3 = 1;
  2834   002160  0E01               	movlw	1
  2835   002162  6E72               	movwf	read_keyb@dado_RB3^0,c
  2836                           
  2837                           ;main.c: 68:     }
  2838   002164  EFB6  F010         	goto	i2l3345
  2839   002168                     i2l3343:
  2840                           
  2841                           ;main.c: 70:     {;main.c: 71:         dado_RB3 = 0;
  2842   002168  0E00               	movlw	0
  2843   00216A  6E72               	movwf	read_keyb@dado_RB3^0,c
  2844   00216C                     i2l3345:
  2845                           
  2846                           ;main.c: 73:     if (dado & 0b00010000)
  2847   00216C  A875               	btfss	read_keyb@dado^0,4,c
  2848   00216E  EFBB  F010         	goto	i2u282_41
  2849   002172  EFBD  F010         	goto	i2u282_40
  2850   002176                     i2u282_41:
  2851   002176  EFC1  F010         	goto	i2l3349
  2852   00217A                     i2u282_40:
  2853   00217A                     
  2854                           ;main.c: 74:     {;main.c: 75:         dado_RB4 = 1;
  2855   00217A  0E01               	movlw	1
  2856   00217C  6E73               	movwf	read_keyb@dado_RB4^0,c
  2857                           
  2858                           ;main.c: 76:     }
  2859   00217E  EFC3  F010         	goto	i2l3351
  2860   002182                     i2l3349:
  2861                           
  2862                           ;main.c: 79:     {;main.c: 80:         dado_RB4 = 0;
  2863   002182  0E00               	movlw	0
  2864   002184  6E73               	movwf	read_keyb@dado_RB4^0,c
  2865   002186                     i2l3351:
  2866                           
  2867                           ;main.c: 83:     if (dado & 0b00100000)
  2868   002186  AA75               	btfss	read_keyb@dado^0,5,c
  2869   002188  EFC8  F010         	goto	i2u283_41
  2870   00218C  EFCA  F010         	goto	i2u283_40
  2871   002190                     i2u283_41:
  2872   002190  EFCE  F010         	goto	i2l3355
  2873   002194                     i2u283_40:
  2874   002194                     
  2875                           ;main.c: 84:     {;main.c: 85:         dado_RB5 = 1;
  2876   002194  0E01               	movlw	1
  2877   002196  6E74               	movwf	read_keyb@dado_RB5^0,c
  2878                           
  2879                           ;main.c: 86:     }
  2880   002198  EFD0  F010         	goto	i2l3357
  2881   00219C                     i2l3355:
  2882                           
  2883                           ;main.c: 89:     {;main.c: 90:         dado_RB5=0;
  2884   00219C  0E00               	movlw	0
  2885   00219E  6E74               	movwf	read_keyb@dado_RB5^0,c
  2886   0021A0                     i2l3357:
  2887                           
  2888                           ;main.c: 93:     if (dado_RB3< m_dado_RB3)
  2889   0021A0  0100               	movlb	0	; () banked
  2890   0021A2  51BD               	movf	read_keyb@m_dado_RB3& (0+255),w,b
  2891   0021A4  5C72               	subwf	read_keyb@dado_RB3^0,w,c
  2892   0021A6  B0D8               	btfsc	status,0,c
  2893   0021A8  EFD8  F010         	goto	i2u284_41
  2894   0021AC  EFDA  F010         	goto	i2u284_40
  2895   0021B0                     i2u284_41:
  2896   0021B0  EFDC  F010         	goto	i2l3361
  2897   0021B4                     i2u284_40:
  2898   0021B4                     
  2899                           ; BSR set to: 0
  2900                           ;main.c: 94:     {;main.c: 95:         f_int0();
  2901   0021B4  EC54  F013         	call	_f_int0	;wreg free
  2902   0021B8                     i2l3361:
  2903                           
  2904                           ;main.c: 98:     if (dado_RB4 < m_dado_RB4)
  2905   0021B8  0100               	movlb	0	; () banked
  2906   0021BA  51BC               	movf	read_keyb@m_dado_RB4& (0+255),w,b
  2907   0021BC  5C73               	subwf	read_keyb@dado_RB4^0,w,c
  2908   0021BE  B0D8               	btfsc	status,0,c
  2909   0021C0  EFE4  F010         	goto	i2u285_41
  2910   0021C4  EFE6  F010         	goto	i2u285_40
  2911   0021C8                     i2u285_41:
  2912   0021C8  EFE8  F010         	goto	i2l3365
  2913   0021CC                     i2u285_40:
  2914   0021CC                     
  2915                           ; BSR set to: 0
  2916                           ;main.c: 99:     {;main.c: 100:         f_int1();
  2917   0021CC  EC21  F014         	call	_f_int1	;wreg free
  2918   0021D0                     i2l3365:
  2919                           
  2920                           ;main.c: 103:     if (dado_RB5 < m_dado_RB5)
  2921   0021D0  0100               	movlb	0	; () banked
  2922   0021D2  51BB               	movf	read_keyb@m_dado_RB5& (0+255),w,b
  2923   0021D4  5C74               	subwf	read_keyb@dado_RB5^0,w,c
  2924   0021D6  B0D8               	btfsc	status,0,c
  2925   0021D8  EFF0  F010         	goto	i2u286_41
  2926   0021DC  EFF2  F010         	goto	i2u286_40
  2927   0021E0                     i2u286_41:
  2928   0021E0  EFF4  F010         	goto	i2l3369
  2929   0021E4                     i2u286_40:
  2930   0021E4                     
  2931                           ; BSR set to: 0
  2932                           ;main.c: 104:     {;main.c: 105:         f_int2();
  2933   0021E4  EC9C  F00B         	call	_f_int2	;wreg free
  2934   0021E8                     i2l3369:
  2935                           
  2936                           ;main.c: 109:     m_dado_RB3 = dado_RB3;
  2937   0021E8  C072  F0BD         	movff	read_keyb@dado_RB3,read_keyb@m_dado_RB3
  2938   0021EC                     
  2939                           ;main.c: 110:     m_dado_RB4 = dado_RB4;
  2940   0021EC  C073  F0BC         	movff	read_keyb@dado_RB4,read_keyb@m_dado_RB4
  2941   0021F0                     
  2942                           ;main.c: 111:     m_dado_RB5 = dado_RB5;
  2943   0021F0  C074  F0BB         	movff	read_keyb@dado_RB5,read_keyb@m_dado_RB5
  2944   0021F4  0012               	return		;funcret
  2945   0021F6                     __end_of_read_keyb:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _f_int2 *****************
  2949 ;; Defined at:
  2950 ;;		line 233 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2964 ;;      Params:         0       0       0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0
  2966 ;;      Temps:          6       0       0       0       0       0       0
  2967 ;;      Totals:         6       0       0       0       0       0       0
  2968 ;;Total ram usage:        6 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 8
  2971 ;; This function calls:
  2972 ;;		___fldiv
  2973 ;;		___flmul
  2974 ;;		___fltol
  2975 ;;		___wmul
  2976 ;;		___xxtofl
  2977 ;;		_f_pwm
  2978 ;;		_lcd_str
  2979 ;;		_sprintf
  2980 ;;		i2_lcd_cmd
  2981 ;; This function is called by:
  2982 ;;		_read_keyb
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text18
  2987   001738                     __ptext18:
  2988                           	callstack 0
  2989   001738                     _f_int2:
  2990                           	callstack 15
  2991   001738                     
  2992                           ;main.c: 235:     static uint16_t duty_normalized = 0;;main.c: 236:     duty_AD = 0;
  2993   001738  0E00               	movlw	0
  2994   00173A  0100               	movlb	0	; () banked
  2995   00173C  6FD7               	movwf	_duty_AD& (0+255),b
  2996   00173E                     
  2997                           ; BSR set to: 0
  2998                           ;main.c: 237:     if(duty_LCD1_TECLADO == ' ' && duty_LCD1_TECLADO == ' ' && duty_LCD1_T
      +                          ECLADO == ' ' && duty_LCD1_TECLADO == ' ')
  2999   00173E  0E20               	movlw	32
  3000   001740  187E               	xorwf	_duty_LCD1_TECLADO^0,w,c
  3001   001742  A4D8               	btfss	status,2,c
  3002   001744  EFA6  F00B         	goto	i2u249_41
  3003   001748  EFA8  F00B         	goto	i2u249_40
  3004   00174C                     i2u249_41:
  3005   00174C  EFC5  F00B         	goto	i2l3055
  3006   001750                     i2u249_40:
  3007   001750                     
  3008                           ; BSR set to: 0
  3009   001750  0E20               	movlw	32
  3010   001752  187E               	xorwf	_duty_LCD1_TECLADO^0,w,c
  3011   001754  A4D8               	btfss	status,2,c
  3012   001756  EFAF  F00B         	goto	i2u250_41
  3013   00175A  EFB1  F00B         	goto	i2u250_40
  3014   00175E                     i2u250_41:
  3015   00175E  EFC5  F00B         	goto	i2l3055
  3016   001762                     i2u250_40:
  3017   001762                     
  3018                           ; BSR set to: 0
  3019   001762  0E20               	movlw	32
  3020   001764  187E               	xorwf	_duty_LCD1_TECLADO^0,w,c
  3021   001766  A4D8               	btfss	status,2,c
  3022   001768  EFB8  F00B         	goto	i2u251_41
  3023   00176C  EFBA  F00B         	goto	i2u251_40
  3024   001770                     i2u251_41:
  3025   001770  EFC5  F00B         	goto	i2l3055
  3026   001774                     i2u251_40:
  3027   001774                     
  3028                           ; BSR set to: 0
  3029   001774  0E20               	movlw	32
  3030   001776  187E               	xorwf	_duty_LCD1_TECLADO^0,w,c
  3031   001778  A4D8               	btfss	status,2,c
  3032   00177A  EFC1  F00B         	goto	i2u252_41
  3033   00177E  EFC3  F00B         	goto	i2u252_40
  3034   001782                     i2u252_41:
  3035   001782  EFC5  F00B         	goto	i2l3055
  3036   001786                     i2u252_40:
  3037   001786  EF5F  F00C         	goto	i2l413
  3038   00178A                     i2l3055:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;main.c: 241:     duty_normalized = duty_teclado[0]*1000 + duty_teclado[1]*100 + duty_te
      +                          clado[2]*10 + duty_teclado[3];
  3042   00178A  C0C1  F001         	movff	_duty_teclado,___wmul@multiplier
  3043   00178E  C0C2  F002         	movff	_duty_teclado+1,___wmul@multiplier+1
  3044   001792  0E03               	movlw	3
  3045   001794  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3046   001796  0EE8               	movlw	232
  3047   001798  6E03               	movwf	___wmul@multiplicand^0,c
  3048   00179A  ECAA  F013         	call	___wmul	;wreg free
  3049   00179E  C001  F06C         	movff	?___wmul,??_f_int2
  3050   0017A2  C002  F06D         	movff	?___wmul+1,??_f_int2+1
  3051   0017A6  C0C3  F001         	movff	_duty_teclado+2,___wmul@multiplier
  3052   0017AA  C0C4  F002         	movff	_duty_teclado+3,___wmul@multiplier+1
  3053   0017AE  0E00               	movlw	0
  3054   0017B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3055   0017B2  0E64               	movlw	100
  3056   0017B4  6E03               	movwf	___wmul@multiplicand^0,c
  3057   0017B6  ECAA  F013         	call	___wmul	;wreg free
  3058   0017BA  5001               	movf	?___wmul^0,w,c
  3059   0017BC  246C               	addwf	??_f_int2^0,w,c
  3060   0017BE  6E6E               	movwf	(??_f_int2+2)^0,c
  3061   0017C0  5002               	movf	(?___wmul+1)^0,w,c
  3062   0017C2  206D               	addwfc	(??_f_int2+1)^0,w,c
  3063   0017C4  6E6F               	movwf	(??_f_int2+3)^0,c
  3064   0017C6  C0C5  F001         	movff	_duty_teclado+4,___wmul@multiplier
  3065   0017CA  C0C6  F002         	movff	_duty_teclado+5,___wmul@multiplier+1
  3066   0017CE  0E00               	movlw	0
  3067   0017D0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3068   0017D2  0E0A               	movlw	10
  3069   0017D4  6E03               	movwf	___wmul@multiplicand^0,c
  3070   0017D6  ECAA  F013         	call	___wmul	;wreg free
  3071   0017DA  5001               	movf	?___wmul^0,w,c
  3072   0017DC  246E               	addwf	(??_f_int2+2)^0,w,c
  3073   0017DE  6E70               	movwf	(??_f_int2+4)^0,c
  3074   0017E0  5002               	movf	(?___wmul+1)^0,w,c
  3075   0017E2  206F               	addwfc	(??_f_int2+3)^0,w,c
  3076   0017E4  6E71               	movwf	(??_f_int2+5)^0,c
  3077   0017E6  0100               	movlb	0	; () banked
  3078   0017E8  51C7               	movf	(_duty_teclado+6)& (0+255),w,b
  3079   0017EA  2470               	addwf	(??_f_int2+4)^0,w,c
  3080   0017EC  6FD1               	movwf	f_int2@duty_normalized& (0+255),b
  3081   0017EE  51C8               	movf	(_duty_teclado+7)& (0+255),w,b
  3082   0017F0  2071               	addwfc	(??_f_int2+5)^0,w,c
  3083   0017F2  6FD2               	movwf	(f_int2@duty_normalized+1)& (0+255),b
  3084   0017F4                     
  3085                           ; BSR set to: 0
  3086                           ;main.c: 242:     pwm_ventoinha = duty_normalized;
  3087   0017F4  C0D1  F076         	movff	f_int2@duty_normalized,_pwm_ventoinha
  3088   0017F8  C0D2  F077         	movff	f_int2@duty_normalized+1,_pwm_ventoinha+1
  3089   0017FC                     
  3090                           ; BSR set to: 0
  3091                           ;main.c: 243:     if(pwm_ventoinha < 1024)
  3092   0017FC  0E04               	movlw	4
  3093   0017FE  5C77               	subwf	(_pwm_ventoinha+1)^0,w,c
  3094   001800  B0D8               	btfsc	status,0,c
  3095   001802  EF05  F00C         	goto	i2u253_41
  3096   001806  EF07  F00C         	goto	i2u253_40
  3097   00180A                     i2u253_41:
  3098   00180A  EF0D  F00C         	goto	i2l3063
  3099   00180E                     i2u253_40:
  3100   00180E                     
  3101                           ; BSR set to: 0
  3102                           ;main.c: 244:         f_pwm(pwm_ventoinha);
  3103   00180E  C076  F001         	movff	_pwm_ventoinha,f_pwm@duty
  3104   001812  C077  F002         	movff	_pwm_ventoinha+1,f_pwm@duty+1
  3105   001816  EC6E  F013         	call	_f_pwm	;wreg free
  3106   00181A                     i2l3063:
  3107                           
  3108                           ;main.c: 245:     porcentagem = (pwm_ventoinha * 100.0) / 1023.0;
  3109   00181A  0E00               	movlw	0
  3110   00181C  6E2C               	movwf	___fldiv@a^0,c
  3111   00181E  0EC0               	movlw	192
  3112   001820  6E2D               	movwf	(___fldiv@a+1)^0,c
  3113   001822  0E7F               	movlw	127
  3114   001824  6E2E               	movwf	(___fldiv@a+2)^0,c
  3115   001826  0E44               	movlw	68
  3116   001828  6E2F               	movwf	(___fldiv@a+3)^0,c
  3117   00182A  0E00               	movlw	0
  3118   00182C  6E13               	movwf	___flmul@a^0,c
  3119   00182E  0E00               	movlw	0
  3120   001830  6E14               	movwf	(___flmul@a+1)^0,c
  3121   001832  0EC8               	movlw	200
  3122   001834  6E15               	movwf	(___flmul@a+2)^0,c
  3123   001836  0E42               	movlw	66
  3124   001838  6E16               	movwf	(___flmul@a+3)^0,c
  3125   00183A  C076  F001         	movff	_pwm_ventoinha,___xxtofl@val
  3126   00183E  C077  F002         	movff	_pwm_ventoinha+1,___xxtofl@val+1
  3127   001842  6A03               	clrf	(___xxtofl@val+2)^0,c
  3128   001844  6A04               	clrf	(___xxtofl@val+3)^0,c
  3129   001846  0E00               	movlw	0
  3130   001848  EC32  F009         	call	___xxtofl
  3131   00184C  C001  F00F         	movff	?___xxtofl,___flmul@b
  3132   001850  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3133   001854  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3134   001858  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3135   00185C  EC05  F003         	call	___flmul	;wreg free
  3136   001860  C00F  F028         	movff	?___flmul,___fldiv@b
  3137   001864  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3138   001868  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3139   00186C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3140   001870  EC1A  F005         	call	___fldiv	;wreg free
  3141   001874  C028  F041         	movff	?___fldiv,___fltol@f1
  3142   001878  C029  F042         	movff	?___fldiv+1,___fltol@f1+1
  3143   00187C  C02A  F043         	movff	?___fldiv+2,___fltol@f1+2
  3144   001880  C02B  F044         	movff	?___fldiv+3,___fltol@f1+3
  3145   001884  EC94  F00E         	call	___fltol	;wreg free
  3146   001888  C041  F0D3         	movff	?___fltol,_porcentagem
  3147   00188C  C042  F0D4         	movff	?___fltol+1,_porcentagem+1
  3148   001890                     
  3149                           ;main.c: 246:     lcd_cmd(0xC0);
  3150   001890  0EC0               	movlw	192
  3151   001892  ECCE  F013         	call	i2_lcd_cmd
  3152   001896                     
  3153                           ;main.c: 247:     sprintf(buffer, "%d%%", porcentagem);
  3154   001896  0EE0               	movlw	low _buffer
  3155   001898  6E59               	movwf	sprintf@s^0,c
  3156   00189A  0E00               	movlw	high _buffer
  3157   00189C  6E5A               	movwf	(sprintf@s+1)^0,c
  3158   00189E  0E01               	movlw	low STR_2
  3159   0018A0  6E5B               	movwf	sprintf@fmt^0,c
  3160   0018A2  0E06               	movlw	high STR_2
  3161   0018A4  6E5C               	movwf	(sprintf@fmt+1)^0,c
  3162   0018A6  C0D3  F05D         	movff	_porcentagem,?_sprintf+4
  3163   0018AA  C0D4  F05E         	movff	_porcentagem+1,?_sprintf+5
  3164   0018AE  ECA3  F012         	call	_sprintf	;wreg free
  3165   0018B2                     
  3166                           ;main.c: 248:     lcd_str(buffer);
  3167   0018B2  0EE0               	movlw	low _buffer
  3168   0018B4  6E03               	movwf	lcd_str@str^0,c
  3169   0018B6  0E00               	movlw	high _buffer
  3170   0018B8  6E04               	movwf	(lcd_str@str+1)^0,c
  3171   0018BA  EC38  F011         	call	_lcd_str	;wreg free
  3172   0018BE                     i2l413:
  3173   0018BE  0012               	return		;funcret
  3174   0018C0                     __end_of_f_int2:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function ___wmul *****************
  3178 ;; Defined at:
  3179 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  multiplier      2    0[COMRAM] unsigned int 
  3182 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  product         2    4[COMRAM] unsigned int 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  2    0[COMRAM] unsigned int 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, prodl, prodh
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3194 ;;      Params:         4       0       0       0       0       0       0
  3195 ;;      Locals:         2       0       0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0
  3197 ;;      Totals:         6       0       0       0       0       0       0
  3198 ;;Total ram usage:        6 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_f_int2
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text19
  3208   002754                     __ptext19:
  3209                           	callstack 0
  3210   002754                     ___wmul:
  3211                           	callstack 22
  3212   002754  5001               	movf	___wmul@multiplier^0,w,c
  3213   002756  0203               	mulwf	___wmul@multiplicand^0,c
  3214   002758  CFF3 F005          	movff	prodl,___wmul@product
  3215   00275C  CFF4 F006          	movff	prodh,___wmul@product+1
  3216   002760  5001               	movf	___wmul@multiplier^0,w,c
  3217   002762  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3218   002764  50F3               	movf	243,w,c
  3219   002766  2606               	addwf	(___wmul@product+1)^0,f,c
  3220   002768  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3221   00276A  0203               	mulwf	___wmul@multiplicand^0,c
  3222   00276C  50F3               	movf	243,w,c
  3223   00276E  2606               	addwf	(___wmul@product+1)^0,f,c
  3224   002770  C005  F001         	movff	___wmul@product,?___wmul
  3225   002774  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3226   002778  0012               	return		;funcret
  3227   00277A                     __end_of___wmul:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function _f_int1 *****************
  3231 ;; Defined at:
  3232 ;;		line 228 in file "main.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3246 ;;      Params:         0       0       0       0       0       0       0
  3247 ;;      Locals:         0       0       0       0       0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0
  3249 ;;      Totals:         0       0       0       0       0       0       0
  3250 ;;Total ram usage:        0 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_read_keyb
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text20
  3260   002842                     __ptext20:
  3261                           	callstack 0
  3262   002842                     _f_int1:
  3263                           	callstack 23
  3264   002842                     
  3265                           ;main.c: 230:     duty_AD = 1;
  3266   002842  0E01               	movlw	1
  3267   002844  0100               	movlb	0	; () banked
  3268   002846  6FD7               	movwf	_duty_AD& (0+255),b
  3269   002848                     
  3270                           ; BSR set to: 0
  3271   002848  0012               	return		;funcret
  3272   00284A                     __end_of_f_int1:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _f_int0 *****************
  3276 ;; Defined at:
  3277 ;;		line 218 in file "main.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3291 ;;      Params:         0       0       0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 3
  3298 ;; This function calls:
  3299 ;;		_f_pwm
  3300 ;;		_lcd_str
  3301 ;;		i2_lcd_cmd
  3302 ;; This function is called by:
  3303 ;;		_read_keyb
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text21
  3308   0026A8                     __ptext21:
  3309                           	callstack 0
  3310   0026A8                     _f_int0:
  3311                           	callstack 20
  3312   0026A8                     
  3313                           ;main.c: 220:     pwm_ventoinha = 0;
  3314   0026A8  0E00               	movlw	0
  3315   0026AA  6E77               	movwf	(_pwm_ventoinha+1)^0,c
  3316   0026AC  0E00               	movlw	0
  3317   0026AE  6E76               	movwf	_pwm_ventoinha^0,c
  3318   0026B0                     
  3319                           ;main.c: 221:     lcd_cmd(0x01);
  3320   0026B0  0E01               	movlw	1
  3321   0026B2  ECCE  F013         	call	i2_lcd_cmd
  3322   0026B6                     
  3323                           ;main.c: 222:     f_pwm(pwm_ventoinha);
  3324   0026B6  C076  F001         	movff	_pwm_ventoinha,f_pwm@duty
  3325   0026BA  C077  F002         	movff	_pwm_ventoinha+1,f_pwm@duty+1
  3326   0026BE  EC6E  F013         	call	_f_pwm	;wreg free
  3327   0026C2                     
  3328                           ;main.c: 223:     duty_AD = 0;
  3329   0026C2  0E00               	movlw	0
  3330   0026C4  0100               	movlb	0	; () banked
  3331   0026C6  6FD7               	movwf	_duty_AD& (0+255),b
  3332   0026C8                     
  3333                           ; BSR set to: 0
  3334                           ;main.c: 224:     lcd_cmd(0xC0);
  3335   0026C8  0EC0               	movlw	192
  3336   0026CA  ECCE  F013         	call	i2_lcd_cmd
  3337   0026CE                     
  3338                           ;main.c: 225:     lcd_str("0%");
  3339   0026CE  0E06               	movlw	low STR_1
  3340   0026D0  6E03               	movwf	lcd_str@str^0,c
  3341   0026D2  0E06               	movlw	high STR_1
  3342   0026D4  6E04               	movwf	(lcd_str@str+1)^0,c
  3343   0026D6  EC38  F011         	call	_lcd_str	;wreg free
  3344   0026DA  0012               	return		;funcret
  3345   0026DC                     __end_of_f_int0:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _mux_display *****************
  3349 ;; Defined at:
  3350 ;;		line 14 in file "Display.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3364 ;;      Params:         0       0       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0
  3366 ;;      Temps:          2       0       0       0       0       0       0
  3367 ;;      Totals:         2       0       0       0       0       0       0
  3368 ;;Total ram usage:        2 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_f_timers
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text22
  3378   00209C                     __ptext22:
  3379                           	callstack 0
  3380   00209C                     _mux_display:
  3381                           	callstack 24
  3382   00209C                     
  3383                           ;Display.c: 15:     static uint8_t estado = 0;;Display.c: 17:     switch (estado) {
  3384   00209C  EF88  F010         	goto	i2l3215
  3385   0020A0                     i2l60:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;Display.c: 19:             LATA2 = 1;
  3389   0020A0  8489               	bsf	3977,2,c	;volatile
  3390                           
  3391                           ;Display.c: 20:             LATA5 = 0;
  3392   0020A2  9A89               	bcf	3977,5,c	;volatile
  3393   0020A4                     
  3394                           ; BSR set to: 0
  3395                           ;Display.c: 21:             LATD = conv7seg[display1];
  3396   0020A4  0EA2               	movlw	low _conv7seg
  3397   0020A6  25DE               	addwf	_display1& (0+255),w,b
  3398   0020A8  6ED9               	movwf	fsr2l,c
  3399   0020AA  6ADA               	clrf	fsr2h,c
  3400   0020AC  0E00               	movlw	high _conv7seg
  3401   0020AE  22DA               	addwfc	fsr2h,f,c
  3402   0020B0  50DF               	movf	indf2,w,c
  3403   0020B2  6E8C               	movwf	140,c	;volatile
  3404   0020B4                     
  3405                           ; BSR set to: 0
  3406                           ;Display.c: 22:             estado = 1;
  3407   0020B4  0E01               	movlw	1
  3408   0020B6  6FD8               	movwf	mux_display@estado& (0+255),b
  3409                           
  3410                           ;Display.c: 23:             break;
  3411   0020B8  EFA6  F010         	goto	i2l65
  3412   0020BC                     i2l62:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;Display.c: 26:             LATA2 = 0;
  3416   0020BC  9489               	bcf	3977,2,c	;volatile
  3417                           
  3418                           ;Display.c: 27:             LATA3 = 1;
  3419   0020BE  8689               	bsf	3977,3,c	;volatile
  3420   0020C0                     
  3421                           ; BSR set to: 0
  3422                           ;Display.c: 28:             LATD = conv7seg[display2];
  3423   0020C0  0EA2               	movlw	low _conv7seg
  3424   0020C2  25DD               	addwf	_display2& (0+255),w,b
  3425   0020C4  6ED9               	movwf	fsr2l,c
  3426   0020C6  6ADA               	clrf	fsr2h,c
  3427   0020C8  0E00               	movlw	high _conv7seg
  3428   0020CA  22DA               	addwfc	fsr2h,f,c
  3429   0020CC  50DF               	movf	indf2,w,c
  3430   0020CE  6E8C               	movwf	140,c	;volatile
  3431   0020D0                     
  3432                           ; BSR set to: 0
  3433                           ;Display.c: 29:             estado = 2;
  3434   0020D0  0E02               	movlw	2
  3435   0020D2  6FD8               	movwf	mux_display@estado& (0+255),b
  3436                           
  3437                           ;Display.c: 30:             break;
  3438   0020D4  EFA6  F010         	goto	i2l65
  3439   0020D8                     i2l63:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;Display.c: 33:             LATA3 = 0;
  3443   0020D8  9689               	bcf	3977,3,c	;volatile
  3444                           
  3445                           ;Display.c: 34:             LATA4 = 1;
  3446   0020DA  8889               	bsf	3977,4,c	;volatile
  3447   0020DC                     
  3448                           ; BSR set to: 0
  3449                           ;Display.c: 35:             LATD = conv7seg[display3];
  3450   0020DC  0EA2               	movlw	low _conv7seg
  3451   0020DE  25DC               	addwf	_display3& (0+255),w,b
  3452   0020E0  6ED9               	movwf	fsr2l,c
  3453   0020E2  6ADA               	clrf	fsr2h,c
  3454   0020E4  0E00               	movlw	high _conv7seg
  3455   0020E6  22DA               	addwfc	fsr2h,f,c
  3456   0020E8  50DF               	movf	indf2,w,c
  3457   0020EA  6E8C               	movwf	140,c	;volatile
  3458   0020EC                     
  3459                           ; BSR set to: 0
  3460                           ;Display.c: 36:             estado = 3;
  3461   0020EC  0E03               	movlw	3
  3462   0020EE  6FD8               	movwf	mux_display@estado& (0+255),b
  3463                           
  3464                           ;Display.c: 37:             break;
  3465   0020F0  EFA6  F010         	goto	i2l65
  3466   0020F4                     i2l64:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;Display.c: 40:             LATA4 = 0;
  3470   0020F4  9889               	bcf	3977,4,c	;volatile
  3471                           
  3472                           ;Display.c: 41:             LATA5 = 1;
  3473   0020F6  8A89               	bsf	3977,5,c	;volatile
  3474   0020F8                     
  3475                           ; BSR set to: 0
  3476                           ;Display.c: 42:             LATD = conv7seg[display4];
  3477   0020F8  0EA2               	movlw	low _conv7seg
  3478   0020FA  25DB               	addwf	_display4& (0+255),w,b
  3479   0020FC  6ED9               	movwf	fsr2l,c
  3480   0020FE  6ADA               	clrf	fsr2h,c
  3481   002100  0E00               	movlw	high _conv7seg
  3482   002102  22DA               	addwfc	fsr2h,f,c
  3483   002104  50DF               	movf	indf2,w,c
  3484   002106  6E8C               	movwf	140,c	;volatile
  3485   002108                     
  3486                           ; BSR set to: 0
  3487                           ;Display.c: 43:             estado = 0;
  3488   002108  0E00               	movlw	0
  3489   00210A  6FD8               	movwf	mux_display@estado& (0+255),b
  3490                           
  3491                           ;Display.c: 44:             break;
  3492   00210C  EFA6  F010         	goto	i2l65
  3493   002110                     i2l3215:
  3494   002110  0100               	movlb	0	; () banked
  3495   002112  51D8               	movf	mux_display@estado& (0+255),w,b
  3496   002114  6E01               	movwf	??_mux_display^0,c
  3497   002116  6A02               	clrf	(??_mux_display+1)^0,c
  3498                           
  3499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3500                           ; Switch size 1, requested type "simple"
  3501                           ; Number of cases is 1, Range of values is 0 to 0
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte            4     3 (average)
  3505                           ;	Chosen strategy is simple_byte
  3506   002118  5002               	movf	(??_mux_display+1)^0,w,c
  3507   00211A  0A00               	xorlw	0	; case 0
  3508   00211C  B4D8               	btfsc	status,2,c
  3509   00211E  EF93  F010         	goto	i2l3777
  3510   002122  EFA6  F010         	goto	i2l65
  3511   002126                     i2l3777:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ; Switch size 1, requested type "simple"
  3515                           ; Number of cases is 4, Range of values is 0 to 3
  3516                           ; switch strategies available:
  3517                           ; Name         Instructions Cycles
  3518                           ; simple_byte           13     7 (average)
  3519                           ;	Chosen strategy is simple_byte
  3520   002126  5001               	movf	??_mux_display^0,w,c
  3521   002128  0A00               	xorlw	0	; case 0
  3522   00212A  B4D8               	btfsc	status,2,c
  3523   00212C  EF50  F010         	goto	i2l60
  3524   002130  0A01               	xorlw	1	; case 1
  3525   002132  B4D8               	btfsc	status,2,c
  3526   002134  EF5E  F010         	goto	i2l62
  3527   002138  0A03               	xorlw	3	; case 2
  3528   00213A  B4D8               	btfsc	status,2,c
  3529   00213C  EF6C  F010         	goto	i2l63
  3530   002140  0A01               	xorlw	1	; case 3
  3531   002142  B4D8               	btfsc	status,2,c
  3532   002144  EF7A  F010         	goto	i2l64
  3533   002148  EFA6  F010         	goto	i2l65
  3534   00214C                     i2l65:
  3535                           
  3536                           ; BSR set to: 0
  3537   00214C  0012               	return		;funcret
  3538   00214E                     __end_of_mux_display:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _Read_AD *****************
  3542 ;; Defined at:
  3543 ;;		line 251 in file "main.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  pwm_aux         2  111[COMRAM] unsigned short 
  3548 ;;  data            2  109[COMRAM] unsigned short 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         0       0       0       0       0       0       0
  3559 ;;      Locals:         4       0       0       0       0       0       0
  3560 ;;      Temps:          2       0       0       0       0       0       0
  3561 ;;      Totals:         6       0       0       0       0       0       0
  3562 ;;Total ram usage:        6 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 8
  3565 ;; This function calls:
  3566 ;;		___fldiv
  3567 ;;		___flmul
  3568 ;;		___fltol
  3569 ;;		___lwdiv
  3570 ;;		___lwmod
  3571 ;;		___xxtofl
  3572 ;;		_f_pwm
  3573 ;;		_lcd_str
  3574 ;;		_sprintf
  3575 ;;		i2_lcd_cmd
  3576 ;; This function is called by:
  3577 ;;		_f_timers
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text23
  3582   001A48                     __ptext23:
  3583                           	callstack 0
  3584   001A48                     _Read_AD:
  3585                           	callstack 16
  3586   001A48                     
  3587                           ;main.c: 253:     uint16_t data = AD_data[0], pwm_aux = 0;
  3588   001A48  C0C9  F06E         	movff	_AD_data,Read_AD@data
  3589   001A4C  C0CA  F06F         	movff	_AD_data+1,Read_AD@data+1
  3590   001A50                     
  3591                           ;main.c: 255:     pwm_aux = data<<2;
  3592   001A50  C06E  F06C         	movff	Read_AD@data,??_Read_AD
  3593   001A54  C06F  F06D         	movff	Read_AD@data+1,??_Read_AD+1
  3594   001A58  90D8               	bcf	status,0,c
  3595   001A5A  366C               	rlcf	??_Read_AD^0,f,c
  3596   001A5C  366D               	rlcf	(??_Read_AD+1)^0,f,c
  3597   001A5E  90D8               	bcf	status,0,c
  3598   001A60  366C               	rlcf	??_Read_AD^0,f,c
  3599   001A62  366D               	rlcf	(??_Read_AD+1)^0,f,c
  3600   001A64  C06C  F070         	movff	??_Read_AD,Read_AD@pwm_aux
  3601   001A68  C06D  F071         	movff	??_Read_AD+1,Read_AD@pwm_aux+1
  3602   001A6C                     
  3603                           ;main.c: 256:     display1 = (pwm_aux)/1000;
  3604   001A6C  C070  F006         	movff	Read_AD@pwm_aux,___lwdiv@dividend
  3605   001A70  C071  F007         	movff	Read_AD@pwm_aux+1,___lwdiv@dividend+1
  3606   001A74  0E03               	movlw	3
  3607   001A76  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3608   001A78  0EE8               	movlw	232
  3609   001A7A  6E08               	movwf	___lwdiv@divisor^0,c
  3610   001A7C  EC74  F011         	call	___lwdiv	;wreg free
  3611   001A80  5006               	movf	?___lwdiv^0,w,c
  3612   001A82  0100               	movlb	0	; () banked
  3613   001A84  6FDE               	movwf	_display1& (0+255),b
  3614   001A86                     
  3615                           ; BSR set to: 0
  3616                           ;main.c: 257:     display2 = ((pwm_aux)%1000)/100;
  3617   001A86  0E03               	movlw	3
  3618   001A88  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3619   001A8A  0EE8               	movlw	232
  3620   001A8C  6E03               	movwf	___lwmod@divisor^0,c
  3621   001A8E  C070  F001         	movff	Read_AD@pwm_aux,___lwmod@dividend
  3622   001A92  C071  F002         	movff	Read_AD@pwm_aux+1,___lwmod@dividend+1
  3623   001A96  EC47  F012         	call	___lwmod	;wreg free
  3624   001A9A  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3625   001A9E  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3626   001AA2  0E00               	movlw	0
  3627   001AA4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3628   001AA6  0E64               	movlw	100
  3629   001AA8  6E08               	movwf	___lwdiv@divisor^0,c
  3630   001AAA  EC74  F011         	call	___lwdiv	;wreg free
  3631   001AAE  5006               	movf	?___lwdiv^0,w,c
  3632   001AB0  0100               	movlb	0	; () banked
  3633   001AB2  6FDD               	movwf	_display2& (0+255),b
  3634   001AB4                     
  3635                           ; BSR set to: 0
  3636                           ;main.c: 258:     display3 = ((pwm_aux)%100)/10;
  3637   001AB4  0E00               	movlw	0
  3638   001AB6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3639   001AB8  0E64               	movlw	100
  3640   001ABA  6E03               	movwf	___lwmod@divisor^0,c
  3641   001ABC  C070  F001         	movff	Read_AD@pwm_aux,___lwmod@dividend
  3642   001AC0  C071  F002         	movff	Read_AD@pwm_aux+1,___lwmod@dividend+1
  3643   001AC4  EC47  F012         	call	___lwmod	;wreg free
  3644   001AC8  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3645   001ACC  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3646   001AD0  0E00               	movlw	0
  3647   001AD2  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3648   001AD4  0E0A               	movlw	10
  3649   001AD6  6E08               	movwf	___lwdiv@divisor^0,c
  3650   001AD8  EC74  F011         	call	___lwdiv	;wreg free
  3651   001ADC  5006               	movf	?___lwdiv^0,w,c
  3652   001ADE  0100               	movlb	0	; () banked
  3653   001AE0  6FDC               	movwf	_display3& (0+255),b
  3654   001AE2                     
  3655                           ; BSR set to: 0
  3656                           ;main.c: 259:     display4 = (pwm_aux)%10;
  3657   001AE2  C070  F001         	movff	Read_AD@pwm_aux,___lwmod@dividend
  3658   001AE6  C071  F002         	movff	Read_AD@pwm_aux+1,___lwmod@dividend+1
  3659   001AEA  0E00               	movlw	0
  3660   001AEC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3661   001AEE  0E0A               	movlw	10
  3662   001AF0  6E03               	movwf	___lwmod@divisor^0,c
  3663   001AF2  EC47  F012         	call	___lwmod	;wreg free
  3664   001AF6  5001               	movf	?___lwmod^0,w,c
  3665   001AF8  0100               	movlb	0	; () banked
  3666   001AFA  6FDB               	movwf	_display4& (0+255),b
  3667   001AFC                     
  3668                           ; BSR set to: 0
  3669                           ;main.c: 261:     if(duty_AD)
  3670   001AFC  51D7               	movf	_duty_AD& (0+255),w,b
  3671   001AFE  B4D8               	btfsc	status,2,c
  3672   001B00  EF84  F00D         	goto	i2u287_41
  3673   001B04  EF86  F00D         	goto	i2u287_40
  3674   001B08                     i2u287_41:
  3675   001B08  EFE1  F00D         	goto	i2l418
  3676   001B0C                     i2u287_40:
  3677   001B0C                     
  3678                           ; BSR set to: 0
  3679                           ;main.c: 262:     {;main.c: 263:         porcentagem = (pwm_aux * 100.0) / 1023.0;
  3680   001B0C  0E00               	movlw	0
  3681   001B0E  6E2C               	movwf	___fldiv@a^0,c
  3682   001B10  0EC0               	movlw	192
  3683   001B12  6E2D               	movwf	(___fldiv@a+1)^0,c
  3684   001B14  0E7F               	movlw	127
  3685   001B16  6E2E               	movwf	(___fldiv@a+2)^0,c
  3686   001B18  0E44               	movlw	68
  3687   001B1A  6E2F               	movwf	(___fldiv@a+3)^0,c
  3688   001B1C  0E00               	movlw	0
  3689   001B1E  6E13               	movwf	___flmul@a^0,c
  3690   001B20  0E00               	movlw	0
  3691   001B22  6E14               	movwf	(___flmul@a+1)^0,c
  3692   001B24  0EC8               	movlw	200
  3693   001B26  6E15               	movwf	(___flmul@a+2)^0,c
  3694   001B28  0E42               	movlw	66
  3695   001B2A  6E16               	movwf	(___flmul@a+3)^0,c
  3696   001B2C  C070  F001         	movff	Read_AD@pwm_aux,___xxtofl@val
  3697   001B30  C071  F002         	movff	Read_AD@pwm_aux+1,___xxtofl@val+1
  3698   001B34  6A03               	clrf	(___xxtofl@val+2)^0,c
  3699   001B36  6A04               	clrf	(___xxtofl@val+3)^0,c
  3700   001B38  0E00               	movlw	0
  3701   001B3A  EC32  F009         	call	___xxtofl
  3702   001B3E  C001  F00F         	movff	?___xxtofl,___flmul@b
  3703   001B42  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3704   001B46  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3705   001B4A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3706   001B4E  EC05  F003         	call	___flmul	;wreg free
  3707   001B52  C00F  F028         	movff	?___flmul,___fldiv@b
  3708   001B56  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3709   001B5A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3710   001B5E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3711   001B62  EC1A  F005         	call	___fldiv	;wreg free
  3712   001B66  C028  F041         	movff	?___fldiv,___fltol@f1
  3713   001B6A  C029  F042         	movff	?___fldiv+1,___fltol@f1+1
  3714   001B6E  C02A  F043         	movff	?___fldiv+2,___fltol@f1+2
  3715   001B72  C02B  F044         	movff	?___fldiv+3,___fltol@f1+3
  3716   001B76  EC94  F00E         	call	___fltol	;wreg free
  3717   001B7A  C041  F0D3         	movff	?___fltol,_porcentagem
  3718   001B7E  C042  F0D4         	movff	?___fltol+1,_porcentagem+1
  3719   001B82                     
  3720                           ;main.c: 264:         f_pwm(pwm_aux);
  3721   001B82  C070  F001         	movff	Read_AD@pwm_aux,f_pwm@duty
  3722   001B86  C071  F002         	movff	Read_AD@pwm_aux+1,f_pwm@duty+1
  3723   001B8A  EC6E  F013         	call	_f_pwm	;wreg free
  3724   001B8E                     
  3725                           ;main.c: 265:         lcd_cmd(0xC0);
  3726   001B8E  0EC0               	movlw	192
  3727   001B90  ECCE  F013         	call	i2_lcd_cmd
  3728   001B94                     
  3729                           ;main.c: 266:         sprintf(buffer, "%d%%", porcentagem);
  3730   001B94  0EE0               	movlw	low _buffer
  3731   001B96  6E59               	movwf	sprintf@s^0,c
  3732   001B98  0E00               	movlw	high _buffer
  3733   001B9A  6E5A               	movwf	(sprintf@s+1)^0,c
  3734   001B9C  0E01               	movlw	low STR_2
  3735   001B9E  6E5B               	movwf	sprintf@fmt^0,c
  3736   001BA0  0E06               	movlw	high STR_2
  3737   001BA2  6E5C               	movwf	(sprintf@fmt+1)^0,c
  3738   001BA4  C0D3  F05D         	movff	_porcentagem,?_sprintf+4
  3739   001BA8  C0D4  F05E         	movff	_porcentagem+1,?_sprintf+5
  3740   001BAC  ECA3  F012         	call	_sprintf	;wreg free
  3741   001BB0                     
  3742                           ;main.c: 267:         lcd_str(buffer);
  3743   001BB0  0EE0               	movlw	low _buffer
  3744   001BB2  6E03               	movwf	lcd_str@str^0,c
  3745   001BB4  0E00               	movlw	high _buffer
  3746   001BB6  6E04               	movwf	(lcd_str@str+1)^0,c
  3747   001BB8  EC38  F011         	call	_lcd_str	;wreg free
  3748   001BBC                     
  3749                           ;main.c: 268:         duty_AD = 0;
  3750   001BBC  0E00               	movlw	0
  3751   001BBE  0100               	movlb	0	; () banked
  3752   001BC0  6FD7               	movwf	_duty_AD& (0+255),b
  3753   001BC2                     i2l418:
  3754                           
  3755                           ; BSR set to: 0
  3756   001BC2  0012               	return		;funcret
  3757   001BC4                     __end_of_Read_AD:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function i2_lcd_cmd *****************
  3761 ;; Defined at:
  3762 ;;		line 34 in file "lcd.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  val             1    wreg     unsigned char 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  val             1    1[COMRAM] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3776 ;;      Params:         0       0       0       0       0       0       0
  3777 ;;      Locals:         1       0       0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0
  3779 ;;      Totals:         1       0       0       0       0       0       0
  3780 ;;Total ram usage:        1 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 1
  3783 ;; This function calls:
  3784 ;;		i2_lcd_wr
  3785 ;; This function is called by:
  3786 ;;		_show_to_LCD
  3787 ;;		_f_int0
  3788 ;;		_f_int2
  3789 ;;		_Read_AD
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text24
  3794   00279C                     __ptext24:
  3795                           	callstack 0
  3796   00279C                     i2_lcd_cmd:
  3797                           	callstack 22
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;incstack = 0
  3801                           ;i2lcd_cmd@val stored from wreg
  3802   00279C  6E02               	movwf	i2lcd_cmd@val^0,c
  3803   00279E                     
  3804                           ;lcd.c: 34: void lcd_cmd(unsigned char val);lcd.c: 35: {;lcd.c: 36:  PORTEbits.RE1=1;
  3805   00279E  8284               	bsf	132,1,c	;volatile
  3806   0027A0                     
  3807                           ;lcd.c: 37:     lcd_wr(val);
  3808   0027A0  5002               	movf	i2lcd_cmd@val^0,w,c
  3809   0027A2  EC25  F014         	call	i2_lcd_wr
  3810   0027A6                     
  3811                           ;lcd.c: 38:     PORTEbits.RE2=0;
  3812   0027A6  9484               	bcf	132,2,c	;volatile
  3813   0027A8                     
  3814                           ;lcd.c: 39:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3815   0027A8  0E0D               	movlw	13
  3816   0027AA                     i2u306_47:
  3817   0027AA  2EE8               	decfsz	wreg,f,c
  3818   0027AC  D7FE               	bra	i2u306_47
  3819   0027AE  F000               	nop	
  3820   0027B0                     
  3821                           ;lcd.c: 40:     PORTEbits.RE1=0;
  3822   0027B0  9284               	bcf	132,1,c	;volatile
  3823   0027B2                     
  3824                           ;lcd.c: 41:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3825   0027B2  0E0D               	movlw	13
  3826   0027B4                     i2u307_47:
  3827   0027B4  2EE8               	decfsz	wreg,f,c
  3828   0027B6  D7FE               	bra	i2u307_47
  3829   0027B8  F000               	nop	
  3830   0027BA                     
  3831                           ;lcd.c: 42:  PORTEbits.RE1=1;
  3832   0027BA  8284               	bsf	132,1,c	;volatile
  3833   0027BC  0012               	return		;funcret
  3834   0027BE                     __end_ofi2_lcd_cmd:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function _sprintf *****************
  3838 ;; Defined at:
  3839 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  s               2   88[COMRAM] PTR unsigned char 
  3842 ;;		 -> buffer(10), 
  3843 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  3844 ;;		 -> STR_3(5), STR_2(5), 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  f              11   96[COMRAM] struct _IO_FILE
  3847 ;;  ap              2   94[COMRAM] PTR void [1]
  3848 ;;		 -> ?_sprintf(2), 
  3849 ;;  ret             2    0        int 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  2   88[COMRAM] int 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3859 ;;      Params:         6       0       0       0       0       0       0
  3860 ;;      Locals:        13       0       0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0       0       0
  3862 ;;      Totals:        19       0       0       0       0       0       0
  3863 ;;Total ram usage:       19 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 7
  3866 ;; This function calls:
  3867 ;;		_vfprintf
  3868 ;; This function is called by:
  3869 ;;		_f_int2
  3870 ;;		_Read_AD
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text25
  3875   002546                     __ptext25:
  3876                           	callstack 0
  3877   002546                     _sprintf:
  3878                           	callstack 15
  3879   002546  0E5D               	movlw	low (?_sprintf+4)
  3880   002548  6E5F               	movwf	sprintf@ap^0,c
  3881   00254A  0E00               	movlw	high (?_sprintf+4)
  3882   00254C  6E60               	movwf	(sprintf@ap+1)^0,c
  3883   00254E  C059  F061         	movff	sprintf@s,sprintf@f
  3884   002552  C05A  F062         	movff	sprintf@s+1,sprintf@f+1
  3885   002556  0E00               	movlw	0
  3886   002558  6E65               	movwf	(sprintf@f+4)^0,c
  3887   00255A  0E00               	movlw	0
  3888   00255C  6E64               	movwf	(sprintf@f+3)^0,c
  3889   00255E  0E00               	movlw	0
  3890   002560  6E6B               	movwf	(sprintf@f+10)^0,c
  3891   002562  0E00               	movlw	0
  3892   002564  6E6A               	movwf	(sprintf@f+9)^0,c
  3893   002566  0E61               	movlw	low sprintf@f
  3894   002568  6E51               	movwf	vfprintf@fp^0,c
  3895   00256A  0E00               	movlw	high sprintf@f
  3896   00256C  6E52               	movwf	(vfprintf@fp+1)^0,c
  3897   00256E  C05B  F053         	movff	sprintf@fmt,vfprintf@fmt
  3898   002572  C05C  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3899   002576  0E5F               	movlw	low sprintf@ap
  3900   002578  6E55               	movwf	vfprintf@ap^0,c
  3901   00257A  0E00               	movlw	high sprintf@ap
  3902   00257C  6E56               	movwf	(vfprintf@ap+1)^0,c
  3903   00257E  ECCA  F012         	call	_vfprintf	;wreg free
  3904   002582  5064               	movf	(sprintf@f+3)^0,w,c
  3905   002584  2459               	addwf	sprintf@s^0,w,c
  3906   002586  6ED9               	movwf	fsr2l,c
  3907   002588  5065               	movf	(sprintf@f+4)^0,w,c
  3908   00258A  205A               	addwfc	(sprintf@s+1)^0,w,c
  3909   00258C  6EDA               	movwf	fsr2h,c
  3910   00258E  0E00               	movlw	0
  3911   002590  6EDF               	movwf	indf2,c
  3912   002592  0012               	return		;funcret
  3913   002594                     __end_of_sprintf:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _vfprintf *****************
  3917 ;; Defined at:
  3918 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  3921 ;;		 -> sprintf@f(11), 
  3922 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  3923 ;;		 -> STR_3(5), STR_2(5), 
  3924 ;;  ap              2   84[COMRAM] PTR PTR void 
  3925 ;;		 -> sprintf@ap(2), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  3928 ;;		 -> STR_3(5), STR_2(5), 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  2   80[COMRAM] int 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3938 ;;      Params:         6       0       0       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0       0       0
  3940 ;;      Temps:          0       0       0       0       0       0       0
  3941 ;;      Totals:         8       0       0       0       0       0       0
  3942 ;;Total ram usage:        8 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; Hardware stack levels required when called: 6
  3945 ;; This function calls:
  3946 ;;		_vfpfcnvrt
  3947 ;; This function is called by:
  3948 ;;		_sprintf
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text26
  3953   002594                     __ptext26:
  3954                           	callstack 0
  3955   002594                     _vfprintf:
  3956                           	callstack 15
  3957   002594                     
  3958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3959   002594  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  3960   002598  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3963   00259C  EFDE  F012         	goto	i2l2607
  3964   0025A0                     i2l2605:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3967   0025A0  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  3968   0025A4  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3969   0025A8  0E57               	movlw	low vfprintf@cfmt
  3970   0025AA  6E41               	movwf	vfpfcnvrt@fmt^0,c
  3971   0025AC  0E00               	movlw	high vfprintf@cfmt
  3972   0025AE  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3973   0025B0  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  3974   0025B4  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3975   0025B8  EC0C  F00A         	call	_vfpfcnvrt	;wreg free
  3976   0025BC                     i2l2607:
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3979   0025BC  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  3980   0025C0  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3981   0025C4                     	if	0	;tblptru may be non-zero
  3982   0025C4                     	endif
  3983   0025C4                     	if	0	;tblptru may be non-zero
  3984   0025C4                     	endif
  3985   0025C4  0008               	tblrd		*
  3986   0025C6  50F5               	movf	tablat,w,c
  3987   0025C8  0900               	iorlw	0
  3988   0025CA  A4D8               	btfss	status,2,c
  3989   0025CC  EFEA  F012         	goto	i2u186_41
  3990   0025D0  EFEC  F012         	goto	i2u186_40
  3991   0025D4                     i2u186_41:
  3992   0025D4  EFD0  F012         	goto	i2l2605
  3993   0025D8                     i2u186_40:
  3994   0025D8                     
  3995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3996   0025D8  0E00               	movlw	0
  3997   0025DA  6E52               	movwf	(?_vfprintf+1)^0,c
  3998   0025DC  0E00               	movlw	0
  3999   0025DE  6E51               	movwf	?_vfprintf^0,c
  4000   0025E0  0012               	return		;funcret
  4001   0025E2                     __end_of_vfprintf:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _vfpfcnvrt *****************
  4005 ;; Defined at:
  4006 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  4009 ;;		 -> sprintf@f(11), 
  4010 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  4011 ;;		 -> vfprintf@cfmt(2), 
  4012 ;;  ap              2   66[COMRAM] PTR PTR void 
  4013 ;;		 -> sprintf@ap(2), 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  convarg         8   70[COMRAM] struct .
  4016 ;;  cp              2   78[COMRAM] PTR unsigned char 
  4017 ;;		 -> STR_3(5), STR_2(5), 
  4018 ;;  i               2    0        int 
  4019 ;;  done            2    0        int 
  4020 ;;  c               1    0        unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4030 ;;      Params:         6       0       0       0       0       0       0
  4031 ;;      Locals:        10       0       0       0       0       0       0
  4032 ;;      Temps:          2       0       0       0       0       0       0
  4033 ;;      Totals:        18       0       0       0       0       0       0
  4034 ;;Total ram usage:       18 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 5
  4037 ;; This function calls:
  4038 ;;		_dtoa
  4039 ;;		_fputc
  4040 ;; This function is called by:
  4041 ;;		_vfprintf
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text27
  4046   001418                     __ptext27:
  4047                           	callstack 0
  4048   001418                     _vfpfcnvrt:
  4049                           	callstack 15
  4050   001418                     
  4051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4052   001418  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4053   00141C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4054   001420  CFDE FFF6          	movff	postinc2,tblptrl
  4055   001424  CFDD FFF7          	movff	postdec2,tblptrh
  4056   001428                     	if	0	;tblptru may be non-zero
  4057   001428                     	endif
  4058   001428                     	if	0	;tblptru may be non-zero
  4059   001428                     	endif
  4060   001428  0008               	tblrd		*
  4061   00142A  50F5               	movf	tablat,w,c
  4062   00142C  0A25               	xorlw	37
  4063   00142E  A4D8               	btfss	status,2,c
  4064   001430  EF1C  F00A         	goto	i2u182_41
  4065   001434  EF1E  F00A         	goto	i2u182_40
  4066   001438                     i2u182_41:
  4067   001438  EFC3  F00A         	goto	i2l2581
  4068   00143C                     i2u182_40:
  4069   00143C                     
  4070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4071   00143C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4072   001440  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4073   001444  2ADE               	incf	postinc2,f,c
  4074   001446  0E00               	movlw	0
  4075   001448  22DD               	addwfc	postdec2,f,c
  4076   00144A                     
  4077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4078   00144A  0E00               	movlw	0
  4079   00144C  0100               	movlb	0	; () banked
  4080   00144E  6FCE               	movwf	(_width+1)& (0+255),b
  4081   001450  0E00               	movlw	0
  4082   001452  6FCD               	movwf	_width& (0+255),b
  4083   001454  C0CD  F0D5         	movff	_width,_flags
  4084   001458                     
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4087   001458  69CF               	setf	_prec& (0+255),b
  4088   00145A  69D0               	setf	(_prec+1)& (0+255),b
  4089   00145C                     
  4090                           ; BSR set to: 0
  4091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  4092   00145C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4093   001460  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4094   001464  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  4095   001468  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  4096   00146C                     
  4097                           ; BSR set to: 0
  4098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4099   00146C  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4100   001470  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4101   001474                     	if	0	;tblptru may be non-zero
  4102   001474                     	endif
  4103   001474                     	if	0	;tblptru may be non-zero
  4104   001474                     	endif
  4105   001474  0008               	tblrd		*
  4106   001476  50F5               	movf	tablat,w,c
  4107   001478  0A64               	xorlw	100
  4108   00147A  B4D8               	btfsc	status,2,c
  4109   00147C  EF42  F00A         	goto	i2u183_41
  4110   001480  EF44  F00A         	goto	i2u183_40
  4111   001484                     i2u183_41:
  4112   001484  EF52  F00A         	goto	i2l2563
  4113   001488                     i2u183_40:
  4114   001488                     
  4115                           ; BSR set to: 0
  4116   001488  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4117   00148C  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4118   001490                     	if	0	;tblptru may be non-zero
  4119   001490                     	endif
  4120   001490                     	if	0	;tblptru may be non-zero
  4121   001490                     	endif
  4122   001490  0008               	tblrd		*
  4123   001492  50F5               	movf	tablat,w,c
  4124   001494  0A69               	xorlw	105
  4125   001496  A4D8               	btfss	status,2,c
  4126   001498  EF50  F00A         	goto	i2u184_41
  4127   00149C  EF52  F00A         	goto	i2u184_40
  4128   0014A0                     i2u184_41:
  4129   0014A0  EF95  F00A         	goto	i2l2569
  4130   0014A4                     i2u184_40:
  4131   0014A4                     i2l2563:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4135   0014A4  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4136   0014A8  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4137   0014AC  CFDF F045          	movff	indf2,??_vfpfcnvrt
  4138   0014B0  0E02               	movlw	2
  4139   0014B2  26DE               	addwf	postinc2,f,c
  4140   0014B4  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  4141   0014B8  0E00               	movlw	0
  4142   0014BA  22DD               	addwfc	postdec2,f,c
  4143   0014BC  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4144   0014C0  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4145   0014C4  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  4146   0014C8  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  4147   0014CC  0E00               	movlw	0
  4148   0014CE  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  4149   0014D0  0EFF               	movlw	-1
  4150   0014D2  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  4151   0014D4  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  4152   0014D6  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  4153   0014D8  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  4154   0014DA  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  4155   0014DC  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  4158   0014DE  0E01               	movlw	1
  4159   0014E0  244F               	addwf	vfpfcnvrt@cp^0,w,c
  4160   0014E2  6E45               	movwf	??_vfpfcnvrt^0,c
  4161   0014E4  0E00               	movlw	0
  4162   0014E6  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4163   0014E8  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  4164   0014EA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4165   0014EE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4166   0014F2  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  4167   0014F6  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4168   0014FA                     
  4169                           ; BSR set to: 0
  4170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  4171   0014FA  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4172   0014FE  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4173   001502  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  4174   001506  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  4175   00150A  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  4176   00150E  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  4177   001512  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  4178   001516  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  4179   00151A  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  4180   00151E  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  4181   001522  ECE7  F006         	call	_dtoa	;wreg free
  4182   001526  EFD7  F00A         	goto	i2l1182
  4183   00152A                     i2l2569:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1501:         if 
      +                          ((*fmt)[0] == '%') {
  4187   00152A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4188   00152E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4189   001532  CFDE FFF6          	movff	postinc2,tblptrl
  4190   001536  CFDD FFF7          	movff	postdec2,tblptrh
  4191   00153A                     	if	0	;tblptru may be non-zero
  4192   00153A                     	endif
  4193   00153A                     	if	0	;tblptru may be non-zero
  4194   00153A                     	endif
  4195   00153A  0008               	tblrd		*
  4196   00153C  50F5               	movf	tablat,w,c
  4197   00153E  0A25               	xorlw	37
  4198   001540  A4D8               	btfss	status,2,c
  4199   001542  EFA5  F00A         	goto	i2u185_41
  4200   001546  EFA7  F00A         	goto	i2u185_40
  4201   00154A                     i2u185_41:
  4202   00154A  EFBA  F00A         	goto	i2l2577
  4203   00154E                     i2u185_40:
  4204   00154E                     
  4205                           ; BSR set to: 0
  4206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1502:            
      +                           ++*fmt;
  4207   00154E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4208   001552  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4209   001556  2ADE               	incf	postinc2,f,c
  4210   001558  0E00               	movlw	0
  4211   00155A  22DD               	addwfc	postdec2,f,c
  4212   00155C                     
  4213                           ; BSR set to: 0
  4214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1503:            
      +                           fputc((int)'%', fp);
  4215   00155C  0E00               	movlw	0
  4216   00155E  6E02               	movwf	(fputc@c+1)^0,c
  4217   001560  0E25               	movlw	37
  4218   001562  6E01               	movwf	fputc@c^0,c
  4219   001564  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4220   001568  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4221   00156C  EC8E  F00F         	call	_fputc	;wreg free
  4222   001570  EFD7  F00A         	goto	i2l1182
  4223   001574                     i2l2577:
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4226   001574  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4227   001578  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4228   00157C  2ADE               	incf	postinc2,f,c
  4229   00157E  0E00               	movlw	0
  4230   001580  22DD               	addwfc	postdec2,f,c
  4231   001582  EFD7  F00A         	goto	i2l1182
  4232   001586                     i2l2581:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4235   001586  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4236   00158A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4237   00158E  CFDE FFF6          	movff	postinc2,tblptrl
  4238   001592  CFDD FFF7          	movff	postdec2,tblptrh
  4239   001596                     	if	0	;tblptru may be non-zero
  4240   001596                     	endif
  4241   001596                     	if	0	;tblptru may be non-zero
  4242   001596                     	endif
  4243   001596  0008               	tblrd		*
  4244   001598  50F5               	movf	tablat,w,c
  4245   00159A  6E01               	movwf	fputc@c^0,c
  4246   00159C  6A02               	clrf	(fputc@c+1)^0,c
  4247   00159E  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4248   0015A2  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4249   0015A6  EC8E  F00F         	call	_fputc	;wreg free
  4250   0015AA  EFBA  F00A         	goto	i2l2577
  4251   0015AE                     i2l1182:
  4252   0015AE  0012               	return		;funcret
  4253   0015B0                     __end_of_vfpfcnvrt:
  4254                           	callstack 0
  4255                           
  4256 ;; *************** function _dtoa *****************
  4257 ;; Defined at:
  4258 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4261 ;;		 -> sprintf@f(11), 
  4262 ;;  d               8   29[COMRAM] long long 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  n               8   51[COMRAM] long long 
  4265 ;;  i               2   59[COMRAM] int 
  4266 ;;  w               2   49[COMRAM] int 
  4267 ;;  p               2   47[COMRAM] int 
  4268 ;;  s               1   61[COMRAM] unsigned char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4278 ;;      Params:        10       0       0       0       0       0       0
  4279 ;;      Locals:        17       0       0       0       0       0       0
  4280 ;;      Temps:          8       0       0       0       0       0       0
  4281 ;;      Totals:        35       0       0       0       0       0       0
  4282 ;;Total ram usage:       35 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 4
  4285 ;; This function calls:
  4286 ;;		___aodiv
  4287 ;;		___aomod
  4288 ;;		_abs
  4289 ;;		_pad
  4290 ;; This function is called by:
  4291 ;;		_vfpfcnvrt
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           	psect	text28
  4296   000DCE                     __ptext28:
  4297                           	callstack 0
  4298   000DCE                     _dtoa:
  4299                           	callstack 15
  4300   000DCE                     
  4301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4302   000DCE  C01E  F034         	movff	dtoa@d,dtoa@n
  4303   000DD2  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  4304   000DD6  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  4305   000DDA  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  4306   000DDE  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  4307   000DE2  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  4308   000DE6  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  4309   000DEA  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  4310   000DEE                     
  4311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4312   000DEE  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  4313   000DF0  EFFC  F006         	goto	i2u172_41
  4314   000DF4  EFFF  F006         	goto	i2u172_40
  4315   000DF8                     i2u172_41:
  4316   000DF8  0E01               	movlw	1
  4317   000DFA  EF00  F007         	goto	i2u173_40
  4318   000DFE                     i2u172_40:
  4319   000DFE  0E00               	movlw	0
  4320   000E00                     i2u173_40:
  4321   000E00  6E3E               	movwf	dtoa@s^0,c
  4322   000E02                     
  4323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4324   000E02  503E               	movf	dtoa@s^0,w,c
  4325   000E04  B4D8               	btfsc	status,2,c
  4326   000E06  EF07  F007         	goto	i2u174_41
  4327   000E0A  EF09  F007         	goto	i2u174_40
  4328   000E0E                     i2u174_41:
  4329   000E0E  EF19  F007         	goto	i2l2505
  4330   000E12                     i2u174_40:
  4331   000E12                     
  4332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4333   000E12  1E3B               	comf	(dtoa@n+7)^0,f,c
  4334   000E14  1E3A               	comf	(dtoa@n+6)^0,f,c
  4335   000E16  1E39               	comf	(dtoa@n+5)^0,f,c
  4336   000E18  1E38               	comf	(dtoa@n+4)^0,f,c
  4337   000E1A  1E37               	comf	(dtoa@n+3)^0,f,c
  4338   000E1C  1E36               	comf	(dtoa@n+2)^0,f,c
  4339   000E1E  1E35               	comf	(dtoa@n+1)^0,f,c
  4340   000E20  6C34               	negf	dtoa@n^0,c
  4341   000E22  0E00               	movlw	0
  4342   000E24  2235               	addwfc	(dtoa@n+1)^0,f,c
  4343   000E26  2236               	addwfc	(dtoa@n+2)^0,f,c
  4344   000E28  2237               	addwfc	(dtoa@n+3)^0,f,c
  4345   000E2A  2238               	addwfc	(dtoa@n+4)^0,f,c
  4346   000E2C  2239               	addwfc	(dtoa@n+5)^0,f,c
  4347   000E2E  223A               	addwfc	(dtoa@n+6)^0,f,c
  4348   000E30  223B               	addwfc	(dtoa@n+7)^0,f,c
  4349   000E32                     i2l2505:
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4352   000E32  0100               	movlb	0	; () banked
  4353   000E34  BFD0               	btfsc	(_prec+1)& (0+255),7,b
  4354   000E36  EF27  F007         	goto	i2u175_40
  4355   000E3A  51D0               	movf	(_prec+1)& (0+255),w,b
  4356   000E3C  E106               	bnz	i2u175_41
  4357   000E3E  05CF               	decf	_prec& (0+255),w,b
  4358   000E40  B0D8               	btfsc	status,0,c
  4359   000E42  EF25  F007         	goto	i2u175_41
  4360   000E46  EF27  F007         	goto	i2u175_40
  4361   000E4A                     i2u175_41:
  4362   000E4A  EF2D  F007         	goto	i2l1161
  4363   000E4E                     i2u175_40:
  4364   000E4E                     
  4365                           ; BSR set to: 0
  4366   000E4E  0E00               	movlw	0
  4367   000E50  6E31               	movwf	(dtoa@p+1)^0,c
  4368   000E52  0E01               	movlw	1
  4369   000E54  6E30               	movwf	dtoa@p^0,c
  4370   000E56  EF31  F007         	goto	i2l1163
  4371   000E5A                     i2l1161:
  4372                           
  4373                           ; BSR set to: 0
  4374   000E5A  C0CF  F030         	movff	_prec,dtoa@p
  4375   000E5E  C0D0  F031         	movff	_prec+1,dtoa@p+1
  4376   000E62                     i2l1163:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4380   000E62  C0CD  F032         	movff	_width,dtoa@w
  4381   000E66  C0CE  F033         	movff	_width+1,dtoa@w+1
  4382   000E6A                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4385   000E6A  503E               	movf	dtoa@s^0,w,c
  4386   000E6C  B4D8               	btfsc	status,2,c
  4387   000E6E  EF3B  F007         	goto	i2u176_41
  4388   000E72  EF3D  F007         	goto	i2u176_40
  4389   000E76                     i2u176_41:
  4390   000E76  EF54  F007         	goto	i2l1164
  4391   000E7A                     i2u176_40:
  4392   000E7A                     
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4395   000E7A  0632               	decf	dtoa@w^0,f,c
  4396   000E7C  A0D8               	btfss	status,0,c
  4397   000E7E  0633               	decf	(dtoa@w+1)^0,f,c
  4398   000E80                     
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4401   000E80  503E               	movf	dtoa@s^0,w,c
  4402   000E82  A4D8               	btfss	status,2,c
  4403   000E84  EF46  F007         	goto	i2u177_41
  4404   000E88  EF48  F007         	goto	i2u177_40
  4405   000E8C                     i2u177_41:
  4406   000E8C  EF4E  F007         	goto	i2l2517
  4407   000E90                     i2u177_40:
  4408   000E90                     
  4409                           ; BSR set to: 0
  4410   000E90  0E00               	movlw	0
  4411   000E92  6E2F               	movwf	(_dtoa$910+1)^0,c
  4412   000E94  0E2B               	movlw	43
  4413   000E96  6E2E               	movwf	_dtoa$910^0,c
  4414   000E98  EF52  F007         	goto	i2l2519
  4415   000E9C                     i2l2517:
  4416                           
  4417                           ; BSR set to: 0
  4418   000E9C  0E00               	movlw	0
  4419   000E9E  6E2F               	movwf	(_dtoa$910+1)^0,c
  4420   000EA0  0E2D               	movlw	45
  4421   000EA2  6E2E               	movwf	_dtoa$910^0,c
  4422   000EA4                     i2l2519:
  4423                           
  4424                           ; BSR set to: 0
  4425   000EA4  C02E  F03E         	movff	_dtoa$910,dtoa@s
  4426   000EA8                     i2l1164:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4430   000EA8  0E00               	movlw	0
  4431   000EAA  6E3D               	movwf	(dtoa@i+1)^0,c
  4432   000EAC  0E1F               	movlw	31
  4433   000EAE  6E3C               	movwf	dtoa@i^0,c
  4434   000EB0                     
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4437   000EB0  0E00               	movlw	0
  4438   000EB2  0101               	movlb	1	; () banked
  4439   000EB4  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4440                           
  4441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4442   000EB6  EFD9  F007         	goto	i2l2533
  4443   000EBA                     i2l2523:
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4446   000EBA  063C               	decf	dtoa@i^0,f,c
  4447   000EBC  A0D8               	btfss	status,0,c
  4448   000EBE  063D               	decf	(dtoa@i+1)^0,f,c
  4449   000EC0                     
  4450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4451   000EC0  0E00               	movlw	low _dbuf
  4452   000EC2  243C               	addwf	dtoa@i^0,w,c
  4453   000EC4  6ED9               	movwf	fsr2l,c
  4454   000EC6  0E01               	movlw	high _dbuf
  4455   000EC8  203D               	addwfc	(dtoa@i+1)^0,w,c
  4456   000ECA  6EDA               	movwf	fsr2h,c
  4457   000ECC  C034  F001         	movff	dtoa@n,___aomod@dividend
  4458   000ED0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4459   000ED4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4460   000ED8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4461   000EDC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4462   000EE0  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4463   000EE4  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4464   000EE8  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4465   000EEC  0E0A               	movlw	10
  4466   000EEE  6E09               	movwf	___aomod@divisor^0,c
  4467   000EF0  0E00               	movlw	0
  4468   000EF2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4469   000EF4  0E00               	movlw	0
  4470   000EF6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4471   000EF8  0E00               	movlw	0
  4472   000EFA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4473   000EFC  0E00               	movlw	0
  4474   000EFE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4475   000F00  0E00               	movlw	0
  4476   000F02  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4477   000F04  0E00               	movlw	0
  4478   000F06  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4479   000F08  0E00               	movlw	0
  4480   000F0A  6E10               	movwf	(___aomod@divisor+7)^0,c
  4481   000F0C  ECE2  F00D         	call	___aomod	;wreg free
  4482   000F10  C001  F026         	movff	?___aomod,??_dtoa
  4483   000F14  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4484   000F18  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4485   000F1C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4486   000F20  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4487   000F24  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4488   000F28  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4489   000F2C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4490   000F30  C026  F013         	movff	??_dtoa,abs@a
  4491   000F34  C027  F014         	movff	??_dtoa+1,abs@a+1
  4492   000F38  EC34  F013         	call	_abs	;wreg free
  4493   000F3C  5013               	movf	?_abs^0,w,c
  4494   000F3E  0F30               	addlw	48
  4495   000F40  6EDF               	movwf	indf2,c
  4496   000F42                     
  4497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  4498   000F42  0630               	decf	dtoa@p^0,f,c
  4499   000F44  A0D8               	btfss	status,0,c
  4500   000F46  0631               	decf	(dtoa@p+1)^0,f,c
  4501   000F48                     
  4502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  4503   000F48  0632               	decf	dtoa@w^0,f,c
  4504   000F4A  A0D8               	btfss	status,0,c
  4505   000F4C  0633               	decf	(dtoa@w+1)^0,f,c
  4506   000F4E                     
  4507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  4508   000F4E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  4509   000F52  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4510   000F56  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4511   000F5A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4512   000F5E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4513   000F62  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4514   000F66  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4515   000F6A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4516   000F6E  0E0A               	movlw	10
  4517   000F70  6E09               	movwf	___aodiv@divisor^0,c
  4518   000F72  0E00               	movlw	0
  4519   000F74  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4520   000F76  0E00               	movlw	0
  4521   000F78  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4522   000F7A  0E00               	movlw	0
  4523   000F7C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4524   000F7E  0E00               	movlw	0
  4525   000F80  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4526   000F82  0E00               	movlw	0
  4527   000F84  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4528   000F86  0E00               	movlw	0
  4529   000F88  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4530   000F8A  0E00               	movlw	0
  4531   000F8C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4532   000F8E  EC60  F00C         	call	___aodiv	;wreg free
  4533   000F92  C001  F034         	movff	?___aodiv,dtoa@n
  4534   000F96  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  4535   000F9A  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  4536   000F9E  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  4537   000FA2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  4538   000FA6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  4539   000FAA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  4540   000FAE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  4541   000FB2                     i2l2533:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4544   000FB2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  4545   000FB4  EFE4  F007         	goto	i2u178_41
  4546   000FB8  503D               	movf	(dtoa@i+1)^0,w,c
  4547   000FBA  E108               	bnz	i2u178_40
  4548   000FBC  043C               	decf	dtoa@i^0,w,c
  4549   000FBE  A0D8               	btfss	status,0,c
  4550   000FC0  EFE4  F007         	goto	i2u178_41
  4551   000FC4  EFE6  F007         	goto	i2u178_40
  4552   000FC8                     i2u178_41:
  4553   000FC8  EF02  F008         	goto	i2l2539
  4554   000FCC                     i2u178_40:
  4555   000FCC  5034               	movf	dtoa@n^0,w,c
  4556   000FCE  1035               	iorwf	(dtoa@n+1)^0,w,c
  4557   000FD0  1036               	iorwf	(dtoa@n+2)^0,w,c
  4558   000FD2  1037               	iorwf	(dtoa@n+3)^0,w,c
  4559   000FD4  1038               	iorwf	(dtoa@n+4)^0,w,c
  4560   000FD6  1039               	iorwf	(dtoa@n+5)^0,w,c
  4561   000FD8  103A               	iorwf	(dtoa@n+6)^0,w,c
  4562   000FDA  103B               	iorwf	(dtoa@n+7)^0,w,c
  4563   000FDC  A4D8               	btfss	status,2,c
  4564   000FDE  EFF3  F007         	goto	i2u179_41
  4565   000FE2  EFF5  F007         	goto	i2u179_40
  4566   000FE6                     i2u179_41:
  4567   000FE6  EF5D  F007         	goto	i2l2523
  4568   000FEA                     i2u179_40:
  4569   000FEA  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4570   000FEC  EF02  F008         	goto	i2u180_40
  4571   000FF0  5031               	movf	(dtoa@p+1)^0,w,c
  4572   000FF2  E106               	bnz	i2u180_41
  4573   000FF4  0430               	decf	dtoa@p^0,w,c
  4574   000FF6  B0D8               	btfsc	status,0,c
  4575   000FF8  EF00  F008         	goto	i2u180_41
  4576   000FFC  EF02  F008         	goto	i2u180_40
  4577   001000                     i2u180_41:
  4578   001000  EF5D  F007         	goto	i2l2523
  4579   001004                     i2u180_40:
  4580   001004                     i2l2539:
  4581                           
  4582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  4583   001004  503E               	movf	dtoa@s^0,w,c
  4584   001006  B4D8               	btfsc	status,2,c
  4585   001008  EF08  F008         	goto	i2u181_41
  4586   00100C  EF0A  F008         	goto	i2u181_40
  4587   001010                     i2u181_41:
  4588   001010  EF15  F008         	goto	i2l2545
  4589   001014                     i2u181_40:
  4590   001014                     
  4591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  4592   001014  063C               	decf	dtoa@i^0,f,c
  4593   001016  A0D8               	btfss	status,0,c
  4594   001018  063D               	decf	(dtoa@i+1)^0,f,c
  4595   00101A                     
  4596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  4597   00101A  0E00               	movlw	low _dbuf
  4598   00101C  243C               	addwf	dtoa@i^0,w,c
  4599   00101E  6ED9               	movwf	fsr2l,c
  4600   001020  0E01               	movlw	high _dbuf
  4601   001022  203D               	addwfc	(dtoa@i+1)^0,w,c
  4602   001024  6EDA               	movwf	fsr2h,c
  4603   001026  C03E  FFDF         	movff	dtoa@s,indf2
  4604   00102A                     i2l2545:
  4605                           
  4606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4607   00102A  C01C  F011         	movff	dtoa@fp,pad@fp
  4608   00102E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4609   001032  0E00               	movlw	low _dbuf
  4610   001034  243C               	addwf	dtoa@i^0,w,c
  4611   001036  6E13               	movwf	pad@buf^0,c
  4612   001038  0E01               	movlw	high _dbuf
  4613   00103A  203D               	addwfc	(dtoa@i+1)^0,w,c
  4614   00103C  6E14               	movwf	(pad@buf+1)^0,c
  4615   00103E  C032  F015         	movff	dtoa@w,pad@p
  4616   001042  C033  F016         	movff	dtoa@w+1,pad@p+1
  4617   001046  ECFB  F010         	call	_pad	;wreg free
  4618   00104A  0012               	return		;funcret
  4619   00104C                     __end_of_dtoa:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _pad *****************
  4623 ;; Defined at:
  4624 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4627 ;;		 -> sprintf@f(11), 
  4628 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4629 ;;		 -> dbuf(32), 
  4630 ;;  p               2   20[COMRAM] int 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  w               2   25[COMRAM] int 
  4633 ;;  i               2   23[COMRAM] int 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4643 ;;      Params:         6       0       0       0       0       0       0
  4644 ;;      Locals:         4       0       0       0       0       0       0
  4645 ;;      Temps:          1       0       0       0       0       0       0
  4646 ;;      Totals:        11       0       0       0       0       0       0
  4647 ;;Total ram usage:       11 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 3
  4650 ;; This function calls:
  4651 ;;		_fputc
  4652 ;;		_fputs
  4653 ;; This function is called by:
  4654 ;;		_dtoa
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text29
  4659   0021F6                     __ptext29:
  4660                           	callstack 0
  4661   0021F6                     _pad:
  4662                           	callstack 15
  4663   0021F6                     
  4664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  4665   0021F6  BE16               	btfsc	(pad@p+1)^0,7,c
  4666   0021F8  EF00  F011         	goto	i2u169_41
  4667   0021FC  EF02  F011         	goto	i2u169_40
  4668   002200                     i2u169_41:
  4669   002200  EF08  F011         	goto	i2l2483
  4670   002204                     i2u169_40:
  4671   002204  C015  F01A         	movff	pad@p,pad@w
  4672   002208  C016  F01B         	movff	pad@p+1,pad@w+1
  4673   00220C  EF0C  F011         	goto	i2l1152
  4674   002210                     i2l2483:
  4675   002210  0E00               	movlw	0
  4676   002212  6E1B               	movwf	(pad@w+1)^0,c
  4677   002214  0E00               	movlw	0
  4678   002216  6E1A               	movwf	pad@w^0,c
  4679   002218                     i2l1152:
  4680                           
  4681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  4682   002218  0E00               	movlw	0
  4683   00221A  6E19               	movwf	(pad@i+1)^0,c
  4684   00221C  0E00               	movlw	0
  4685   00221E  6E18               	movwf	pad@i^0,c
  4686                           
  4687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4688   002220  EF1E  F011         	goto	i2l2489
  4689   002224                     i2l2485:
  4690                           
  4691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  4692   002224  0E00               	movlw	0
  4693   002226  6E02               	movwf	(fputc@c+1)^0,c
  4694   002228  0E20               	movlw	32
  4695   00222A  6E01               	movwf	fputc@c^0,c
  4696   00222C  C011  F003         	movff	pad@fp,fputc@fp
  4697   002230  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4698   002234  EC8E  F00F         	call	_fputc	;wreg free
  4699   002238                     
  4700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  4701   002238  4A18               	infsnz	pad@i^0,f,c
  4702   00223A  2A19               	incf	(pad@i+1)^0,f,c
  4703   00223C                     i2l2489:
  4704                           
  4705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4706   00223C  501A               	movf	pad@w^0,w,c
  4707   00223E  5C18               	subwf	pad@i^0,w,c
  4708   002240  5019               	movf	(pad@i+1)^0,w,c
  4709   002242  0A80               	xorlw	128
  4710   002244  6E17               	movwf	??_pad^0,c
  4711   002246  501B               	movf	(pad@w+1)^0,w,c
  4712   002248  0A80               	xorlw	128
  4713   00224A  5817               	subwfb	??_pad^0,w,c
  4714   00224C  A0D8               	btfss	status,0,c
  4715   00224E  EF2B  F011         	goto	i2u170_41
  4716   002252  EF2D  F011         	goto	i2u170_40
  4717   002256                     i2u170_41:
  4718   002256  EF12  F011         	goto	i2l2485
  4719   00225A                     i2u170_40:
  4720   00225A                     
  4721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  4722   00225A  C013  F00A         	movff	pad@buf,fputs@s
  4723   00225E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4724   002262  C011  F00C         	movff	pad@fp,fputs@fp
  4725   002266  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4726   00226A  ECF1  F012         	call	_fputs	;wreg free
  4727   00226E  0012               	return		;funcret
  4728   002270                     __end_of_pad:
  4729                           	callstack 0
  4730                           
  4731 ;; *************** function _fputs *****************
  4732 ;; Defined at:
  4733 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4736 ;;		 -> dbuf(32), 
  4737 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4738 ;;		 -> sprintf@f(11), 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  i               2   14[COMRAM] int 
  4741 ;;  c               1   13[COMRAM] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  2    9[COMRAM] int 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4751 ;;      Params:         4       0       0       0       0       0       0
  4752 ;;      Locals:         3       0       0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0
  4754 ;;      Totals:         7       0       0       0       0       0       0
  4755 ;;Total ram usage:        7 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 2
  4758 ;; This function calls:
  4759 ;;		_fputc
  4760 ;; This function is called by:
  4761 ;;		_pad
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text30
  4766   0025E2                     __ptext30:
  4767                           	callstack 0
  4768   0025E2                     _fputs:
  4769                           	callstack 15
  4770   0025E2  0E00               	movlw	0
  4771   0025E4  6E10               	movwf	(fputs@i+1)^0,c
  4772   0025E6  0E00               	movlw	0
  4773   0025E8  6E0F               	movwf	fputs@i^0,c
  4774   0025EA  EF02  F013         	goto	i2l2397
  4775   0025EE                     i2l2393:
  4776   0025EE  C00E  F001         	movff	fputs@c,fputc@c
  4777   0025F2  6A02               	clrf	(fputc@c+1)^0,c
  4778   0025F4  C00C  F003         	movff	fputs@fp,fputc@fp
  4779   0025F8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4780   0025FC  EC8E  F00F         	call	_fputc	;wreg free
  4781   002600  4A0F               	infsnz	fputs@i^0,f,c
  4782   002602  2A10               	incf	(fputs@i+1)^0,f,c
  4783   002604                     i2l2397:
  4784   002604  500F               	movf	fputs@i^0,w,c
  4785   002606  240A               	addwf	fputs@s^0,w,c
  4786   002608  6ED9               	movwf	fsr2l,c
  4787   00260A  5010               	movf	(fputs@i+1)^0,w,c
  4788   00260C  200B               	addwfc	(fputs@s+1)^0,w,c
  4789   00260E  6EDA               	movwf	fsr2h,c
  4790   002610  50DF               	movf	indf2,w,c
  4791   002612  6E0E               	movwf	fputs@c^0,c
  4792   002614  500E               	movf	fputs@c^0,w,c
  4793   002616  A4D8               	btfss	status,2,c
  4794   002618  EF10  F013         	goto	i2u155_41
  4795   00261C  EF12  F013         	goto	i2u155_40
  4796   002620                     i2u155_41:
  4797   002620  EFF7  F012         	goto	i2l2393
  4798   002624                     i2u155_40:
  4799   002624  0012               	return		;funcret
  4800   002626                     __end_of_fputs:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _fputc *****************
  4804 ;; Defined at:
  4805 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  c               2    0[COMRAM] int 
  4808 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4809 ;;		 -> sprintf@f(11), 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  2    0[COMRAM] int 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4821 ;;      Params:         4       0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0
  4823 ;;      Temps:          5       0       0       0       0       0       0
  4824 ;;      Totals:         9       0       0       0       0       0       0
  4825 ;;Total ram usage:        9 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 1
  4828 ;; This function calls:
  4829 ;;		_putch
  4830 ;; This function is called by:
  4831 ;;		_pad
  4832 ;;		_vfpfcnvrt
  4833 ;;		_fputs
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text31
  4838   001F1C                     __ptext31:
  4839                           	callstack 0
  4840   001F1C                     _fputc:
  4841                           	callstack 18
  4842   001F1C  5003               	movf	fputc@fp^0,w,c
  4843   001F1E  1004               	iorwf	(fputc@fp+1)^0,w,c
  4844   001F20  B4D8               	btfsc	status,2,c
  4845   001F22  EF95  F00F         	goto	i2u151_41
  4846   001F26  EF97  F00F         	goto	i2u151_40
  4847   001F2A                     i2u151_41:
  4848   001F2A  EFA0  F00F         	goto	i2l2381
  4849   001F2E                     i2u151_40:
  4850   001F2E  5003               	movf	fputc@fp^0,w,c
  4851   001F30  1004               	iorwf	(fputc@fp+1)^0,w,c
  4852   001F32  A4D8               	btfss	status,2,c
  4853   001F34  EF9E  F00F         	goto	i2u152_41
  4854   001F38  EFA0  F00F         	goto	i2u152_40
  4855   001F3C                     i2u152_41:
  4856   001F3C  EFA5  F00F         	goto	i2l2383
  4857   001F40                     i2u152_40:
  4858   001F40                     i2l2381:
  4859   001F40  5001               	movf	fputc@c^0,w,c
  4860   001F42  EC2E  F014         	call	_putch
  4861   001F46  EFF2  F00F         	goto	i2l1208
  4862   001F4A                     i2l2383:
  4863   001F4A  EE20 F009          	lfsr	2,9
  4864   001F4E  5003               	movf	fputc@fp^0,w,c
  4865   001F50  26D9               	addwf	fsr2l,f,c
  4866   001F52  5004               	movf	(fputc@fp+1)^0,w,c
  4867   001F54  22DA               	addwfc	fsr2h,f,c
  4868   001F56  50DE               	movf	postinc2,w,c
  4869   001F58  10DE               	iorwf	postinc2,w,c
  4870   001F5A  B4D8               	btfsc	status,2,c
  4871   001F5C  EFB2  F00F         	goto	i2u153_41
  4872   001F60  EFB4  F00F         	goto	i2u153_40
  4873   001F64                     i2u153_41:
  4874   001F64  EFCF  F00F         	goto	i2l2387
  4875   001F68                     i2u153_40:
  4876   001F68  EE20 F009          	lfsr	2,9
  4877   001F6C  5003               	movf	fputc@fp^0,w,c
  4878   001F6E  26D9               	addwf	fsr2l,f,c
  4879   001F70  5004               	movf	(fputc@fp+1)^0,w,c
  4880   001F72  22DA               	addwfc	fsr2h,f,c
  4881   001F74  EE10 F003          	lfsr	1,3
  4882   001F78  5003               	movf	fputc@fp^0,w,c
  4883   001F7A  26E1               	addwf	fsr1l,f,c
  4884   001F7C  5004               	movf	(fputc@fp+1)^0,w,c
  4885   001F7E  22E2               	addwfc	fsr1h,f,c
  4886   001F80  50DE               	movf	postinc2,w,c
  4887   001F82  5CE6               	subwf	postinc1,w,c
  4888   001F84  50E6               	movf	postinc1,w,c
  4889   001F86  0A80               	xorlw	128
  4890   001F88  6E09               	movwf	(??_fputc+4)^0,c
  4891   001F8A  50DE               	movf	postinc2,w,c
  4892   001F8C  0A80               	xorlw	128
  4893   001F8E  5809               	subwfb	(??_fputc+4)^0,w,c
  4894   001F90  B0D8               	btfsc	status,0,c
  4895   001F92  EFCD  F00F         	goto	i2u154_41
  4896   001F96  EFCF  F00F         	goto	i2u154_40
  4897   001F9A                     i2u154_41:
  4898   001F9A  EFF2  F00F         	goto	i2l1208
  4899   001F9E                     i2u154_40:
  4900   001F9E                     i2l2387:
  4901   001F9E  EE20 F003          	lfsr	2,3
  4902   001FA2  5003               	movf	fputc@fp^0,w,c
  4903   001FA4  26D9               	addwf	fsr2l,f,c
  4904   001FA6  5004               	movf	(fputc@fp+1)^0,w,c
  4905   001FA8  22DA               	addwfc	fsr2h,f,c
  4906   001FAA  CFDE F005          	movff	postinc2,??_fputc
  4907   001FAE  CFDD F006          	movff	postdec2,??_fputc+1
  4908   001FB2  C003  FFD9         	movff	fputc@fp,fsr2l
  4909   001FB6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4910   001FBA  CFDE F007          	movff	postinc2,??_fputc+2
  4911   001FBE  CFDD F008          	movff	postdec2,??_fputc+3
  4912   001FC2  5005               	movf	??_fputc^0,w,c
  4913   001FC4  2407               	addwf	(??_fputc+2)^0,w,c
  4914   001FC6  6ED9               	movwf	fsr2l,c
  4915   001FC8  5006               	movf	(??_fputc+1)^0,w,c
  4916   001FCA  2008               	addwfc	(??_fputc+3)^0,w,c
  4917   001FCC  6EDA               	movwf	fsr2h,c
  4918   001FCE  C001  FFDF         	movff	fputc@c,indf2
  4919   001FD2  EE20 F003          	lfsr	2,3
  4920   001FD6  5003               	movf	fputc@fp^0,w,c
  4921   001FD8  26D9               	addwf	fsr2l,f,c
  4922   001FDA  5004               	movf	(fputc@fp+1)^0,w,c
  4923   001FDC  22DA               	addwfc	fsr2h,f,c
  4924   001FDE  2ADE               	incf	postinc2,f,c
  4925   001FE0  0E00               	movlw	0
  4926   001FE2  22DD               	addwfc	postdec2,f,c
  4927   001FE4                     i2l1208:
  4928   001FE4  0012               	return		;funcret
  4929   001FE6                     __end_of_fputc:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _putch *****************
  4933 ;; Defined at:
  4934 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  c               1    wreg     unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  c               1    0[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         0       0       0       0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0
  4951 ;;      Totals:         0       0       0       0       0       0       0
  4952 ;;Total ram usage:        0 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_fputc
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text32
  4962   00285C                     __ptext32:
  4963                           	callstack 0
  4964   00285C                     _putch:
  4965                           	callstack 18
  4966   00285C  0012               	return		;funcret
  4967   00285E                     __end_of_putch:
  4968                           	callstack 0
  4969                           
  4970 ;; *************** function _abs *****************
  4971 ;; Defined at:
  4972 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  a               2   18[COMRAM] int 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  2   18[COMRAM] int 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4986 ;;      Params:         2       0       0       0       0       0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0
  4988 ;;      Temps:          2       0       0       0       0       0       0
  4989 ;;      Totals:         4       0       0       0       0       0       0
  4990 ;;Total ram usage:        4 bytes
  4991 ;; Hardware stack levels used: 1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_dtoa
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text33
  5000   002668                     __ptext33:
  5001                           	callstack 0
  5002   002668                     _abs:
  5003                           	callstack 18
  5004   002668  BE14               	btfsc	(abs@a+1)^0,7,c
  5005   00266A  EF41  F013         	goto	i2u171_40
  5006   00266E  5014               	movf	(abs@a+1)^0,w,c
  5007   002670  E106               	bnz	i2u171_41
  5008   002672  0413               	decf	abs@a^0,w,c
  5009   002674  B0D8               	btfsc	status,0,c
  5010   002676  EF3F  F013         	goto	i2u171_41
  5011   00267A  EF41  F013         	goto	i2u171_40
  5012   00267E                     i2u171_41:
  5013   00267E  EF4F  F013         	goto	i2l1193
  5014   002682                     i2u171_40:
  5015   002682  C013  F015         	movff	abs@a,??_abs
  5016   002686  C014  F016         	movff	abs@a+1,??_abs+1
  5017   00268A  1E15               	comf	??_abs^0,f,c
  5018   00268C  1E16               	comf	(??_abs+1)^0,f,c
  5019   00268E  4A15               	infsnz	??_abs^0,f,c
  5020   002690  2A16               	incf	(??_abs+1)^0,f,c
  5021   002692  C015  F013         	movff	??_abs,?_abs
  5022   002696  C016  F014         	movff	??_abs+1,?_abs+1
  5023   00269A  EF53  F013         	goto	i2l1196
  5024   00269E                     i2l1193:
  5025   00269E  C013  F013         	movff	abs@a,?_abs
  5026   0026A2  C014  F014         	movff	abs@a+1,?_abs+1
  5027   0026A6                     i2l1196:
  5028   0026A6  0012               	return		;funcret
  5029   0026A8                     __end_of_abs:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function ___aomod *****************
  5033 ;; Defined at:
  5034 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  dividend        8    0[COMRAM] long long 
  5037 ;;  divisor         8    8[COMRAM] long long 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  sign            1   17[COMRAM] unsigned char 
  5040 ;;  counter         1   16[COMRAM] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  8    0[COMRAM] long long 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5050 ;;      Params:        16       0       0       0       0       0       0
  5051 ;;      Locals:         2       0       0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0
  5053 ;;      Totals:        18       0       0       0       0       0       0
  5054 ;;Total ram usage:       18 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_dtoa
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text34
  5064   001BC4                     __ptext34:
  5065                           	callstack 0
  5066   001BC4                     ___aomod:
  5067                           	callstack 18
  5068   001BC4  0E00               	movlw	0
  5069   001BC6  6E12               	movwf	___aomod@sign^0,c
  5070   001BC8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5071   001BCA  EFEB  F00D         	goto	i2u163_40
  5072   001BCE  EFE9  F00D         	goto	i2u163_41
  5073   001BD2                     i2u163_41:
  5074   001BD2  EFFD  F00D         	goto	i2l2451
  5075   001BD6                     i2u163_40:
  5076   001BD6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5077   001BD8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5078   001BDA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5079   001BDC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5080   001BDE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5081   001BE0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5082   001BE2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5083   001BE4  6C01               	negf	___aomod@dividend^0,c
  5084   001BE6  0E00               	movlw	0
  5085   001BE8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5086   001BEA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5087   001BEC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5088   001BEE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5089   001BF0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5090   001BF2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5091   001BF4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5092   001BF6  0E01               	movlw	1
  5093   001BF8  6E12               	movwf	___aomod@sign^0,c
  5094   001BFA                     i2l2451:
  5095   001BFA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5096   001BFC  EF04  F00E         	goto	i2u164_40
  5097   001C00  EF02  F00E         	goto	i2u164_41
  5098   001C04                     i2u164_41:
  5099   001C04  EF14  F00E         	goto	i2l2455
  5100   001C08                     i2u164_40:
  5101   001C08  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5102   001C0A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5103   001C0C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5104   001C0E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5105   001C10  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5106   001C12  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5107   001C14  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5108   001C16  6C09               	negf	___aomod@divisor^0,c
  5109   001C18  0E00               	movlw	0
  5110   001C1A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5111   001C1C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5112   001C1E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5113   001C20  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5114   001C22  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5115   001C24  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5116   001C26  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5117   001C28                     i2l2455:
  5118   001C28  5009               	movf	___aomod@divisor^0,w,c
  5119   001C2A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5120   001C2C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5121   001C2E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5122   001C30  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5123   001C32  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5124   001C34  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5125   001C36  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5126   001C38  B4D8               	btfsc	status,2,c
  5127   001C3A  EF21  F00E         	goto	i2u165_41
  5128   001C3E  EF23  F00E         	goto	i2u165_40
  5129   001C42                     i2u165_41:
  5130   001C42  EF6B  F00E         	goto	i2l2471
  5131   001C46                     i2u165_40:
  5132   001C46  0E01               	movlw	1
  5133   001C48  6E11               	movwf	___aomod@counter^0,c
  5134   001C4A  EF31  F00E         	goto	i2l2461
  5135   001C4E                     i2l2459:
  5136   001C4E  90D8               	bcf	status,0,c
  5137   001C50  3609               	rlcf	___aomod@divisor^0,f,c
  5138   001C52  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5139   001C54  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5140   001C56  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5141   001C58  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5142   001C5A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5143   001C5C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5144   001C5E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5145   001C60  2A11               	incf	___aomod@counter^0,f,c
  5146   001C62                     i2l2461:
  5147   001C62  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5148   001C64  EF36  F00E         	goto	i2u166_41
  5149   001C68  EF38  F00E         	goto	i2u166_40
  5150   001C6C                     i2u166_41:
  5151   001C6C  EF27  F00E         	goto	i2l2459
  5152   001C70                     i2u166_40:
  5153   001C70                     i2l2463:
  5154   001C70  5009               	movf	___aomod@divisor^0,w,c
  5155   001C72  5C01               	subwf	___aomod@dividend^0,w,c
  5156   001C74  500A               	movf	(___aomod@divisor+1)^0,w,c
  5157   001C76  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5158   001C78  500B               	movf	(___aomod@divisor+2)^0,w,c
  5159   001C7A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5160   001C7C  500C               	movf	(___aomod@divisor+3)^0,w,c
  5161   001C7E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5162   001C80  500D               	movf	(___aomod@divisor+4)^0,w,c
  5163   001C82  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5164   001C84  500E               	movf	(___aomod@divisor+5)^0,w,c
  5165   001C86  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5166   001C88  500F               	movf	(___aomod@divisor+6)^0,w,c
  5167   001C8A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5168   001C8C  5010               	movf	(___aomod@divisor+7)^0,w,c
  5169   001C8E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5170   001C90  A0D8               	btfss	status,0,c
  5171   001C92  EF4D  F00E         	goto	i2u167_41
  5172   001C96  EF4F  F00E         	goto	i2u167_40
  5173   001C9A                     i2u167_41:
  5174   001C9A  EF5F  F00E         	goto	i2l2467
  5175   001C9E                     i2u167_40:
  5176   001C9E  5009               	movf	___aomod@divisor^0,w,c
  5177   001CA0  5E01               	subwf	___aomod@dividend^0,f,c
  5178   001CA2  500A               	movf	(___aomod@divisor+1)^0,w,c
  5179   001CA4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5180   001CA6  500B               	movf	(___aomod@divisor+2)^0,w,c
  5181   001CA8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5182   001CAA  500C               	movf	(___aomod@divisor+3)^0,w,c
  5183   001CAC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5184   001CAE  500D               	movf	(___aomod@divisor+4)^0,w,c
  5185   001CB0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5186   001CB2  500E               	movf	(___aomod@divisor+5)^0,w,c
  5187   001CB4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5188   001CB6  500F               	movf	(___aomod@divisor+6)^0,w,c
  5189   001CB8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5190   001CBA  5010               	movf	(___aomod@divisor+7)^0,w,c
  5191   001CBC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5192   001CBE                     i2l2467:
  5193   001CBE  90D8               	bcf	status,0,c
  5194   001CC0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5195   001CC2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5196   001CC4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5197   001CC6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5198   001CC8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5199   001CCA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5200   001CCC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5201   001CCE  3209               	rrcf	___aomod@divisor^0,f,c
  5202   001CD0  2E11               	decfsz	___aomod@counter^0,f,c
  5203   001CD2  EF38  F00E         	goto	i2l2463
  5204   001CD6                     i2l2471:
  5205   001CD6  5012               	movf	___aomod@sign^0,w,c
  5206   001CD8  B4D8               	btfsc	status,2,c
  5207   001CDA  EF71  F00E         	goto	i2u168_41
  5208   001CDE  EF73  F00E         	goto	i2u168_40
  5209   001CE2                     i2u168_41:
  5210   001CE2  EF83  F00E         	goto	i2l2475
  5211   001CE6                     i2u168_40:
  5212   001CE6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5213   001CE8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5214   001CEA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5215   001CEC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5216   001CEE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5217   001CF0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5218   001CF2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5219   001CF4  6C01               	negf	___aomod@dividend^0,c
  5220   001CF6  0E00               	movlw	0
  5221   001CF8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5222   001CFA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5223   001CFC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5224   001CFE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5225   001D00  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5226   001D02  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5227   001D04  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5228   001D06                     i2l2475:
  5229   001D06  C001  F001         	movff	___aomod@dividend,?___aomod
  5230   001D0A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5231   001D0E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5232   001D12  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5233   001D16  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5234   001D1A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5235   001D1E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5236   001D22  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5237   001D26  0012               	return		;funcret
  5238   001D28                     __end_of___aomod:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function ___aodiv *****************
  5242 ;; Defined at:
  5243 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  dividend        8    0[COMRAM] long long 
  5246 ;;  divisor         8    8[COMRAM] long long 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  quotient        8   18[COMRAM] long long 
  5249 ;;  sign            1   17[COMRAM] unsigned char 
  5250 ;;  counter         1   16[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  8    0[COMRAM] long long 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5260 ;;      Params:        16       0       0       0       0       0       0
  5261 ;;      Locals:        10       0       0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0
  5263 ;;      Totals:        26       0       0       0       0       0       0
  5264 ;;Total ram usage:       26 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_dtoa
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text35
  5274   0018C0                     __ptext35:
  5275                           	callstack 0
  5276   0018C0                     ___aodiv:
  5277                           	callstack 18
  5278   0018C0  0E00               	movlw	0
  5279   0018C2  6E12               	movwf	___aodiv@sign^0,c
  5280   0018C4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5281   0018C6  EF69  F00C         	goto	i2u156_40
  5282   0018CA  EF67  F00C         	goto	i2u156_41
  5283   0018CE                     i2u156_41:
  5284   0018CE  EF7B  F00C         	goto	i2l2407
  5285   0018D2                     i2u156_40:
  5286   0018D2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5287   0018D4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5288   0018D6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5289   0018D8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5290   0018DA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5291   0018DC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5292   0018DE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5293   0018E0  6C09               	negf	___aodiv@divisor^0,c
  5294   0018E2  0E00               	movlw	0
  5295   0018E4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5296   0018E6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5297   0018E8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5298   0018EA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5299   0018EC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5300   0018EE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5301   0018F0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5302   0018F2  0E01               	movlw	1
  5303   0018F4  6E12               	movwf	___aodiv@sign^0,c
  5304   0018F6                     i2l2407:
  5305   0018F6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5306   0018F8  EF82  F00C         	goto	i2u157_40
  5307   0018FC  EF80  F00C         	goto	i2u157_41
  5308   001900                     i2u157_41:
  5309   001900  EF94  F00C         	goto	i2l2413
  5310   001904                     i2u157_40:
  5311   001904  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5312   001906  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5313   001908  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5314   00190A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5315   00190C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5316   00190E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5317   001910  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5318   001912  6C01               	negf	___aodiv@dividend^0,c
  5319   001914  0E00               	movlw	0
  5320   001916  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5321   001918  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5322   00191A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5323   00191C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5324   00191E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5325   001920  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5326   001922  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5327   001924  0E01               	movlw	1
  5328   001926  1A12               	xorwf	___aodiv@sign^0,f,c
  5329   001928                     i2l2413:
  5330   001928  EE20  F013         	lfsr	2,___aodiv@quotient
  5331   00192C  0E07               	movlw	7
  5332   00192E                     i2u158_41:
  5333   00192E  6ADE               	clrf	postinc2,c
  5334   001930  06E8               	decf	wreg,f,c
  5335   001932  E2FD               	bc	i2u158_41
  5336   001934  5009               	movf	___aodiv@divisor^0,w,c
  5337   001936  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5338   001938  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5339   00193A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5340   00193C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5341   00193E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5342   001940  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5343   001942  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5344   001944  B4D8               	btfsc	status,2,c
  5345   001946  EFA7  F00C         	goto	i2u159_41
  5346   00194A  EFA9  F00C         	goto	i2u159_40
  5347   00194E                     i2u159_41:
  5348   00194E  EFFB  F00C         	goto	i2l2435
  5349   001952                     i2u159_40:
  5350   001952  0E01               	movlw	1
  5351   001954  6E11               	movwf	___aodiv@counter^0,c
  5352   001956  EFB7  F00C         	goto	i2l2421
  5353   00195A                     i2l2419:
  5354   00195A  90D8               	bcf	status,0,c
  5355   00195C  3609               	rlcf	___aodiv@divisor^0,f,c
  5356   00195E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5357   001960  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5358   001962  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5359   001964  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5360   001966  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5361   001968  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5362   00196A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5363   00196C  2A11               	incf	___aodiv@counter^0,f,c
  5364   00196E                     i2l2421:
  5365   00196E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5366   001970  EFBC  F00C         	goto	i2u160_41
  5367   001974  EFBE  F00C         	goto	i2u160_40
  5368   001978                     i2u160_41:
  5369   001978  EFAD  F00C         	goto	i2l2419
  5370   00197C                     i2u160_40:
  5371   00197C                     i2l2423:
  5372   00197C  90D8               	bcf	status,0,c
  5373   00197E  3613               	rlcf	___aodiv@quotient^0,f,c
  5374   001980  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5375   001982  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5376   001984  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5377   001986  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5378   001988  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5379   00198A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5380   00198C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5381   00198E  5009               	movf	___aodiv@divisor^0,w,c
  5382   001990  5C01               	subwf	___aodiv@dividend^0,w,c
  5383   001992  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5384   001994  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5385   001996  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5386   001998  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5387   00199A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5388   00199C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5389   00199E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5390   0019A0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5391   0019A2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5392   0019A4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5393   0019A6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5394   0019A8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5395   0019AA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5396   0019AC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5397   0019AE  A0D8               	btfss	status,0,c
  5398   0019B0  EFDC  F00C         	goto	i2u161_41
  5399   0019B4  EFDE  F00C         	goto	i2u161_40
  5400   0019B8                     i2u161_41:
  5401   0019B8  EFEF  F00C         	goto	i2l2431
  5402   0019BC                     i2u161_40:
  5403   0019BC  5009               	movf	___aodiv@divisor^0,w,c
  5404   0019BE  5E01               	subwf	___aodiv@dividend^0,f,c
  5405   0019C0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5406   0019C2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5407   0019C4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5408   0019C6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5409   0019C8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5410   0019CA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5411   0019CC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5412   0019CE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5413   0019D0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5414   0019D2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5415   0019D4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5416   0019D6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5417   0019D8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5418   0019DA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5419   0019DC  8013               	bsf	___aodiv@quotient^0,0,c
  5420   0019DE                     i2l2431:
  5421   0019DE  90D8               	bcf	status,0,c
  5422   0019E0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5423   0019E2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5424   0019E4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5425   0019E6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5426   0019E8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5427   0019EA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5428   0019EC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5429   0019EE  3209               	rrcf	___aodiv@divisor^0,f,c
  5430   0019F0  2E11               	decfsz	___aodiv@counter^0,f,c
  5431   0019F2  EFBE  F00C         	goto	i2l2423
  5432   0019F6                     i2l2435:
  5433   0019F6  5012               	movf	___aodiv@sign^0,w,c
  5434   0019F8  B4D8               	btfsc	status,2,c
  5435   0019FA  EF01  F00D         	goto	i2u162_41
  5436   0019FE  EF03  F00D         	goto	i2u162_40
  5437   001A02                     i2u162_41:
  5438   001A02  EF13  F00D         	goto	i2l2439
  5439   001A06                     i2u162_40:
  5440   001A06  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5441   001A08  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5442   001A0A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5443   001A0C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5444   001A0E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5445   001A10  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5446   001A12  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5447   001A14  6C13               	negf	___aodiv@quotient^0,c
  5448   001A16  0E00               	movlw	0
  5449   001A18  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5450   001A1A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5451   001A1C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5452   001A1E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5453   001A20  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5454   001A22  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5455   001A24  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5456   001A26                     i2l2439:
  5457   001A26  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5458   001A2A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5459   001A2E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5460   001A32  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5461   001A36  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5462   001A3A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5463   001A3E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5464   001A42  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5465   001A46  0012               	return		;funcret
  5466   001A48                     __end_of___aodiv:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function _lcd_str *****************
  5470 ;; Defined at:
  5471 ;;		line 76 in file "lcd.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  str             2    2[COMRAM] PTR const unsigned char 
  5474 ;;		 -> buffer(10), STR_1(3), 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  i               1    6[COMRAM] unsigned char 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5486 ;;      Params:         2       0       0       0       0       0       0
  5487 ;;      Locals:         1       0       0       0       0       0       0
  5488 ;;      Temps:          2       0       0       0       0       0       0
  5489 ;;      Totals:         5       0       0       0       0       0       0
  5490 ;;Total ram usage:        5 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 2
  5493 ;; This function calls:
  5494 ;;		_lcd_dat
  5495 ;; This function is called by:
  5496 ;;		_f_int0
  5497 ;;		_f_int2
  5498 ;;		_Read_AD
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text36
  5503   002270                     __ptext36:
  5504                           	callstack 0
  5505   002270                     _lcd_str:
  5506                           	callstack 20
  5507   002270                     
  5508                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  5509   002270  0E00               	movlw	0
  5510   002272  6E07               	movwf	lcd_str@i^0,c
  5511                           
  5512                           ;lcd.c: 80:  while(str[i] != 0 )
  5513   002274  EF55  F011         	goto	i2l2621
  5514   002278                     i2l2617:
  5515                           
  5516                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  5517   002278  5007               	movf	lcd_str@i^0,w,c
  5518   00227A  2403               	addwf	lcd_str@str^0,w,c
  5519   00227C  6E05               	movwf	??_lcd_str^0,c
  5520   00227E  0E00               	movlw	0
  5521   002280  2004               	addwfc	(lcd_str@str+1)^0,w,c
  5522   002282  6E06               	movwf	(??_lcd_str+1)^0,c
  5523   002284  C005  FFF6         	movff	??_lcd_str,tblptrl
  5524   002288  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  5525   00228C  6AF8               	clrf	tblptru,c
  5526   00228E  0E05               	movlw	(high __ramtop+-1)
  5527   002290  64F7               	cpfsgt	tblptrh,c
  5528   002292  D003               	bra	i2u187_47
  5529   002294  0008               	tblrd		*
  5530   002296  50F5               	movf	tablat,w,c
  5531   002298  D005               	bra	i2u187_40
  5532   00229A                     i2u187_47:
  5533   00229A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5534   00229E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5535   0022A2  50E7               	movf	indf1,w,c
  5536   0022A4                     i2u187_40:
  5537   0022A4  ECDF  F013         	call	_lcd_dat
  5538   0022A8                     
  5539                           ;lcd.c: 83:    i++;
  5540   0022A8  2A07               	incf	lcd_str@i^0,f,c
  5541   0022AA                     i2l2621:
  5542                           
  5543                           ;lcd.c: 80:  while(str[i] != 0 )
  5544   0022AA  5007               	movf	lcd_str@i^0,w,c
  5545   0022AC  2403               	addwf	lcd_str@str^0,w,c
  5546   0022AE  6E05               	movwf	??_lcd_str^0,c
  5547   0022B0  0E00               	movlw	0
  5548   0022B2  2004               	addwfc	(lcd_str@str+1)^0,w,c
  5549   0022B4  6E06               	movwf	(??_lcd_str+1)^0,c
  5550   0022B6  C005  FFF6         	movff	??_lcd_str,tblptrl
  5551   0022BA  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  5552   0022BE  6AF8               	clrf	tblptru,c
  5553   0022C0  0E05               	movlw	(high __ramtop+-1)
  5554   0022C2  64F7               	cpfsgt	tblptrh,c
  5555   0022C4  D003               	bra	i2u188_47
  5556   0022C6  0008               	tblrd		*
  5557   0022C8  50F5               	movf	tablat,w,c
  5558   0022CA  D005               	bra	i2u188_40
  5559   0022CC                     i2u188_47:
  5560   0022CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5561   0022D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5562   0022D4  50E7               	movf	indf1,w,c
  5563   0022D6                     i2u188_40:
  5564   0022D6  0900               	iorlw	0
  5565   0022D8  A4D8               	btfss	status,2,c
  5566   0022DA  EF71  F011         	goto	i2u189_41
  5567   0022DE  EF73  F011         	goto	i2u189_40
  5568   0022E2                     i2u189_41:
  5569   0022E2  EF3C  F011         	goto	i2l2617
  5570   0022E6                     i2u189_40:
  5571   0022E6  0012               	return		;funcret
  5572   0022E8                     __end_of_lcd_str:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _lcd_dat *****************
  5576 ;; Defined at:
  5577 ;;		line 45 in file "lcd.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  val             1    wreg     unsigned char 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  val             1    1[COMRAM] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      void 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5591 ;;      Params:         0       0       0       0       0       0       0
  5592 ;;      Locals:         1       0       0       0       0       0       0
  5593 ;;      Temps:          0       0       0       0       0       0       0
  5594 ;;      Totals:         1       0       0       0       0       0       0
  5595 ;;Total ram usage:        1 bytes
  5596 ;; Hardware stack levels used: 1
  5597 ;; Hardware stack levels required when called: 1
  5598 ;; This function calls:
  5599 ;;		i2_lcd_wr
  5600 ;; This function is called by:
  5601 ;;		_lcd_str
  5602 ;;		_show_to_LCD
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text37
  5607   0027BE                     __ptext37:
  5608                           	callstack 0
  5609   0027BE                     _lcd_dat:
  5610                           	callstack 22
  5611                           
  5612                           ;incstack = 0
  5613                           ;lcd_dat@val stored from wreg
  5614   0027BE  6E02               	movwf	lcd_dat@val^0,c
  5615   0027C0                     
  5616                           ;lcd.c: 45: void lcd_dat(unsigned char val);lcd.c: 46: {;lcd.c: 47:  PORTEbits.RE1=1;
  5617   0027C0  8284               	bsf	132,1,c	;volatile
  5618   0027C2                     
  5619                           ;lcd.c: 48:     lcd_wr(val);
  5620   0027C2  5002               	movf	lcd_dat@val^0,w,c
  5621   0027C4  EC25  F014         	call	i2_lcd_wr
  5622   0027C8                     
  5623                           ;lcd.c: 49:     PORTEbits.RE2=1;
  5624   0027C8  8484               	bsf	132,2,c	;volatile
  5625   0027CA                     
  5626                           ;lcd.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5627   0027CA  0E0D               	movlw	13
  5628   0027CC                     i2u308_47:
  5629   0027CC  2EE8               	decfsz	wreg,f,c
  5630   0027CE  D7FE               	bra	i2u308_47
  5631   0027D0  F000               	nop	
  5632   0027D2                     
  5633                           ;lcd.c: 51:     PORTEbits.RE1=0;
  5634   0027D2  9284               	bcf	132,1,c	;volatile
  5635   0027D4                     
  5636                           ;lcd.c: 52:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5637   0027D4  0E0D               	movlw	13
  5638   0027D6                     i2u309_47:
  5639   0027D6  2EE8               	decfsz	wreg,f,c
  5640   0027D8  D7FE               	bra	i2u309_47
  5641   0027DA  F000               	nop	
  5642   0027DC                     
  5643                           ;lcd.c: 53:  PORTEbits.RE1=1;
  5644   0027DC  8284               	bsf	132,1,c	;volatile
  5645   0027DE  0012               	return		;funcret
  5646   0027E0                     __end_of_lcd_dat:
  5647                           	callstack 0
  5648                           
  5649 ;; *************** function i2_lcd_wr *****************
  5650 ;; Defined at:
  5651 ;;		line 29 in file "lcd.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  val             1    wreg     unsigned char 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  val             1    0[COMRAM] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      void 
  5658 ;; Registers used:
  5659 ;;		wreg
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5665 ;;      Params:         0       0       0       0       0       0       0
  5666 ;;      Locals:         1       0       0       0       0       0       0
  5667 ;;      Temps:          0       0       0       0       0       0       0
  5668 ;;      Totals:         1       0       0       0       0       0       0
  5669 ;;Total ram usage:        1 bytes
  5670 ;; Hardware stack levels used: 1
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_lcd_dat
  5675 ;;		i2_lcd_cmd
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text38
  5680   00284A                     __ptext38:
  5681                           	callstack 0
  5682   00284A                     i2_lcd_wr:
  5683                           	callstack 22
  5684                           
  5685                           ;incstack = 0
  5686                           ;i2lcd_wr@val stored from wreg
  5687   00284A  6E01               	movwf	i2lcd_wr@val^0,c
  5688   00284C                     
  5689                           ;lcd.c: 29: void lcd_wr(unsigned char val);lcd.c: 30: {;lcd.c: 31:   PORTD=val;
  5690   00284C  C001  FF83         	movff	i2lcd_wr@val,3971	;volatile
  5691   002850  0012               	return		;funcret
  5692   002852                     __end_ofi2_lcd_wr:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _f_pwm *****************
  5696 ;; Defined at:
  5697 ;;		line 43 in file "main.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  duty            2    0[COMRAM] unsigned short 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5711 ;;      Params:         2       0       0       0       0       0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0
  5713 ;;      Temps:          2       0       0       0       0       0       0
  5714 ;;      Totals:         4       0       0       0       0       0       0
  5715 ;;Total ram usage:        4 bytes
  5716 ;; Hardware stack levels used: 1
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_f_int0
  5721 ;;		_f_int2
  5722 ;;		_Read_AD
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text39
  5727   0026DC                     __ptext39:
  5728                           	callstack 0
  5729   0026DC                     _f_pwm:
  5730                           	callstack 22
  5731   0026DC                     
  5732                           ;main.c: 43: void f_pwm(uint16_t duty);main.c: 44: {;main.c: 45:     CCP1CON &= 0b110011
      +                          11;
  5733   0026DC  0ECF               	movlw	207
  5734   0026DE  16BD               	andwf	189,f,c	;volatile
  5735                           
  5736                           ;main.c: 46:     CCP1CON |= ((duty & 0b11) << 4);
  5737   0026E0  C001  F003         	movff	f_pwm@duty,??_f_pwm	;volatile
  5738   0026E4  0E03               	movlw	3
  5739   0026E6  1603               	andwf	??_f_pwm^0,f,c
  5740   0026E8  3803               	swapf	??_f_pwm^0,w,c
  5741   0026EA  0BF0               	andlw	240
  5742   0026EC  12BD               	iorwf	189,f,c	;volatile
  5743                           
  5744                           ;main.c: 47:     CCPR1L = duty >> 2;
  5745   0026EE  C001  F003         	movff	f_pwm@duty,??_f_pwm
  5746   0026F2  C002  F004         	movff	f_pwm@duty+1,??_f_pwm+1
  5747   0026F6  90D8               	bcf	status,0,c
  5748   0026F8  3204               	rrcf	(??_f_pwm+1)^0,f,c
  5749   0026FA  3203               	rrcf	??_f_pwm^0,f,c
  5750   0026FC  90D8               	bcf	status,0,c
  5751   0026FE  3204               	rrcf	(??_f_pwm+1)^0,f,c
  5752   002700  3203               	rrcf	??_f_pwm^0,f,c
  5753   002702  5003               	movf	??_f_pwm^0,w,c
  5754   002704  6EBE               	movwf	190,c	;volatile
  5755   002706  0012               	return		;funcret
  5756   002708                     __end_of_f_pwm:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function ___xxtofl *****************
  5760 ;; Defined at:
  5761 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  sign            1    wreg     unsigned char 
  5764 ;;  val             4    0[COMRAM] long 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  sign            1    8[COMRAM] unsigned char 
  5767 ;;  arg             4   10[COMRAM] unsigned long 
  5768 ;;  exp             1    9[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  4    0[COMRAM] unsigned char 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5778 ;;      Params:         4       0       0       0       0       0       0
  5779 ;;      Locals:         6       0       0       0       0       0       0
  5780 ;;      Temps:          4       0       0       0       0       0       0
  5781 ;;      Totals:        14       0       0       0       0       0       0
  5782 ;;Total ram usage:       14 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_f_int2
  5788 ;;		_Read_AD
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text40
  5793   001264                     __ptext40:
  5794                           	callstack 0
  5795   001264                     ___xxtofl:
  5796                           	callstack 22
  5797                           
  5798                           ;incstack = 0
  5799                           ;___xxtofl@sign stored from wreg
  5800   001264  6E09               	movwf	___xxtofl@sign^0,c
  5801   001266  5009               	movf	___xxtofl@sign^0,w,c
  5802   001268  B4D8               	btfsc	status,2,c
  5803   00126A  EF39  F009         	goto	i2u239_41
  5804   00126E  EF3B  F009         	goto	i2u239_40
  5805   001272                     i2u239_41:
  5806   001272  EF5D  F009         	goto	i2l1107
  5807   001276                     i2u239_40:
  5808   001276  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5809   001278  EF42  F009         	goto	i2u240_40
  5810   00127C  EF40  F009         	goto	i2u240_41
  5811   001280                     i2u240_41:
  5812   001280  EF5D  F009         	goto	i2l1107
  5813   001284                     i2u240_40:
  5814   001284  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5815   001288  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5816   00128C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5817   001290  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5818   001294  1E05               	comf	??___xxtofl^0,f,c
  5819   001296  1E06               	comf	(??___xxtofl+1)^0,f,c
  5820   001298  1E07               	comf	(??___xxtofl+2)^0,f,c
  5821   00129A  1E08               	comf	(??___xxtofl+3)^0,f,c
  5822   00129C  2A05               	incf	??___xxtofl^0,f,c
  5823   00129E  0E00               	movlw	0
  5824   0012A0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5825   0012A2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5826   0012A4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5827   0012A6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5828   0012AA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5829   0012AE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5830   0012B2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5831   0012B6  EF65  F009         	goto	i2l2961
  5832   0012BA                     i2l1107:
  5833   0012BA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5834   0012BE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5835   0012C2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5836   0012C6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5837   0012CA                     i2l2961:
  5838   0012CA  5001               	movf	___xxtofl@val^0,w,c
  5839   0012CC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5840   0012CE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5841   0012D0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5842   0012D2  A4D8               	btfss	status,2,c
  5843   0012D4  EF6E  F009         	goto	i2u241_41
  5844   0012D8  EF70  F009         	goto	i2u241_40
  5845   0012DC                     i2u241_41:
  5846   0012DC  EF7A  F009         	goto	i2l2967
  5847   0012E0                     i2u241_40:
  5848   0012E0  0E00               	movlw	0
  5849   0012E2  6E01               	movwf	?___xxtofl^0,c
  5850   0012E4  0E00               	movlw	0
  5851   0012E6  6E02               	movwf	(?___xxtofl+1)^0,c
  5852   0012E8  0E00               	movlw	0
  5853   0012EA  6E03               	movwf	(?___xxtofl+2)^0,c
  5854   0012EC  0E00               	movlw	0
  5855   0012EE  6E04               	movwf	(?___xxtofl+3)^0,c
  5856   0012F0  EF0B  F00A         	goto	i2l1110
  5857   0012F4                     i2l2967:
  5858   0012F4  0E96               	movlw	150
  5859   0012F6  6E0A               	movwf	___xxtofl@exp^0,c
  5860   0012F8  EF84  F009         	goto	i2l2971
  5861   0012FC                     i2l2969:
  5862   0012FC  2A0A               	incf	___xxtofl@exp^0,f,c
  5863   0012FE  90D8               	bcf	status,0,c
  5864   001300  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5865   001302  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5866   001304  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5867   001306  320B               	rrcf	___xxtofl@arg^0,f,c
  5868   001308                     i2l2971:
  5869   001308  0E00               	movlw	0
  5870   00130A  140B               	andwf	___xxtofl@arg^0,w,c
  5871   00130C  6E05               	movwf	??___xxtofl^0,c
  5872   00130E  0E00               	movlw	0
  5873   001310  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5874   001312  6E06               	movwf	(??___xxtofl+1)^0,c
  5875   001314  0E00               	movlw	0
  5876   001316  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5877   001318  6E07               	movwf	(??___xxtofl+2)^0,c
  5878   00131A  0EFE               	movlw	254
  5879   00131C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5880   00131E  6E08               	movwf	(??___xxtofl+3)^0,c
  5881   001320  5005               	movf	??___xxtofl^0,w,c
  5882   001322  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5883   001324  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5884   001326  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5885   001328  A4D8               	btfss	status,2,c
  5886   00132A  EF99  F009         	goto	i2u242_41
  5887   00132E  EF9B  F009         	goto	i2u242_40
  5888   001332                     i2u242_41:
  5889   001332  EF7E  F009         	goto	i2l2969
  5890   001336                     i2u242_40:
  5891   001336  EFA9  F009         	goto	i2l1114
  5892   00133A                     i2l2973:
  5893   00133A  2A0A               	incf	___xxtofl@exp^0,f,c
  5894   00133C  0E01               	movlw	1
  5895   00133E  260B               	addwf	___xxtofl@arg^0,f,c
  5896   001340  0E00               	movlw	0
  5897   001342  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5898   001344  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5899   001346  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5900   001348  90D8               	bcf	status,0,c
  5901   00134A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5902   00134C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5903   00134E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5904   001350  320B               	rrcf	___xxtofl@arg^0,f,c
  5905   001352                     i2l1114:
  5906   001352  0E00               	movlw	0
  5907   001354  140B               	andwf	___xxtofl@arg^0,w,c
  5908   001356  6E05               	movwf	??___xxtofl^0,c
  5909   001358  0E00               	movlw	0
  5910   00135A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5911   00135C  6E06               	movwf	(??___xxtofl+1)^0,c
  5912   00135E  0E00               	movlw	0
  5913   001360  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5914   001362  6E07               	movwf	(??___xxtofl+2)^0,c
  5915   001364  0EFF               	movlw	255
  5916   001366  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5917   001368  6E08               	movwf	(??___xxtofl+3)^0,c
  5918   00136A  5005               	movf	??___xxtofl^0,w,c
  5919   00136C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5920   00136E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5921   001370  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5922   001372  A4D8               	btfss	status,2,c
  5923   001374  EFBE  F009         	goto	i2u243_41
  5924   001378  EFC0  F009         	goto	i2u243_40
  5925   00137C                     i2u243_41:
  5926   00137C  EF9D  F009         	goto	i2l2973
  5927   001380                     i2u243_40:
  5928   001380  EFC8  F009         	goto	i2l2981
  5929   001384                     i2l2979:
  5930   001384  060A               	decf	___xxtofl@exp^0,f,c
  5931   001386  90D8               	bcf	status,0,c
  5932   001388  360B               	rlcf	___xxtofl@arg^0,f,c
  5933   00138A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5934   00138C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5935   00138E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5936   001390                     i2l2981:
  5937   001390  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5938   001392  EFCD  F009         	goto	i2u244_41
  5939   001396  EFCF  F009         	goto	i2u244_40
  5940   00139A                     i2u244_41:
  5941   00139A  EFD7  F009         	goto	i2l1121
  5942   00139E                     i2u244_40:
  5943   00139E  0E02               	movlw	2
  5944   0013A0  600A               	cpfslt	___xxtofl@exp^0,c
  5945   0013A2  EFD5  F009         	goto	i2u245_41
  5946   0013A6  EFD7  F009         	goto	i2u245_40
  5947   0013AA                     i2u245_41:
  5948   0013AA  EFC2  F009         	goto	i2l2979
  5949   0013AE                     i2u245_40:
  5950   0013AE                     i2l1121:
  5951   0013AE  B00A               	btfsc	___xxtofl@exp^0,0,c
  5952   0013B0  EFDC  F009         	goto	i2u246_41
  5953   0013B4  EFDE  F009         	goto	i2u246_40
  5954   0013B8                     i2u246_41:
  5955   0013B8  EFDF  F009         	goto	i2l2987
  5956   0013BC                     i2u246_40:
  5957   0013BC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5958   0013BE                     i2l2987:
  5959   0013BE  90D8               	bcf	status,0,c
  5960   0013C0  320A               	rrcf	___xxtofl@exp^0,f,c
  5961   0013C2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5962   0013C6  6A06               	clrf	(??___xxtofl+1)^0,c
  5963   0013C8  6A07               	clrf	(??___xxtofl+2)^0,c
  5964   0013CA  6A08               	clrf	(??___xxtofl+3)^0,c
  5965   0013CC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5966   0013D0  6A07               	clrf	(??___xxtofl+2)^0,c
  5967   0013D2  6A06               	clrf	(??___xxtofl+1)^0,c
  5968   0013D4  6A05               	clrf	??___xxtofl^0,c
  5969   0013D6  5005               	movf	??___xxtofl^0,w,c
  5970   0013D8  120B               	iorwf	___xxtofl@arg^0,f,c
  5971   0013DA  5006               	movf	(??___xxtofl+1)^0,w,c
  5972   0013DC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5973   0013DE  5007               	movf	(??___xxtofl+2)^0,w,c
  5974   0013E0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5975   0013E2  5008               	movf	(??___xxtofl+3)^0,w,c
  5976   0013E4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5977   0013E6  5009               	movf	___xxtofl@sign^0,w,c
  5978   0013E8  B4D8               	btfsc	status,2,c
  5979   0013EA  EFF9  F009         	goto	i2u247_41
  5980   0013EE  EFFB  F009         	goto	i2u247_40
  5981   0013F2                     i2u247_41:
  5982   0013F2  EF03  F00A         	goto	i2l2997
  5983   0013F6                     i2u247_40:
  5984   0013F6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5985   0013F8  EF02  F00A         	goto	i2u248_40
  5986   0013FC  EF00  F00A         	goto	i2u248_41
  5987   001400                     i2u248_41:
  5988   001400  EF03  F00A         	goto	i2l2997
  5989   001404                     i2u248_40:
  5990   001404  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5991   001406                     i2l2997:
  5992   001406  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5993   00140A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5994   00140E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5995   001412  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5996   001416                     i2l1110:
  5997   001416  0012               	return		;funcret
  5998   001418                     __end_of___xxtofl:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function ___lwmod *****************
  6002 ;; Defined at:
  6003 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  dividend        2    0[COMRAM] unsigned int 
  6006 ;;  divisor         2    2[COMRAM] unsigned int 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  counter         1    4[COMRAM] unsigned char 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  2    0[COMRAM] unsigned int 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6018 ;;      Params:         4       0       0       0       0       0       0
  6019 ;;      Locals:         1       0       0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0
  6021 ;;      Totals:         5       0       0       0       0       0       0
  6022 ;;Total ram usage:        5 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_Read_AD
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text41
  6032   00248E                     __ptext41:
  6033                           	callstack 0
  6034   00248E                     ___lwmod:
  6035                           	callstack 23
  6036   00248E  5003               	movf	___lwmod@divisor^0,w,c
  6037   002490  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6038   002492  B4D8               	btfsc	status,2,c
  6039   002494  EF4E  F012         	goto	i2u272_41
  6040   002498  EF50  F012         	goto	i2u272_40
  6041   00249C                     i2u272_41:
  6042   00249C  EF74  F012         	goto	i2l953
  6043   0024A0                     i2u272_40:
  6044   0024A0  0E01               	movlw	1
  6045   0024A2  6E05               	movwf	___lwmod@counter^0,c
  6046   0024A4  EF58  F012         	goto	i2l3179
  6047   0024A8                     i2l3177:
  6048   0024A8  90D8               	bcf	status,0,c
  6049   0024AA  3603               	rlcf	___lwmod@divisor^0,f,c
  6050   0024AC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6051   0024AE  2A05               	incf	___lwmod@counter^0,f,c
  6052   0024B0                     i2l3179:
  6053   0024B0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6054   0024B2  EF5D  F012         	goto	i2u273_41
  6055   0024B6  EF5F  F012         	goto	i2u273_40
  6056   0024BA                     i2u273_41:
  6057   0024BA  EF54  F012         	goto	i2l3177
  6058   0024BE                     i2u273_40:
  6059   0024BE                     i2l3181:
  6060   0024BE  5003               	movf	___lwmod@divisor^0,w,c
  6061   0024C0  5C01               	subwf	___lwmod@dividend^0,w,c
  6062   0024C2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6063   0024C4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6064   0024C6  A0D8               	btfss	status,0,c
  6065   0024C8  EF68  F012         	goto	i2u274_41
  6066   0024CC  EF6A  F012         	goto	i2u274_40
  6067   0024D0                     i2u274_41:
  6068   0024D0  EF6E  F012         	goto	i2l3185
  6069   0024D4                     i2u274_40:
  6070   0024D4  5003               	movf	___lwmod@divisor^0,w,c
  6071   0024D6  5E01               	subwf	___lwmod@dividend^0,f,c
  6072   0024D8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6073   0024DA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6074   0024DC                     i2l3185:
  6075   0024DC  90D8               	bcf	status,0,c
  6076   0024DE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6077   0024E0  3203               	rrcf	___lwmod@divisor^0,f,c
  6078   0024E2  2E05               	decfsz	___lwmod@counter^0,f,c
  6079   0024E4  EF5F  F012         	goto	i2l3181
  6080   0024E8                     i2l953:
  6081   0024E8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6082   0024EC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6083   0024F0  0012               	return		;funcret
  6084   0024F2                     __end_of___lwmod:
  6085                           	callstack 0
  6086                           
  6087 ;; *************** function ___lwdiv *****************
  6088 ;; Defined at:
  6089 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  dividend        2    5[COMRAM] unsigned int 
  6092 ;;  divisor         2    7[COMRAM] unsigned int 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  quotient        2    9[COMRAM] unsigned int 
  6095 ;;  counter         1   11[COMRAM] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  2    5[COMRAM] unsigned int 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6105 ;;      Params:         4       0       0       0       0       0       0
  6106 ;;      Locals:         3       0       0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0
  6108 ;;      Totals:         7       0       0       0       0       0       0
  6109 ;;Total ram usage:        7 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_Read_AD
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text42
  6119   0022E8                     __ptext42:
  6120                           	callstack 0
  6121   0022E8                     ___lwdiv:
  6122                           	callstack 23
  6123   0022E8  0E00               	movlw	0
  6124   0022EA  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  6125   0022EC  0E00               	movlw	0
  6126   0022EE  6E0A               	movwf	___lwdiv@quotient^0,c
  6127   0022F0  5008               	movf	___lwdiv@divisor^0,w,c
  6128   0022F2  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6129   0022F4  B4D8               	btfsc	status,2,c
  6130   0022F6  EF7F  F011         	goto	i2u269_41
  6131   0022FA  EF81  F011         	goto	i2u269_40
  6132   0022FE                     i2u269_41:
  6133   0022FE  EFA9  F011         	goto	i2l943
  6134   002302                     i2u269_40:
  6135   002302  0E01               	movlw	1
  6136   002304  6E0C               	movwf	___lwdiv@counter^0,c
  6137   002306  EF89  F011         	goto	i2l3159
  6138   00230A                     i2l3157:
  6139   00230A  90D8               	bcf	status,0,c
  6140   00230C  3608               	rlcf	___lwdiv@divisor^0,f,c
  6141   00230E  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6142   002310  2A0C               	incf	___lwdiv@counter^0,f,c
  6143   002312                     i2l3159:
  6144   002312  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  6145   002314  EF8E  F011         	goto	i2u270_41
  6146   002318  EF90  F011         	goto	i2u270_40
  6147   00231C                     i2u270_41:
  6148   00231C  EF85  F011         	goto	i2l3157
  6149   002320                     i2u270_40:
  6150   002320                     i2l3161:
  6151   002320  90D8               	bcf	status,0,c
  6152   002322  360A               	rlcf	___lwdiv@quotient^0,f,c
  6153   002324  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6154   002326  5008               	movf	___lwdiv@divisor^0,w,c
  6155   002328  5C06               	subwf	___lwdiv@dividend^0,w,c
  6156   00232A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6157   00232C  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6158   00232E  A0D8               	btfss	status,0,c
  6159   002330  EF9C  F011         	goto	i2u271_41
  6160   002334  EF9E  F011         	goto	i2u271_40
  6161   002338                     i2u271_41:
  6162   002338  EFA3  F011         	goto	i2l3169
  6163   00233C                     i2u271_40:
  6164   00233C  5008               	movf	___lwdiv@divisor^0,w,c
  6165   00233E  5E06               	subwf	___lwdiv@dividend^0,f,c
  6166   002340  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6167   002342  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6168   002344  800A               	bsf	___lwdiv@quotient^0,0,c
  6169   002346                     i2l3169:
  6170   002346  90D8               	bcf	status,0,c
  6171   002348  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6172   00234A  3208               	rrcf	___lwdiv@divisor^0,f,c
  6173   00234C  2E0C               	decfsz	___lwdiv@counter^0,f,c
  6174   00234E  EF90  F011         	goto	i2l3161
  6175   002352                     i2l943:
  6176   002352  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  6177   002356  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6178   00235A  0012               	return		;funcret
  6179   00235C                     __end_of___lwdiv:
  6180                           	callstack 0
  6181                           
  6182 ;; *************** function ___fltol *****************
  6183 ;; Defined at:
  6184 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  f1              4   64[COMRAM] unsigned int 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  exp1            1   73[COMRAM] unsigned char 
  6189 ;;  sign1           1   72[COMRAM] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  4   64[COMRAM] long 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6199 ;;      Params:         4       0       0       0       0       0       0
  6200 ;;      Locals:         2       0       0       0       0       0       0
  6201 ;;      Temps:          4       0       0       0       0       0       0
  6202 ;;      Totals:        10       0       0       0       0       0       0
  6203 ;;Total ram usage:       10 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_f_int2
  6209 ;;		_Read_AD
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text43
  6214   001D28                     __ptext43:
  6215                           	callstack 0
  6216   001D28                     ___fltol:
  6217                           	callstack 22
  6218   001D28  3443               	rlcf	(___fltol@f1+2)^0,w,c
  6219   001D2A  3444               	rlcf	(___fltol@f1+3)^0,w,c
  6220   001D2C  6E4A               	movwf	___fltol@exp1^0,c
  6221   001D2E  504A               	movf	___fltol@exp1^0,w,c
  6222   001D30  A4D8               	btfss	status,2,c
  6223   001D32  EF9D  F00E         	goto	i2u232_41
  6224   001D36  EF9F  F00E         	goto	i2u232_40
  6225   001D3A                     i2u232_41:
  6226   001D3A  EFA9  F00E         	goto	i2l2917
  6227   001D3E                     i2u232_40:
  6228   001D3E                     i2l2913:
  6229   001D3E  0E00               	movlw	0
  6230   001D40  6E41               	movwf	?___fltol^0,c
  6231   001D42  0E00               	movlw	0
  6232   001D44  6E42               	movwf	(?___fltol+1)^0,c
  6233   001D46  0E00               	movlw	0
  6234   001D48  6E43               	movwf	(?___fltol+2)^0,c
  6235   001D4A  0E00               	movlw	0
  6236   001D4C  6E44               	movwf	(?___fltol+3)^0,c
  6237   001D4E  EF16  F00F         	goto	i2l749
  6238   001D52                     i2l2917:
  6239   001D52  C041  F045         	movff	___fltol@f1,??___fltol
  6240   001D56  C042  F046         	movff	___fltol@f1+1,??___fltol+1
  6241   001D5A  C043  F047         	movff	___fltol@f1+2,??___fltol+2
  6242   001D5E  C044  F048         	movff	___fltol@f1+3,??___fltol+3
  6243   001D62  0E20               	movlw	32
  6244   001D64  EFB9  F00E         	goto	i2u233_40
  6245   001D68                     i2u233_45:
  6246   001D68  90D8               	bcf	status,0,c
  6247   001D6A  3248               	rrcf	(??___fltol+3)^0,f,c
  6248   001D6C  3247               	rrcf	(??___fltol+2)^0,f,c
  6249   001D6E  3246               	rrcf	(??___fltol+1)^0,f,c
  6250   001D70  3245               	rrcf	??___fltol^0,f,c
  6251   001D72                     i2u233_40:
  6252   001D72  2EE8               	decfsz	wreg,f,c
  6253   001D74  EFB4  F00E         	goto	i2u233_45
  6254   001D78  5045               	movf	??___fltol^0,w,c
  6255   001D7A  6E49               	movwf	___fltol@sign1^0,c
  6256   001D7C  8E43               	bsf	(___fltol@f1+2)^0,7,c
  6257   001D7E  0EFF               	movlw	255
  6258   001D80  1641               	andwf	___fltol@f1^0,f,c
  6259   001D82  0EFF               	movlw	255
  6260   001D84  1642               	andwf	(___fltol@f1+1)^0,f,c
  6261   001D86  0EFF               	movlw	255
  6262   001D88  1643               	andwf	(___fltol@f1+2)^0,f,c
  6263   001D8A  0E00               	movlw	0
  6264   001D8C  1644               	andwf	(___fltol@f1+3)^0,f,c
  6265   001D8E  0E96               	movlw	150
  6266   001D90  5E4A               	subwf	___fltol@exp1^0,f,c
  6267   001D92  BE4A               	btfsc	___fltol@exp1^0,7,c
  6268   001D94  EFD0  F00E         	goto	i2u234_40
  6269   001D98  EFCE  F00E         	goto	i2u234_41
  6270   001D9C                     i2u234_41:
  6271   001D9C  EFE6  F00E         	goto	i2l2937
  6272   001DA0                     i2u234_40:
  6273   001DA0  504A               	movf	___fltol@exp1^0,w,c
  6274   001DA2  0A80               	xorlw	128
  6275   001DA4  0F97               	addlw	151
  6276   001DA6  B0D8               	btfsc	status,0,c
  6277   001DA8  EFD8  F00E         	goto	i2u235_41
  6278   001DAC  EFDA  F00E         	goto	i2u235_40
  6279   001DB0                     i2u235_41:
  6280   001DB0  EFDC  F00E         	goto	i2l2933
  6281   001DB4                     i2u235_40:
  6282   001DB4  EF9F  F00E         	goto	i2l2913
  6283   001DB8                     i2l2933:
  6284   001DB8  90D8               	bcf	status,0,c
  6285   001DBA  3244               	rrcf	(___fltol@f1+3)^0,f,c
  6286   001DBC  3243               	rrcf	(___fltol@f1+2)^0,f,c
  6287   001DBE  3242               	rrcf	(___fltol@f1+1)^0,f,c
  6288   001DC0  3241               	rrcf	___fltol@f1^0,f,c
  6289   001DC2  3E4A               	incfsz	___fltol@exp1^0,f,c
  6290   001DC4  EFDC  F00E         	goto	i2l2933
  6291   001DC8  EFFE  F00E         	goto	i2l2947
  6292   001DCC                     i2l2937:
  6293   001DCC  0E1F               	movlw	31
  6294   001DCE  644A               	cpfsgt	___fltol@exp1^0,c
  6295   001DD0  EFEC  F00E         	goto	i2u236_41
  6296   001DD4  EFEE  F00E         	goto	i2u236_40
  6297   001DD8                     i2u236_41:
  6298   001DD8  EFF6  F00E         	goto	i2l2945
  6299   001DDC                     i2u236_40:
  6300   001DDC  EF9F  F00E         	goto	i2l2913
  6301   001DE0                     i2l2943:
  6302   001DE0  90D8               	bcf	status,0,c
  6303   001DE2  3641               	rlcf	___fltol@f1^0,f,c
  6304   001DE4  3642               	rlcf	(___fltol@f1+1)^0,f,c
  6305   001DE6  3643               	rlcf	(___fltol@f1+2)^0,f,c
  6306   001DE8  3644               	rlcf	(___fltol@f1+3)^0,f,c
  6307   001DEA  064A               	decf	___fltol@exp1^0,f,c
  6308   001DEC                     i2l2945:
  6309   001DEC  504A               	movf	___fltol@exp1^0,w,c
  6310   001DEE  A4D8               	btfss	status,2,c
  6311   001DF0  EFFC  F00E         	goto	i2u237_41
  6312   001DF4  EFFE  F00E         	goto	i2u237_40
  6313   001DF8                     i2u237_41:
  6314   001DF8  EFF0  F00E         	goto	i2l2943
  6315   001DFC                     i2u237_40:
  6316   001DFC                     i2l2947:
  6317   001DFC  5049               	movf	___fltol@sign1^0,w,c
  6318   001DFE  B4D8               	btfsc	status,2,c
  6319   001E00  EF04  F00F         	goto	i2u238_41
  6320   001E04  EF06  F00F         	goto	i2u238_40
  6321   001E08                     i2u238_41:
  6322   001E08  EF0E  F00F         	goto	i2l2951
  6323   001E0C                     i2u238_40:
  6324   001E0C  1E44               	comf	(___fltol@f1+3)^0,f,c
  6325   001E0E  1E43               	comf	(___fltol@f1+2)^0,f,c
  6326   001E10  1E42               	comf	(___fltol@f1+1)^0,f,c
  6327   001E12  6C41               	negf	___fltol@f1^0,c
  6328   001E14  0E00               	movlw	0
  6329   001E16  2242               	addwfc	(___fltol@f1+1)^0,f,c
  6330   001E18  2243               	addwfc	(___fltol@f1+2)^0,f,c
  6331   001E1A  2244               	addwfc	(___fltol@f1+3)^0,f,c
  6332   001E1C                     i2l2951:
  6333   001E1C  C041  F041         	movff	___fltol@f1,?___fltol
  6334   001E20  C042  F042         	movff	___fltol@f1+1,?___fltol+1
  6335   001E24  C043  F043         	movff	___fltol@f1+2,?___fltol+2
  6336   001E28  C044  F044         	movff	___fltol@f1+3,?___fltol+3
  6337   001E2C                     i2l749:
  6338   001E2C  0012               	return		;funcret
  6339   001E2E                     __end_of___fltol:
  6340                           	callstack 0
  6341                           
  6342 ;; *************** function ___flmul *****************
  6343 ;; Defined at:
  6344 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  b               4   14[COMRAM] long 
  6347 ;;  a               4   18[COMRAM] long 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  prod            4   33[COMRAM] struct .
  6350 ;;  grs             4   27[COMRAM] unsigned long 
  6351 ;;  temp            2   37[COMRAM] struct .
  6352 ;;  bexp            1   32[COMRAM] unsigned char 
  6353 ;;  aexp            1   31[COMRAM] unsigned char 
  6354 ;;  sign            1   26[COMRAM] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  4   14[COMRAM] unsigned char 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0, prodl, prodh
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6364 ;;      Params:         8       0       0       0       0       0       0
  6365 ;;      Locals:        13       0       0       0       0       0       0
  6366 ;;      Temps:          4       0       0       0       0       0       0
  6367 ;;      Totals:        25       0       0       0       0       0       0
  6368 ;;Total ram usage:       25 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_f_int2
  6374 ;;		_Read_AD
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text44
  6379   00060A                     __ptext44:
  6380                           	callstack 0
  6381   00060A                     ___flmul:
  6382                           	callstack 22
  6383   00060A  5012               	movf	(___flmul@b+3)^0,w,c
  6384   00060C  0B80               	andlw	128
  6385   00060E  6E1B               	movwf	___flmul@sign^0,c
  6386   000610  5012               	movf	(___flmul@b+3)^0,w,c
  6387   000612  2412               	addwf	(___flmul@b+3)^0,w,c
  6388   000614  6E21               	movwf	___flmul@bexp^0,c
  6389   000616  AE11               	btfss	(___flmul@b+2)^0,7,c
  6390   000618  EF10  F003         	goto	i2u213_41
  6391   00061C  EF12  F003         	goto	i2u213_40
  6392   000620                     i2u213_41:
  6393   000620  EF13  F003         	goto	i2l2787
  6394   000624                     i2u213_40:
  6395   000624  8021               	bsf	___flmul@bexp^0,0,c
  6396   000626                     i2l2787:
  6397   000626  5021               	movf	___flmul@bexp^0,w,c
  6398   000628  B4D8               	btfsc	status,2,c
  6399   00062A  EF19  F003         	goto	i2u214_41
  6400   00062E  EF1B  F003         	goto	i2u214_40
  6401   000632                     i2u214_41:
  6402   000632  EF2E  F003         	goto	i2l2795
  6403   000636                     i2u214_40:
  6404   000636  2821               	incf	___flmul@bexp^0,w,c
  6405   000638  A4D8               	btfss	status,2,c
  6406   00063A  EF21  F003         	goto	i2u215_41
  6407   00063E  EF23  F003         	goto	i2u215_40
  6408   000642                     i2u215_41:
  6409   000642  EF2B  F003         	goto	i2l2793
  6410   000646                     i2u215_40:
  6411   000646  0E00               	movlw	0
  6412   000648  6E0F               	movwf	___flmul@b^0,c
  6413   00064A  0E00               	movlw	0
  6414   00064C  6E10               	movwf	(___flmul@b+1)^0,c
  6415   00064E  0E00               	movlw	0
  6416   000650  6E11               	movwf	(___flmul@b+2)^0,c
  6417   000652  0E00               	movlw	0
  6418   000654  6E12               	movwf	(___flmul@b+3)^0,c
  6419   000656                     i2l2793:
  6420   000656  8E11               	bsf	(___flmul@b+2)^0,7,c
  6421   000658  EF36  F003         	goto	i2l2797
  6422   00065C                     i2l2795:
  6423   00065C  0E00               	movlw	0
  6424   00065E  6E0F               	movwf	___flmul@b^0,c
  6425   000660  0E00               	movlw	0
  6426   000662  6E10               	movwf	(___flmul@b+1)^0,c
  6427   000664  0E00               	movlw	0
  6428   000666  6E11               	movwf	(___flmul@b+2)^0,c
  6429   000668  0E00               	movlw	0
  6430   00066A  6E12               	movwf	(___flmul@b+3)^0,c
  6431   00066C                     i2l2797:
  6432   00066C  5016               	movf	(___flmul@a+3)^0,w,c
  6433   00066E  0B80               	andlw	128
  6434   000670  1A1B               	xorwf	___flmul@sign^0,f,c
  6435   000672  5016               	movf	(___flmul@a+3)^0,w,c
  6436   000674  2416               	addwf	(___flmul@a+3)^0,w,c
  6437   000676  6E20               	movwf	___flmul@aexp^0,c
  6438   000678  AE15               	btfss	(___flmul@a+2)^0,7,c
  6439   00067A  EF41  F003         	goto	i2u216_41
  6440   00067E  EF43  F003         	goto	i2u216_40
  6441   000682                     i2u216_41:
  6442   000682  EF44  F003         	goto	i2l2805
  6443   000686                     i2u216_40:
  6444   000686  8020               	bsf	___flmul@aexp^0,0,c
  6445   000688                     i2l2805:
  6446   000688  5020               	movf	___flmul@aexp^0,w,c
  6447   00068A  B4D8               	btfsc	status,2,c
  6448   00068C  EF4A  F003         	goto	i2u217_41
  6449   000690  EF4C  F003         	goto	i2u217_40
  6450   000694                     i2u217_41:
  6451   000694  EF5F  F003         	goto	i2l2813
  6452   000698                     i2u217_40:
  6453   000698  2820               	incf	___flmul@aexp^0,w,c
  6454   00069A  A4D8               	btfss	status,2,c
  6455   00069C  EF52  F003         	goto	i2u218_41
  6456   0006A0  EF54  F003         	goto	i2u218_40
  6457   0006A4                     i2u218_41:
  6458   0006A4  EF5C  F003         	goto	i2l2811
  6459   0006A8                     i2u218_40:
  6460   0006A8  0E00               	movlw	0
  6461   0006AA  6E13               	movwf	___flmul@a^0,c
  6462   0006AC  0E00               	movlw	0
  6463   0006AE  6E14               	movwf	(___flmul@a+1)^0,c
  6464   0006B0  0E00               	movlw	0
  6465   0006B2  6E15               	movwf	(___flmul@a+2)^0,c
  6466   0006B4  0E00               	movlw	0
  6467   0006B6  6E16               	movwf	(___flmul@a+3)^0,c
  6468   0006B8                     i2l2811:
  6469   0006B8  8E15               	bsf	(___flmul@a+2)^0,7,c
  6470   0006BA  EF67  F003         	goto	i2l1066
  6471   0006BE                     i2l2813:
  6472   0006BE  0E00               	movlw	0
  6473   0006C0  6E13               	movwf	___flmul@a^0,c
  6474   0006C2  0E00               	movlw	0
  6475   0006C4  6E14               	movwf	(___flmul@a+1)^0,c
  6476   0006C6  0E00               	movlw	0
  6477   0006C8  6E15               	movwf	(___flmul@a+2)^0,c
  6478   0006CA  0E00               	movlw	0
  6479   0006CC  6E16               	movwf	(___flmul@a+3)^0,c
  6480   0006CE                     i2l1066:
  6481   0006CE  5020               	movf	___flmul@aexp^0,w,c
  6482   0006D0  B4D8               	btfsc	status,2,c
  6483   0006D2  EF6D  F003         	goto	i2u219_41
  6484   0006D6  EF6F  F003         	goto	i2u219_40
  6485   0006DA                     i2u219_41:
  6486   0006DA  EF77  F003         	goto	i2l2817
  6487   0006DE                     i2u219_40:
  6488   0006DE  5021               	movf	___flmul@bexp^0,w,c
  6489   0006E0  A4D8               	btfss	status,2,c
  6490   0006E2  EF75  F003         	goto	i2u220_41
  6491   0006E6  EF77  F003         	goto	i2u220_40
  6492   0006EA                     i2u220_41:
  6493   0006EA  EF81  F003         	goto	i2l2821
  6494   0006EE                     i2u220_40:
  6495   0006EE                     i2l2817:
  6496   0006EE  0E00               	movlw	0
  6497   0006F0  6E0F               	movwf	?___flmul^0,c
  6498   0006F2  0E00               	movlw	0
  6499   0006F4  6E10               	movwf	(?___flmul+1)^0,c
  6500   0006F6  0E00               	movlw	0
  6501   0006F8  6E11               	movwf	(?___flmul+2)^0,c
  6502   0006FA  0E00               	movlw	0
  6503   0006FC  6E12               	movwf	(?___flmul+3)^0,c
  6504   0006FE  EF19  F005         	goto	i2l1070
  6505   000702                     i2l2821:
  6506   000702  5015               	movf	(___flmul@a+2)^0,w,c
  6507   000704  020F               	mulwf	___flmul@b^0,c
  6508   000706  CFF3 F026          	movff	prodl,___flmul@temp
  6509   00070A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6510   00070E  5026               	movf	___flmul@temp^0,w,c
  6511   000710  6E1C               	movwf	___flmul@grs^0,c
  6512   000712  6A1D               	clrf	(___flmul@grs+1)^0,c
  6513   000714  6A1E               	clrf	(___flmul@grs+2)^0,c
  6514   000716  6A1F               	clrf	(___flmul@grs+3)^0,c
  6515   000718  5027               	movf	(___flmul@temp+1)^0,w,c
  6516   00071A  6E22               	movwf	___flmul@prod^0,c
  6517   00071C  6A23               	clrf	(___flmul@prod+1)^0,c
  6518   00071E  6A24               	clrf	(___flmul@prod+2)^0,c
  6519   000720  6A25               	clrf	(___flmul@prod+3)^0,c
  6520   000722  5014               	movf	(___flmul@a+1)^0,w,c
  6521   000724  0210               	mulwf	(___flmul@b+1)^0,c
  6522   000726  CFF3 F026          	movff	prodl,___flmul@temp
  6523   00072A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6524   00072E  5026               	movf	___flmul@temp^0,w,c
  6525   000730  261C               	addwf	___flmul@grs^0,f,c
  6526   000732  0E00               	movlw	0
  6527   000734  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6528   000736  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6529   000738  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6530   00073A  5027               	movf	(___flmul@temp+1)^0,w,c
  6531   00073C  2622               	addwf	___flmul@prod^0,f,c
  6532   00073E  0E00               	movlw	0
  6533   000740  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6534   000742  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6535   000744  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6536   000746  5013               	movf	___flmul@a^0,w,c
  6537   000748  0211               	mulwf	(___flmul@b+2)^0,c
  6538   00074A  CFF3 F026          	movff	prodl,___flmul@temp
  6539   00074E  CFF4 F027          	movff	prodh,___flmul@temp+1
  6540   000752  5026               	movf	___flmul@temp^0,w,c
  6541   000754  261C               	addwf	___flmul@grs^0,f,c
  6542   000756  0E00               	movlw	0
  6543   000758  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6544   00075A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6545   00075C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6546   00075E  5027               	movf	(___flmul@temp+1)^0,w,c
  6547   000760  2622               	addwf	___flmul@prod^0,f,c
  6548   000762  0E00               	movlw	0
  6549   000764  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6550   000766  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6551   000768  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6552   00076A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6553   00076E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6554   000772  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6555   000776  6A1C               	clrf	___flmul@grs^0,c
  6556   000778  5013               	movf	___flmul@a^0,w,c
  6557   00077A  0210               	mulwf	(___flmul@b+1)^0,c
  6558   00077C  CFF3 F026          	movff	prodl,___flmul@temp
  6559   000780  CFF4 F027          	movff	prodh,___flmul@temp+1
  6560   000784  5026               	movf	___flmul@temp^0,w,c
  6561   000786  261C               	addwf	___flmul@grs^0,f,c
  6562   000788  5027               	movf	(___flmul@temp+1)^0,w,c
  6563   00078A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6564   00078C  0E00               	movlw	0
  6565   00078E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6566   000790  0E00               	movlw	0
  6567   000792  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6568   000794  5014               	movf	(___flmul@a+1)^0,w,c
  6569   000796  020F               	mulwf	___flmul@b^0,c
  6570   000798  CFF3 F026          	movff	prodl,___flmul@temp
  6571   00079C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6572   0007A0  5026               	movf	___flmul@temp^0,w,c
  6573   0007A2  261C               	addwf	___flmul@grs^0,f,c
  6574   0007A4  5027               	movf	(___flmul@temp+1)^0,w,c
  6575   0007A6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6576   0007A8  0E00               	movlw	0
  6577   0007AA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6578   0007AC  0E00               	movlw	0
  6579   0007AE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6580   0007B0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6581   0007B4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6582   0007B8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6583   0007BC  6A1C               	clrf	___flmul@grs^0,c
  6584   0007BE  5013               	movf	___flmul@a^0,w,c
  6585   0007C0  020F               	mulwf	___flmul@b^0,c
  6586   0007C2  CFF3 F026          	movff	prodl,___flmul@temp
  6587   0007C6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6588   0007CA  5026               	movf	___flmul@temp^0,w,c
  6589   0007CC  261C               	addwf	___flmul@grs^0,f,c
  6590   0007CE  5027               	movf	(___flmul@temp+1)^0,w,c
  6591   0007D0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6592   0007D2  0E00               	movlw	0
  6593   0007D4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6594   0007D6  0E00               	movlw	0
  6595   0007D8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6596   0007DA  5015               	movf	(___flmul@a+2)^0,w,c
  6597   0007DC  0210               	mulwf	(___flmul@b+1)^0,c
  6598   0007DE  CFF3 F026          	movff	prodl,___flmul@temp
  6599   0007E2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6600   0007E6  5026               	movf	___flmul@temp^0,w,c
  6601   0007E8  2622               	addwf	___flmul@prod^0,f,c
  6602   0007EA  5027               	movf	(___flmul@temp+1)^0,w,c
  6603   0007EC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6604   0007EE  0E00               	movlw	0
  6605   0007F0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6606   0007F2  0E00               	movlw	0
  6607   0007F4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6608   0007F6  5014               	movf	(___flmul@a+1)^0,w,c
  6609   0007F8  0211               	mulwf	(___flmul@b+2)^0,c
  6610   0007FA  CFF3 F026          	movff	prodl,___flmul@temp
  6611   0007FE  CFF4 F027          	movff	prodh,___flmul@temp+1
  6612   000802  5026               	movf	___flmul@temp^0,w,c
  6613   000804  2622               	addwf	___flmul@prod^0,f,c
  6614   000806  5027               	movf	(___flmul@temp+1)^0,w,c
  6615   000808  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6616   00080A  0E00               	movlw	0
  6617   00080C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6618   00080E  0E00               	movlw	0
  6619   000810  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6620   000812  5015               	movf	(___flmul@a+2)^0,w,c
  6621   000814  0211               	mulwf	(___flmul@b+2)^0,c
  6622   000816  CFF3 F026          	movff	prodl,___flmul@temp
  6623   00081A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6624   00081E  5026               	movf	___flmul@temp^0,w,c
  6625   000820  6E17               	movwf	??___flmul^0,c
  6626   000822  5027               	movf	(___flmul@temp+1)^0,w,c
  6627   000824  6E18               	movwf	(??___flmul+1)^0,c
  6628   000826  6A19               	clrf	(??___flmul+2)^0,c
  6629   000828  6A1A               	clrf	(??___flmul+3)^0,c
  6630   00082A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6631   00082E  C018  F019         	movff	??___flmul+1,??___flmul+2
  6632   000832  C017  F018         	movff	??___flmul,??___flmul+1
  6633   000836  6A17               	clrf	??___flmul^0,c
  6634   000838  5017               	movf	??___flmul^0,w,c
  6635   00083A  2622               	addwf	___flmul@prod^0,f,c
  6636   00083C  5018               	movf	(??___flmul+1)^0,w,c
  6637   00083E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6638   000840  5019               	movf	(??___flmul+2)^0,w,c
  6639   000842  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6640   000844  501A               	movf	(??___flmul+3)^0,w,c
  6641   000846  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6642   000848  C01C  F017         	movff	___flmul@grs,??___flmul
  6643   00084C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6644   000850  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6645   000854  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6646   000858  0E19               	movlw	25
  6647   00085A  EF34  F004         	goto	i2u221_40
  6648   00085E                     i2u221_45:
  6649   00085E  90D8               	bcf	status,0,c
  6650   000860  321A               	rrcf	(??___flmul+3)^0,f,c
  6651   000862  3219               	rrcf	(??___flmul+2)^0,f,c
  6652   000864  3218               	rrcf	(??___flmul+1)^0,f,c
  6653   000866  3217               	rrcf	??___flmul^0,f,c
  6654   000868                     i2u221_40:
  6655   000868  2EE8               	decfsz	wreg,f,c
  6656   00086A  EF2F  F004         	goto	i2u221_45
  6657   00086E  5017               	movf	??___flmul^0,w,c
  6658   000870  2622               	addwf	___flmul@prod^0,f,c
  6659   000872  5018               	movf	(??___flmul+1)^0,w,c
  6660   000874  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6661   000876  5019               	movf	(??___flmul+2)^0,w,c
  6662   000878  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6663   00087A  501A               	movf	(??___flmul+3)^0,w,c
  6664   00087C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6665   00087E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6666   000882  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6667   000886  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6668   00088A  6A1C               	clrf	___flmul@grs^0,c
  6669   00088C  5020               	movf	___flmul@aexp^0,w,c
  6670   00088E  C021  F017         	movff	___flmul@bexp,??___flmul
  6671   000892  6A18               	clrf	(??___flmul+1)^0,c
  6672   000894  2617               	addwf	??___flmul^0,f,c
  6673   000896  0E00               	movlw	0
  6674   000898  2218               	addwfc	(??___flmul+1)^0,f,c
  6675   00089A  0E82               	movlw	130
  6676   00089C  2417               	addwf	??___flmul^0,w,c
  6677   00089E  6E26               	movwf	___flmul@temp^0,c
  6678   0008A0  0EFF               	movlw	255
  6679   0008A2  2018               	addwfc	(??___flmul+1)^0,w,c
  6680   0008A4  6E27               	movwf	(___flmul@temp+1)^0,c
  6681   0008A6  EF6A  F004         	goto	i2l2869
  6682   0008AA                     i2l2863:
  6683   0008AA  90D8               	bcf	status,0,c
  6684   0008AC  3622               	rlcf	___flmul@prod^0,f,c
  6685   0008AE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6686   0008B0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6687   0008B2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6688   0008B4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6689   0008B6  EF5F  F004         	goto	i2u222_41
  6690   0008BA  EF61  F004         	goto	i2u222_40
  6691   0008BE                     i2u222_41:
  6692   0008BE  EF62  F004         	goto	i2l1073
  6693   0008C2                     i2u222_40:
  6694   0008C2  8022               	bsf	___flmul@prod^0,0,c
  6695   0008C4                     i2l1073:
  6696   0008C4  90D8               	bcf	status,0,c
  6697   0008C6  361C               	rlcf	___flmul@grs^0,f,c
  6698   0008C8  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6699   0008CA  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6700   0008CC  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6701   0008CE  0626               	decf	___flmul@temp^0,f,c
  6702   0008D0  A0D8               	btfss	status,0,c
  6703   0008D2  0627               	decf	(___flmul@temp+1)^0,f,c
  6704   0008D4                     i2l2869:
  6705   0008D4  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6706   0008D6  EF6F  F004         	goto	i2u223_41
  6707   0008DA  EF71  F004         	goto	i2u223_40
  6708   0008DE                     i2u223_41:
  6709   0008DE  EF55  F004         	goto	i2l2863
  6710   0008E2                     i2u223_40:
  6711   0008E2  0E00               	movlw	0
  6712   0008E4  6E20               	movwf	___flmul@aexp^0,c
  6713   0008E6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6714   0008E8  EF78  F004         	goto	i2u224_41
  6715   0008EC  EF7A  F004         	goto	i2u224_40
  6716   0008F0                     i2u224_41:
  6717   0008F0  EF9E  F004         	goto	i2l1075
  6718   0008F4                     i2u224_40:
  6719   0008F4  0EFF               	movlw	255
  6720   0008F6  141C               	andwf	___flmul@grs^0,w,c
  6721   0008F8  6E17               	movwf	??___flmul^0,c
  6722   0008FA  0EFF               	movlw	255
  6723   0008FC  141D               	andwf	(___flmul@grs+1)^0,w,c
  6724   0008FE  6E18               	movwf	(??___flmul+1)^0,c
  6725   000900  0EFF               	movlw	255
  6726   000902  141E               	andwf	(___flmul@grs+2)^0,w,c
  6727   000904  6E19               	movwf	(??___flmul+2)^0,c
  6728   000906  0E7F               	movlw	127
  6729   000908  141F               	andwf	(___flmul@grs+3)^0,w,c
  6730   00090A  6E1A               	movwf	(??___flmul+3)^0,c
  6731   00090C  5017               	movf	??___flmul^0,w,c
  6732   00090E  1018               	iorwf	(??___flmul+1)^0,w,c
  6733   000910  1019               	iorwf	(??___flmul+2)^0,w,c
  6734   000912  101A               	iorwf	(??___flmul+3)^0,w,c
  6735   000914  B4D8               	btfsc	status,2,c
  6736   000916  EF8F  F004         	goto	i2u225_41
  6737   00091A  EF91  F004         	goto	i2u225_40
  6738   00091E                     i2u225_41:
  6739   00091E  EF95  F004         	goto	i2l1076
  6740   000922                     i2u225_40:
  6741   000922                     i2l2877:
  6742   000922  0E01               	movlw	1
  6743   000924  6E20               	movwf	___flmul@aexp^0,c
  6744   000926  EF9E  F004         	goto	i2l1075
  6745   00092A                     i2l1076:
  6746   00092A  A022               	btfss	___flmul@prod^0,0,c
  6747   00092C  EF9A  F004         	goto	i2u226_41
  6748   000930  EF9C  F004         	goto	i2u226_40
  6749   000934                     i2u226_41:
  6750   000934  EF9E  F004         	goto	i2l1075
  6751   000938                     i2u226_40:
  6752   000938  EF91  F004         	goto	i2l2877
  6753   00093C                     i2l1075:
  6754   00093C  5020               	movf	___flmul@aexp^0,w,c
  6755   00093E  B4D8               	btfsc	status,2,c
  6756   000940  EFA4  F004         	goto	i2u227_41
  6757   000944  EFA6  F004         	goto	i2u227_40
  6758   000948                     i2u227_41:
  6759   000948  EFCA  F004         	goto	i2l2889
  6760   00094C                     i2u227_40:
  6761   00094C  0E01               	movlw	1
  6762   00094E  2622               	addwf	___flmul@prod^0,f,c
  6763   000950  0E00               	movlw	0
  6764   000952  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6765   000954  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6766   000956  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6767   000958  A025               	btfss	(___flmul@prod+3)^0,0,c
  6768   00095A  EFB1  F004         	goto	i2u228_41
  6769   00095E  EFB3  F004         	goto	i2u228_40
  6770   000962                     i2u228_41:
  6771   000962  EFCA  F004         	goto	i2l2889
  6772   000966                     i2u228_40:
  6773   000966  C022  F017         	movff	___flmul@prod,??___flmul
  6774   00096A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6775   00096E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6776   000972  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6777   000976  341A               	rlcf	(??___flmul+3)^0,w,c
  6778   000978  321A               	rrcf	(??___flmul+3)^0,f,c
  6779   00097A  3219               	rrcf	(??___flmul+2)^0,f,c
  6780   00097C  3218               	rrcf	(??___flmul+1)^0,f,c
  6781   00097E  3217               	rrcf	??___flmul^0,f,c
  6782   000980  C017  F022         	movff	??___flmul,___flmul@prod
  6783   000984  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6784   000988  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6785   00098C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6786   000990  4A26               	infsnz	___flmul@temp^0,f,c
  6787   000992  2A27               	incf	(___flmul@temp+1)^0,f,c
  6788   000994                     i2l2889:
  6789   000994  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6790   000996  EFD5  F004         	goto	i2u229_41
  6791   00099A  5027               	movf	(___flmul@temp+1)^0,w,c
  6792   00099C  E108               	bnz	i2u229_40
  6793   00099E  2826               	incf	___flmul@temp^0,w,c
  6794   0009A0  A0D8               	btfss	status,0,c
  6795   0009A2  EFD5  F004         	goto	i2u229_41
  6796   0009A6  EFD7  F004         	goto	i2u229_40
  6797   0009AA                     i2u229_41:
  6798   0009AA  EFE1  F004         	goto	i2l2893
  6799   0009AE                     i2u229_40:
  6800   0009AE  0E00               	movlw	0
  6801   0009B0  6E22               	movwf	___flmul@prod^0,c
  6802   0009B2  0E00               	movlw	0
  6803   0009B4  6E23               	movwf	(___flmul@prod+1)^0,c
  6804   0009B6  0E80               	movlw	128
  6805   0009B8  6E24               	movwf	(___flmul@prod+2)^0,c
  6806   0009BA  0E7F               	movlw	127
  6807   0009BC  6E25               	movwf	(___flmul@prod+3)^0,c
  6808   0009BE  EF0F  F005         	goto	i2l2905
  6809   0009C2                     i2l2893:
  6810   0009C2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6811   0009C4  EFEE  F004         	goto	i2u230_40
  6812   0009C8  5027               	movf	(___flmul@temp+1)^0,w,c
  6813   0009CA  E106               	bnz	i2u230_41
  6814   0009CC  0426               	decf	___flmul@temp^0,w,c
  6815   0009CE  B0D8               	btfsc	status,0,c
  6816   0009D0  EFEC  F004         	goto	i2u230_41
  6817   0009D4  EFEE  F004         	goto	i2u230_40
  6818   0009D8                     i2u230_41:
  6819   0009D8  EFFA  F004         	goto	i2l1083
  6820   0009DC                     i2u230_40:
  6821   0009DC  0E00               	movlw	0
  6822   0009DE  6E22               	movwf	___flmul@prod^0,c
  6823   0009E0  0E00               	movlw	0
  6824   0009E2  6E23               	movwf	(___flmul@prod+1)^0,c
  6825   0009E4  0E00               	movlw	0
  6826   0009E6  6E24               	movwf	(___flmul@prod+2)^0,c
  6827   0009E8  0E00               	movlw	0
  6828   0009EA  6E25               	movwf	(___flmul@prod+3)^0,c
  6829   0009EC  0E00               	movlw	0
  6830   0009EE  6E1B               	movwf	___flmul@sign^0,c
  6831   0009F0  EF0F  F005         	goto	i2l2905
  6832   0009F4                     i2l1083:
  6833   0009F4  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6834   0009F8  0EFF               	movlw	255
  6835   0009FA  1622               	andwf	___flmul@prod^0,f,c
  6836   0009FC  0EFF               	movlw	255
  6837   0009FE  1623               	andwf	(___flmul@prod+1)^0,f,c
  6838   000A00  0E7F               	movlw	127
  6839   000A02  1624               	andwf	(___flmul@prod+2)^0,f,c
  6840   000A04  0E00               	movlw	0
  6841   000A06  1625               	andwf	(___flmul@prod+3)^0,f,c
  6842   000A08  A021               	btfss	___flmul@bexp^0,0,c
  6843   000A0A  EF09  F005         	goto	i2u231_41
  6844   000A0E  EF0B  F005         	goto	i2u231_40
  6845   000A12                     i2u231_41:
  6846   000A12  EF0C  F005         	goto	i2l2903
  6847   000A16                     i2u231_40:
  6848   000A16  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6849   000A18                     i2l2903:
  6850   000A18  90D8               	bcf	status,0,c
  6851   000A1A  3021               	rrcf	___flmul@bexp^0,w,c
  6852   000A1C  6E25               	movwf	(___flmul@prod+3)^0,c
  6853   000A1E                     i2l2905:
  6854   000A1E  501B               	movf	___flmul@sign^0,w,c
  6855   000A20  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6856   000A22  C022  F00F         	movff	___flmul@prod,?___flmul
  6857   000A26  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6858   000A2A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6859   000A2E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6860   000A32                     i2l1070:
  6861   000A32  0012               	return		;funcret
  6862   000A34                     __end_of___flmul:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function ___fldiv *****************
  6866 ;; Defined at:
  6867 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  b               4   39[COMRAM] unsigned char 
  6870 ;;  a               4   43[COMRAM] unsigned char 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  grs             4   58[COMRAM] unsigned long 
  6873 ;;  rem             4   51[COMRAM] unsigned long 
  6874 ;;  new_exp         2   56[COMRAM] short 
  6875 ;;  aexp            1   63[COMRAM] unsigned char 
  6876 ;;  bexp            1   62[COMRAM] unsigned char 
  6877 ;;  sign            1   55[COMRAM] unsigned char 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  4   39[COMRAM] unsigned char 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6887 ;;      Params:         8       0       0       0       0       0       0
  6888 ;;      Locals:        13       0       0       0       0       0       0
  6889 ;;      Temps:          4       0       0       0       0       0       0
  6890 ;;      Totals:        25       0       0       0       0       0       0
  6891 ;;Total ram usage:       25 bytes
  6892 ;; Hardware stack levels used: 1
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_f_int2
  6897 ;;		_Read_AD
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text45
  6902   000A34                     __ptext45:
  6903                           	callstack 0
  6904   000A34                     ___fldiv:
  6905                           	callstack 22
  6906   000A34  502B               	movf	(___fldiv@b+3)^0,w,c
  6907   000A36  0B80               	andlw	128
  6908   000A38  6E38               	movwf	___fldiv@sign^0,c
  6909   000A3A  502B               	movf	(___fldiv@b+3)^0,w,c
  6910   000A3C  242B               	addwf	(___fldiv@b+3)^0,w,c
  6911   000A3E  6E3F               	movwf	___fldiv@bexp^0,c
  6912   000A40  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6913   000A42  EF25  F005         	goto	i2u190_41
  6914   000A46  EF27  F005         	goto	i2u190_40
  6915   000A4A                     i2u190_41:
  6916   000A4A  EF28  F005         	goto	i2l2649
  6917   000A4E                     i2u190_40:
  6918   000A4E  803F               	bsf	___fldiv@bexp^0,0,c
  6919   000A50                     i2l2649:
  6920   000A50  503F               	movf	___fldiv@bexp^0,w,c
  6921   000A52  B4D8               	btfsc	status,2,c
  6922   000A54  EF2E  F005         	goto	i2u191_41
  6923   000A58  EF30  F005         	goto	i2u191_40
  6924   000A5C                     i2u191_41:
  6925   000A5C  EF45  F005         	goto	i2l2659
  6926   000A60                     i2u191_40:
  6927   000A60  283F               	incf	___fldiv@bexp^0,w,c
  6928   000A62  A4D8               	btfss	status,2,c
  6929   000A64  EF36  F005         	goto	i2u192_41
  6930   000A68  EF38  F005         	goto	i2u192_40
  6931   000A6C                     i2u192_41:
  6932   000A6C  EF40  F005         	goto	i2l2655
  6933   000A70                     i2u192_40:
  6934   000A70  0E00               	movlw	0
  6935   000A72  6E28               	movwf	___fldiv@b^0,c
  6936   000A74  0E00               	movlw	0
  6937   000A76  6E29               	movwf	(___fldiv@b+1)^0,c
  6938   000A78  0E00               	movlw	0
  6939   000A7A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6940   000A7C  0E00               	movlw	0
  6941   000A7E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6942   000A80                     i2l2655:
  6943   000A80  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6944   000A82  0E00               	movlw	0
  6945   000A84  6E2B               	movwf	(___fldiv@b+3)^0,c
  6946   000A86  EF4D  F005         	goto	i2l2661
  6947   000A8A                     i2l2659:
  6948   000A8A  0E00               	movlw	0
  6949   000A8C  6E28               	movwf	___fldiv@b^0,c
  6950   000A8E  0E00               	movlw	0
  6951   000A90  6E29               	movwf	(___fldiv@b+1)^0,c
  6952   000A92  0E00               	movlw	0
  6953   000A94  6E2A               	movwf	(___fldiv@b+2)^0,c
  6954   000A96  0E00               	movlw	0
  6955   000A98  6E2B               	movwf	(___fldiv@b+3)^0,c
  6956   000A9A                     i2l2661:
  6957   000A9A  502F               	movf	(___fldiv@a+3)^0,w,c
  6958   000A9C  0B80               	andlw	128
  6959   000A9E  1A38               	xorwf	___fldiv@sign^0,f,c
  6960   000AA0  502F               	movf	(___fldiv@a+3)^0,w,c
  6961   000AA2  242F               	addwf	(___fldiv@a+3)^0,w,c
  6962   000AA4  6E40               	movwf	___fldiv@aexp^0,c
  6963   000AA6  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6964   000AA8  EF58  F005         	goto	i2u193_41
  6965   000AAC  EF5A  F005         	goto	i2u193_40
  6966   000AB0                     i2u193_41:
  6967   000AB0  EF5B  F005         	goto	i2l2669
  6968   000AB4                     i2u193_40:
  6969   000AB4  8040               	bsf	___fldiv@aexp^0,0,c
  6970   000AB6                     i2l2669:
  6971   000AB6  5040               	movf	___fldiv@aexp^0,w,c
  6972   000AB8  B4D8               	btfsc	status,2,c
  6973   000ABA  EF61  F005         	goto	i2u194_41
  6974   000ABE  EF63  F005         	goto	i2u194_40
  6975   000AC2                     i2u194_41:
  6976   000AC2  EF78  F005         	goto	i2l2679
  6977   000AC6                     i2u194_40:
  6978   000AC6  2840               	incf	___fldiv@aexp^0,w,c
  6979   000AC8  A4D8               	btfss	status,2,c
  6980   000ACA  EF69  F005         	goto	i2u195_41
  6981   000ACE  EF6B  F005         	goto	i2u195_40
  6982   000AD2                     i2u195_41:
  6983   000AD2  EF73  F005         	goto	i2l2675
  6984   000AD6                     i2u195_40:
  6985   000AD6  0E00               	movlw	0
  6986   000AD8  6E2C               	movwf	___fldiv@a^0,c
  6987   000ADA  0E00               	movlw	0
  6988   000ADC  6E2D               	movwf	(___fldiv@a+1)^0,c
  6989   000ADE  0E00               	movlw	0
  6990   000AE0  6E2E               	movwf	(___fldiv@a+2)^0,c
  6991   000AE2  0E00               	movlw	0
  6992   000AE4  6E2F               	movwf	(___fldiv@a+3)^0,c
  6993   000AE6                     i2l2675:
  6994   000AE6  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6995   000AE8  0E00               	movlw	0
  6996   000AEA  6E2F               	movwf	(___fldiv@a+3)^0,c
  6997   000AEC  EF80  F005         	goto	i2l2681
  6998   000AF0                     i2l2679:
  6999   000AF0  0E00               	movlw	0
  7000   000AF2  6E2C               	movwf	___fldiv@a^0,c
  7001   000AF4  0E00               	movlw	0
  7002   000AF6  6E2D               	movwf	(___fldiv@a+1)^0,c
  7003   000AF8  0E00               	movlw	0
  7004   000AFA  6E2E               	movwf	(___fldiv@a+2)^0,c
  7005   000AFC  0E00               	movlw	0
  7006   000AFE  6E2F               	movwf	(___fldiv@a+3)^0,c
  7007   000B00                     i2l2681:
  7008   000B00  502C               	movf	___fldiv@a^0,w,c
  7009   000B02  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7010   000B04  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7011   000B06  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7012   000B08  A4D8               	btfss	status,2,c
  7013   000B0A  EF89  F005         	goto	i2u196_41
  7014   000B0E  EF8B  F005         	goto	i2u196_40
  7015   000B12                     i2u196_41:
  7016   000B12  EFA3  F005         	goto	i2l2693
  7017   000B16                     i2u196_40:
  7018   000B16  0E00               	movlw	0
  7019   000B18  6E28               	movwf	___fldiv@b^0,c
  7020   000B1A  0E00               	movlw	0
  7021   000B1C  6E29               	movwf	(___fldiv@b+1)^0,c
  7022   000B1E  0E00               	movlw	0
  7023   000B20  6E2A               	movwf	(___fldiv@b+2)^0,c
  7024   000B22  0E00               	movlw	0
  7025   000B24  6E2B               	movwf	(___fldiv@b+3)^0,c
  7026   000B26  0E80               	movlw	128
  7027   000B28  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7028   000B2A  0E7F               	movlw	127
  7029   000B2C  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7030   000B2E                     i2l2687:
  7031   000B2E  5038               	movf	___fldiv@sign^0,w,c
  7032   000B30  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7033   000B32  C028  F028         	movff	___fldiv@b,?___fldiv
  7034   000B36  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7035   000B3A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7036   000B3E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7037   000B42  EFE6  F006         	goto	i2l1034
  7038   000B46                     i2l2693:
  7039   000B46  503F               	movf	___fldiv@bexp^0,w,c
  7040   000B48  A4D8               	btfss	status,2,c
  7041   000B4A  EFA9  F005         	goto	i2u197_41
  7042   000B4E  EFAB  F005         	goto	i2u197_40
  7043   000B52                     i2u197_41:
  7044   000B52  EFB5  F005         	goto	i2l2701
  7045   000B56                     i2u197_40:
  7046   000B56  0E00               	movlw	0
  7047   000B58  6E28               	movwf	?___fldiv^0,c
  7048   000B5A  0E00               	movlw	0
  7049   000B5C  6E29               	movwf	(?___fldiv+1)^0,c
  7050   000B5E  0E00               	movlw	0
  7051   000B60  6E2A               	movwf	(?___fldiv+2)^0,c
  7052   000B62  0E00               	movlw	0
  7053   000B64  6E2B               	movwf	(?___fldiv+3)^0,c
  7054   000B66  EFE6  F006         	goto	i2l1034
  7055   000B6A                     i2l2701:
  7056   000B6A  5040               	movf	___fldiv@aexp^0,w,c
  7057   000B6C  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7058   000B70  6A31               	clrf	(??___fldiv+1)^0,c
  7059   000B72  5E30               	subwf	??___fldiv^0,f,c
  7060   000B74  0E00               	movlw	0
  7061   000B76  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7062   000B78  0E7F               	movlw	127
  7063   000B7A  2430               	addwf	??___fldiv^0,w,c
  7064   000B7C  6E39               	movwf	___fldiv@new_exp^0,c
  7065   000B7E  0E00               	movlw	0
  7066   000B80  2031               	addwfc	(??___fldiv+1)^0,w,c
  7067   000B82  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7068   000B84  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7069   000B88  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7070   000B8C  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7071   000B90  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7072   000B94  0E00               	movlw	0
  7073   000B96  6E28               	movwf	___fldiv@b^0,c
  7074   000B98  0E00               	movlw	0
  7075   000B9A  6E29               	movwf	(___fldiv@b+1)^0,c
  7076   000B9C  0E00               	movlw	0
  7077   000B9E  6E2A               	movwf	(___fldiv@b+2)^0,c
  7078   000BA0  0E00               	movlw	0
  7079   000BA2  6E2B               	movwf	(___fldiv@b+3)^0,c
  7080   000BA4  0E00               	movlw	0
  7081   000BA6  6E3B               	movwf	___fldiv@grs^0,c
  7082   000BA8  0E00               	movlw	0
  7083   000BAA  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7084   000BAC  0E00               	movlw	0
  7085   000BAE  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7086   000BB0  0E00               	movlw	0
  7087   000BB2  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7088   000BB4  0E00               	movlw	0
  7089   000BB6  6E40               	movwf	___fldiv@aexp^0,c
  7090   000BB8  EF16  F006         	goto	i2l1036
  7091   000BBC                     i2l2711:
  7092   000BBC  5040               	movf	___fldiv@aexp^0,w,c
  7093   000BBE  B4D8               	btfsc	status,2,c
  7094   000BC0  EFE4  F005         	goto	i2u198_41
  7095   000BC4  EFE6  F005         	goto	i2u198_40
  7096   000BC8                     i2u198_41:
  7097   000BC8  EFFD  F005         	goto	i2l2719
  7098   000BCC                     i2u198_40:
  7099   000BCC  90D8               	bcf	status,0,c
  7100   000BCE  3634               	rlcf	___fldiv@rem^0,f,c
  7101   000BD0  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7102   000BD2  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7103   000BD4  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7104   000BD6  90D8               	bcf	status,0,c
  7105   000BD8  3628               	rlcf	___fldiv@b^0,f,c
  7106   000BDA  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7107   000BDC  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7108   000BDE  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7109   000BE0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7110   000BE2  EFF5  F005         	goto	i2u199_41
  7111   000BE6  EFF7  F005         	goto	i2u199_40
  7112   000BEA                     i2u199_41:
  7113   000BEA  EFF8  F005         	goto	i2l1039
  7114   000BEE                     i2u199_40:
  7115   000BEE  8028               	bsf	___fldiv@b^0,0,c
  7116   000BF0                     i2l1039:
  7117   000BF0  90D8               	bcf	status,0,c
  7118   000BF2  363B               	rlcf	___fldiv@grs^0,f,c
  7119   000BF4  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7120   000BF6  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7121   000BF8  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7122   000BFA                     i2l2719:
  7123   000BFA  502C               	movf	___fldiv@a^0,w,c
  7124   000BFC  5C34               	subwf	___fldiv@rem^0,w,c
  7125   000BFE  502D               	movf	(___fldiv@a+1)^0,w,c
  7126   000C00  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7127   000C02  502E               	movf	(___fldiv@a+2)^0,w,c
  7128   000C04  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7129   000C06  502F               	movf	(___fldiv@a+3)^0,w,c
  7130   000C08  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7131   000C0A  A0D8               	btfss	status,0,c
  7132   000C0C  EF0A  F006         	goto	i2u200_41
  7133   000C10  EF0C  F006         	goto	i2u200_40
  7134   000C14                     i2u200_41:
  7135   000C14  EF15  F006         	goto	i2l2725
  7136   000C18                     i2u200_40:
  7137   000C18  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7138   000C1A  502C               	movf	___fldiv@a^0,w,c
  7139   000C1C  5E34               	subwf	___fldiv@rem^0,f,c
  7140   000C1E  502D               	movf	(___fldiv@a+1)^0,w,c
  7141   000C20  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7142   000C22  502E               	movf	(___fldiv@a+2)^0,w,c
  7143   000C24  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7144   000C26  502F               	movf	(___fldiv@a+3)^0,w,c
  7145   000C28  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7146   000C2A                     i2l2725:
  7147   000C2A  2A40               	incf	___fldiv@aexp^0,f,c
  7148   000C2C                     i2l1036:
  7149   000C2C  0E19               	movlw	25
  7150   000C2E  6440               	cpfsgt	___fldiv@aexp^0,c
  7151   000C30  EF1C  F006         	goto	i2u201_41
  7152   000C34  EF1E  F006         	goto	i2u201_40
  7153   000C38                     i2u201_41:
  7154   000C38  EFDE  F005         	goto	i2l2711
  7155   000C3C                     i2u201_40:
  7156   000C3C  5034               	movf	___fldiv@rem^0,w,c
  7157   000C3E  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7158   000C40  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7159   000C42  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7160   000C44  B4D8               	btfsc	status,2,c
  7161   000C46  EF27  F006         	goto	i2u202_41
  7162   000C4A  EF29  F006         	goto	i2u202_40
  7163   000C4E                     i2u202_41:
  7164   000C4E  EF41  F006         	goto	i2l2737
  7165   000C52                     i2u202_40:
  7166   000C52  803B               	bsf	___fldiv@grs^0,0,c
  7167   000C54  EF41  F006         	goto	i2l2737
  7168   000C58                     i2l2731:
  7169   000C58  90D8               	bcf	status,0,c
  7170   000C5A  3628               	rlcf	___fldiv@b^0,f,c
  7171   000C5C  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7172   000C5E  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7173   000C60  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7174   000C62  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7175   000C64  EF36  F006         	goto	i2u203_41
  7176   000C68  EF38  F006         	goto	i2u203_40
  7177   000C6C                     i2u203_41:
  7178   000C6C  EF39  F006         	goto	i2l1045
  7179   000C70                     i2u203_40:
  7180   000C70  8028               	bsf	___fldiv@b^0,0,c
  7181   000C72                     i2l1045:
  7182   000C72  90D8               	bcf	status,0,c
  7183   000C74  363B               	rlcf	___fldiv@grs^0,f,c
  7184   000C76  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7185   000C78  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7186   000C7A  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7187   000C7C  0639               	decf	___fldiv@new_exp^0,f,c
  7188   000C7E  A0D8               	btfss	status,0,c
  7189   000C80  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7190   000C82                     i2l2737:
  7191   000C82  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7192   000C84  EF46  F006         	goto	i2u204_41
  7193   000C88  EF48  F006         	goto	i2u204_40
  7194   000C8C                     i2u204_41:
  7195   000C8C  EF2C  F006         	goto	i2l2731
  7196   000C90                     i2u204_40:
  7197   000C90  0E00               	movlw	0
  7198   000C92  6E40               	movwf	___fldiv@aexp^0,c
  7199   000C94  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7200   000C96  EF4F  F006         	goto	i2u205_41
  7201   000C9A  EF51  F006         	goto	i2u205_40
  7202   000C9E                     i2u205_41:
  7203   000C9E  EF75  F006         	goto	i2l1047
  7204   000CA2                     i2u205_40:
  7205   000CA2  0EFF               	movlw	255
  7206   000CA4  143B               	andwf	___fldiv@grs^0,w,c
  7207   000CA6  6E30               	movwf	??___fldiv^0,c
  7208   000CA8  0EFF               	movlw	255
  7209   000CAA  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7210   000CAC  6E31               	movwf	(??___fldiv+1)^0,c
  7211   000CAE  0EFF               	movlw	255
  7212   000CB0  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7213   000CB2  6E32               	movwf	(??___fldiv+2)^0,c
  7214   000CB4  0E7F               	movlw	127
  7215   000CB6  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7216   000CB8  6E33               	movwf	(??___fldiv+3)^0,c
  7217   000CBA  5030               	movf	??___fldiv^0,w,c
  7218   000CBC  1031               	iorwf	(??___fldiv+1)^0,w,c
  7219   000CBE  1032               	iorwf	(??___fldiv+2)^0,w,c
  7220   000CC0  1033               	iorwf	(??___fldiv+3)^0,w,c
  7221   000CC2  B4D8               	btfsc	status,2,c
  7222   000CC4  EF66  F006         	goto	i2u206_41
  7223   000CC8  EF68  F006         	goto	i2u206_40
  7224   000CCC                     i2u206_41:
  7225   000CCC  EF6C  F006         	goto	i2l1048
  7226   000CD0                     i2u206_40:
  7227   000CD0                     i2l2745:
  7228   000CD0  0E01               	movlw	1
  7229   000CD2  6E40               	movwf	___fldiv@aexp^0,c
  7230   000CD4  EF75  F006         	goto	i2l1047
  7231   000CD8                     i2l1048:
  7232   000CD8  A028               	btfss	___fldiv@b^0,0,c
  7233   000CDA  EF71  F006         	goto	i2u207_41
  7234   000CDE  EF73  F006         	goto	i2u207_40
  7235   000CE2                     i2u207_41:
  7236   000CE2  EF75  F006         	goto	i2l1047
  7237   000CE6                     i2u207_40:
  7238   000CE6  EF68  F006         	goto	i2l2745
  7239   000CEA                     i2l1047:
  7240   000CEA  5040               	movf	___fldiv@aexp^0,w,c
  7241   000CEC  B4D8               	btfsc	status,2,c
  7242   000CEE  EF7B  F006         	goto	i2u208_41
  7243   000CF2  EF7D  F006         	goto	i2u208_40
  7244   000CF6                     i2u208_41:
  7245   000CF6  EFA1  F006         	goto	i2l2757
  7246   000CFA                     i2u208_40:
  7247   000CFA  0E01               	movlw	1
  7248   000CFC  2628               	addwf	___fldiv@b^0,f,c
  7249   000CFE  0E00               	movlw	0
  7250   000D00  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7251   000D02  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7252   000D04  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7253   000D06  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7254   000D08  EF88  F006         	goto	i2u209_41
  7255   000D0C  EF8A  F006         	goto	i2u209_40
  7256   000D10                     i2u209_41:
  7257   000D10  EFA1  F006         	goto	i2l2757
  7258   000D14                     i2u209_40:
  7259   000D14  C028  F030         	movff	___fldiv@b,??___fldiv
  7260   000D18  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7261   000D1C  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7262   000D20  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7263   000D24  3433               	rlcf	(??___fldiv+3)^0,w,c
  7264   000D26  3233               	rrcf	(??___fldiv+3)^0,f,c
  7265   000D28  3232               	rrcf	(??___fldiv+2)^0,f,c
  7266   000D2A  3231               	rrcf	(??___fldiv+1)^0,f,c
  7267   000D2C  3230               	rrcf	??___fldiv^0,f,c
  7268   000D2E  C030  F028         	movff	??___fldiv,___fldiv@b
  7269   000D32  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7270   000D36  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7271   000D3A  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7272   000D3E  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7273   000D40  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7274   000D42                     i2l2757:
  7275   000D42  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7276   000D44  EFAC  F006         	goto	i2u210_41
  7277   000D48  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7278   000D4A  E108               	bnz	i2u210_40
  7279   000D4C  2839               	incf	___fldiv@new_exp^0,w,c
  7280   000D4E  A0D8               	btfss	status,0,c
  7281   000D50  EFAC  F006         	goto	i2u210_41
  7282   000D54  EFAE  F006         	goto	i2u210_40
  7283   000D58                     i2u210_41:
  7284   000D58  EFB9  F006         	goto	i2l2761
  7285   000D5C                     i2u210_40:
  7286   000D5C  0E00               	movlw	0
  7287   000D5E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7288   000D60  6839               	setf	___fldiv@new_exp^0,c
  7289   000D62  0E00               	movlw	0
  7290   000D64  6E28               	movwf	___fldiv@b^0,c
  7291   000D66  0E00               	movlw	0
  7292   000D68  6E29               	movwf	(___fldiv@b+1)^0,c
  7293   000D6A  0E00               	movlw	0
  7294   000D6C  6E2A               	movwf	(___fldiv@b+2)^0,c
  7295   000D6E  0E00               	movlw	0
  7296   000D70  6E2B               	movwf	(___fldiv@b+3)^0,c
  7297   000D72                     i2l2761:
  7298   000D72  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7299   000D74  EFC6  F006         	goto	i2u211_40
  7300   000D78  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7301   000D7A  E106               	bnz	i2u211_41
  7302   000D7C  0439               	decf	___fldiv@new_exp^0,w,c
  7303   000D7E  B0D8               	btfsc	status,0,c
  7304   000D80  EFC4  F006         	goto	i2u211_41
  7305   000D84  EFC6  F006         	goto	i2u211_40
  7306   000D88                     i2u211_41:
  7307   000D88  EFD4  F006         	goto	i2l2765
  7308   000D8C                     i2u211_40:
  7309   000D8C  0E00               	movlw	0
  7310   000D8E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7311   000D90  0E00               	movlw	0
  7312   000D92  6E39               	movwf	___fldiv@new_exp^0,c
  7313   000D94  0E00               	movlw	0
  7314   000D96  6E28               	movwf	___fldiv@b^0,c
  7315   000D98  0E00               	movlw	0
  7316   000D9A  6E29               	movwf	(___fldiv@b+1)^0,c
  7317   000D9C  0E00               	movlw	0
  7318   000D9E  6E2A               	movwf	(___fldiv@b+2)^0,c
  7319   000DA0  0E00               	movlw	0
  7320   000DA2  6E2B               	movwf	(___fldiv@b+3)^0,c
  7321   000DA4  0E00               	movlw	0
  7322   000DA6  6E38               	movwf	___fldiv@sign^0,c
  7323   000DA8                     i2l2765:
  7324   000DA8  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7325   000DAC  A03F               	btfss	___fldiv@bexp^0,0,c
  7326   000DAE  EFDB  F006         	goto	i2u212_41
  7327   000DB2  EFDD  F006         	goto	i2u212_40
  7328   000DB6                     i2u212_41:
  7329   000DB6  EFE0  F006         	goto	i2l2771
  7330   000DBA                     i2u212_40:
  7331   000DBA  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7332   000DBC  EFE1  F006         	goto	i2l2773
  7333   000DC0                     i2l2771:
  7334   000DC0  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7335   000DC2                     i2l2773:
  7336   000DC2  90D8               	bcf	status,0,c
  7337   000DC4  303F               	rrcf	___fldiv@bexp^0,w,c
  7338   000DC6  6E2B               	movwf	(___fldiv@b+3)^0,c
  7339   000DC8  EF97  F005         	goto	i2l2687
  7340   000DCC                     i2l1034:
  7341   000DCC  0012               	return		;funcret
  7342   000DCE                     __end_of___fldiv:
  7343                           	callstack 0
  7344                           
  7345 ;; *************** function _ADC_maq *****************
  7346 ;; Defined at:
  7347 ;;		line 32 in file "ADC.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;		None
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7361 ;;      Params:         0       0       0       0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0
  7363 ;;      Temps:          2       0       0       0       0       0       0
  7364 ;;      Totals:         2       0       0       0       0       0       0
  7365 ;;Total ram usage:        2 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 1
  7368 ;; This function calls:
  7369 ;;		_select_channel
  7370 ;;		i2_start_AD_conversion
  7371 ;; This function is called by:
  7372 ;;		_f_interrupt_high
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text46
  7377   0023C4                     __ptext46:
  7378                           	callstack 0
  7379   0023C4                     _ADC_maq:
  7380                           	callstack 24
  7381   0023C4                     
  7382                           ;ADC.c: 34:     static uint8_t estado = 0;;ADC.c: 36:     switch (estado)
  7383   0023C4  EFFE  F011         	goto	i2l3421
  7384   0023C8                     i2l27:
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;ADC.c: 39:             AD_data[0] = (ADRESH);
  7388   0023C8  CFC4 F0C9          	movff	4036,_AD_data	;volatile
  7389   0023CC  6BCA               	clrf	(_AD_data+1)& (0+255),b
  7390   0023CE                     
  7391                           ; BSR set to: 0
  7392                           ;ADC.c: 40:             select_channel(1);
  7393   0023CE  0E01               	movlw	1
  7394   0023D0  EC0C  F014         	call	_select_channel
  7395   0023D4                     
  7396                           ;ADC.c: 41:             start_AD_conversion();
  7397   0023D4  EC2B  F014         	call	i2_start_AD_conversion	;wreg free
  7398   0023D8                     
  7399                           ;ADC.c: 42:             estado = 1;
  7400   0023D8  0E01               	movlw	1
  7401   0023DA  0100               	movlb	0	; () banked
  7402   0023DC  6FDF               	movwf	ADC_maq@estado& (0+255),b
  7403                           
  7404                           ;ADC.c: 43:             break;
  7405   0023DE  EF14  F012         	goto	i2l30
  7406   0023E2                     i2l29:
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;ADC.c: 46:             AD_data[1] = ADRESH;
  7410   0023E2  CFC4 F0CB          	movff	4036,_AD_data+2	;volatile
  7411   0023E6  6BCC               	clrf	(_AD_data+3)& (0+255),b
  7412   0023E8                     
  7413                           ; BSR set to: 0
  7414                           ;ADC.c: 48:             select_channel(0);
  7415   0023E8  0E00               	movlw	0
  7416   0023EA  EC0C  F014         	call	_select_channel
  7417   0023EE                     
  7418                           ;ADC.c: 49:             start_AD_conversion();
  7419   0023EE  EC2B  F014         	call	i2_start_AD_conversion	;wreg free
  7420   0023F2                     
  7421                           ;ADC.c: 50:             estado = 0;
  7422   0023F2  0E00               	movlw	0
  7423   0023F4  0100               	movlb	0	; () banked
  7424   0023F6  6FDF               	movwf	ADC_maq@estado& (0+255),b
  7425                           
  7426                           ;ADC.c: 51:             break;
  7427   0023F8  EF14  F012         	goto	i2l30
  7428   0023FC                     i2l3421:
  7429   0023FC  0100               	movlb	0	; () banked
  7430   0023FE  51DF               	movf	ADC_maq@estado& (0+255),w,b
  7431   002400  6E02               	movwf	??_ADC_maq^0,c
  7432   002402  6A03               	clrf	(??_ADC_maq+1)^0,c
  7433                           
  7434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7435                           ; Switch size 1, requested type "simple"
  7436                           ; Number of cases is 1, Range of values is 0 to 0
  7437                           ; switch strategies available:
  7438                           ; Name         Instructions Cycles
  7439                           ; simple_byte            4     3 (average)
  7440                           ;	Chosen strategy is simple_byte
  7441   002404  5003               	movf	(??_ADC_maq+1)^0,w,c
  7442   002406  0A00               	xorlw	0	; case 0
  7443   002408  B4D8               	btfsc	status,2,c
  7444   00240A  EF09  F012         	goto	i2l3779
  7445   00240E  EF14  F012         	goto	i2l30
  7446   002412                     i2l3779:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ; Switch size 1, requested type "simple"
  7450                           ; Number of cases is 2, Range of values is 0 to 1
  7451                           ; switch strategies available:
  7452                           ; Name         Instructions Cycles
  7453                           ; simple_byte            7     4 (average)
  7454                           ;	Chosen strategy is simple_byte
  7455   002412  5002               	movf	??_ADC_maq^0,w,c
  7456   002414  0A00               	xorlw	0	; case 0
  7457   002416  B4D8               	btfsc	status,2,c
  7458   002418  EFE4  F011         	goto	i2l27
  7459   00241C  0A01               	xorlw	1	; case 1
  7460   00241E  B4D8               	btfsc	status,2,c
  7461   002420  EFF1  F011         	goto	i2l29
  7462   002424  EF14  F012         	goto	i2l30
  7463   002428                     i2l30:
  7464                           
  7465                           ; BSR set to: 0
  7466   002428  0012               	return		;funcret
  7467   00242A                     __end_of_ADC_maq:
  7468                           	callstack 0
  7469                           
  7470 ;; *************** function i2_start_AD_conversion *****************
  7471 ;; Defined at:
  7472 ;;		line 19 in file "ADC.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		None
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7486 ;;      Params:         0       0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_ADC_maq
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text47
  7500   002856                     __ptext47:
  7501                           	callstack 0
  7502   002856                     i2_start_AD_conversion:
  7503                           	callstack 24
  7504   002856                     
  7505                           ;ADC.c: 21:     GO = 1;
  7506   002856  82C2               	bsf	4034,1,c	;volatile
  7507   002858  0012               	return		;funcret
  7508   00285A                     __end_ofi2_start_AD_conversion:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function _select_channel *****************
  7512 ;; Defined at:
  7513 ;;		line 24 in file "ADC.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  channel         1    wreg     unsigned char 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  channel         1    0[COMRAM] unsigned char 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7527 ;;      Params:         0       0       0       0       0       0       0
  7528 ;;      Locals:         1       0       0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0
  7530 ;;      Totals:         1       0       0       0       0       0       0
  7531 ;;Total ram usage:        1 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_ADC_maq
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text48
  7541   002818                     __ptext48:
  7542                           	callstack 0
  7543   002818                     _select_channel:
  7544                           	callstack 24
  7545                           
  7546                           ;incstack = 0
  7547                           ;select_channel@channel stored from wreg
  7548   002818  6E01               	movwf	select_channel@channel^0,c
  7549   00281A                     
  7550                           ;ADC.c: 24: void select_channel(uint8_t channel);ADC.c: 25: {;ADC.c: 29:     ADCON0 = 0b
      +                          00000001 | (channel << 2);
  7551   00281A  4401               	rlncf	select_channel@channel^0,w,c
  7552   00281C  46E8               	rlncf	wreg,f,c
  7553   00281E  0BFC               	andlw	252
  7554   002820  0901               	iorlw	1
  7555   002822  6EC2               	movwf	194,c	;volatile
  7556   002824  0012               	return		;funcret
  7557   002826                     __end_of_select_channel:
  7558                           	callstack 0
  7559                           
  7560                           	psect	rparam
  7561   000000                     
  7562                           	psect	temp
  7563   00007F                     btemp:
  7564                           	callstack 0
  7565   00007F                     	ds	1
  7566   000000                     int$flags	set	btemp
  7567   000000                     wtemp8	set	btemp+1
  7568   000000                     ttemp5	set	btemp+1
  7569   000000                     ttemp6	set	btemp+4
  7570   000000                     ttemp7	set	btemp+8
  7571                           
  7572                           	psect	idloc
  7573                           
  7574                           ;Config register IDLOC0 @ 0x200000
  7575                           ;	unspecified, using default values
  7576   200000                     	org	2097152
  7577   200000  FF                 	db	255
  7578                           
  7579                           ;Config register IDLOC1 @ 0x200001
  7580                           ;	unspecified, using default values
  7581   200001                     	org	2097153
  7582   200001  FF                 	db	255
  7583                           
  7584                           ;Config register IDLOC2 @ 0x200002
  7585                           ;	unspecified, using default values
  7586   200002                     	org	2097154
  7587   200002  FF                 	db	255
  7588                           
  7589                           ;Config register IDLOC3 @ 0x200003
  7590                           ;	unspecified, using default values
  7591   200003                     	org	2097155
  7592   200003  FF                 	db	255
  7593                           
  7594                           ;Config register IDLOC4 @ 0x200004
  7595                           ;	unspecified, using default values
  7596   200004                     	org	2097156
  7597   200004  FF                 	db	255
  7598                           
  7599                           ;Config register IDLOC5 @ 0x200005
  7600                           ;	unspecified, using default values
  7601   200005                     	org	2097157
  7602   200005  FF                 	db	255
  7603                           
  7604                           ;Config register IDLOC6 @ 0x200006
  7605                           ;	unspecified, using default values
  7606   200006                     	org	2097158
  7607   200006  FF                 	db	255
  7608                           
  7609                           ;Config register IDLOC7 @ 0x200007
  7610                           ;	unspecified, using default values
  7611   200007                     	org	2097159
  7612   200007  FF                 	db	255
  7613                           
  7614                           	psect	config
  7615                           
  7616                           ; Padding undefined space
  7617   300000                     	org	3145728
  7618   300000  FF                 	db	255
  7619                           
  7620                           ;Config register CONFIG1H @ 0x300001
  7621                           ;	Oscillator Selection bits
  7622                           ;	OSC = HS, HS oscillator
  7623                           ;	Fail-Safe Clock Monitor Enable bit
  7624                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7625                           ;	Internal/External Oscillator Switchover bit
  7626                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7627   300001                     	org	3145729
  7628   300001  02                 	db	2
  7629                           
  7630                           ;Config register CONFIG2L @ 0x300002
  7631                           ;	Power-up Timer Enable bit
  7632                           ;	PWRT = OFF, PWRT disabled
  7633                           ;	Brown-out Reset Enable bits
  7634                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7635                           ;	Brown Out Reset Voltage bits
  7636                           ;	BORV = 3, Minimum setting
  7637   300002                     	org	3145730
  7638   300002  1F                 	db	31
  7639                           
  7640                           ;Config register CONFIG2H @ 0x300003
  7641                           ;	Watchdog Timer Enable bit
  7642                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7643                           ;	Watchdog Timer Postscale Select bits
  7644                           ;	WDTPS = 32768, 1:32768
  7645   300003                     	org	3145731
  7646   300003  1E                 	db	30
  7647                           
  7648                           ; Padding undefined space
  7649   300004                     	org	3145732
  7650   300004  FF                 	db	255
  7651                           
  7652                           ;Config register CONFIG3H @ 0x300005
  7653                           ;	CCP2 MUX bit
  7654                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7655                           ;	PORTB A/D Enable bit
  7656                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7657                           ;	Low-Power Timer1 Oscillator Enable bit
  7658                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7659                           ;	MCLR Pin Enable bit
  7660                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7661   300005                     	org	3145733
  7662   300005  83                 	db	131
  7663                           
  7664                           ;Config register CONFIG4L @ 0x300006
  7665                           ;	Stack Full/Underflow Reset Enable bit
  7666                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7667                           ;	Single-Supply ICSP Enable bit
  7668                           ;	LVP = OFF, Single-Supply ICSP disabled
  7669                           ;	Extended Instruction Set Enable bit
  7670                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7671                           ;	Background Debugger Enable bit
  7672                           ;	DEBUG = 0x1, unprogrammed default
  7673   300006                     	org	3145734
  7674   300006  81                 	db	129
  7675                           
  7676                           ; Padding undefined space
  7677   300007                     	org	3145735
  7678   300007  FF                 	db	255
  7679                           
  7680                           ;Config register CONFIG5L @ 0x300008
  7681                           ;	Code Protection bit
  7682                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7683                           ;	Code Protection bit
  7684                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7685                           ;	Code Protection bit
  7686                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7687                           ;	Code Protection bit
  7688                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7689   300008                     	org	3145736
  7690   300008  0F                 	db	15
  7691                           
  7692                           ;Config register CONFIG5H @ 0x300009
  7693                           ;	Boot Block Code Protection bit
  7694                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7695                           ;	Data EEPROM Code Protection bit
  7696                           ;	CPD = OFF, Data EEPROM not code-protected
  7697   300009                     	org	3145737
  7698   300009  C0                 	db	192
  7699                           
  7700                           ;Config register CONFIG6L @ 0x30000A
  7701                           ;	Write Protection bit
  7702                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7703                           ;	Write Protection bit
  7704                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7705                           ;	Write Protection bit
  7706                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7707                           ;	Write Protection bit
  7708                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7709   30000A                     	org	3145738
  7710   30000A  0F                 	db	15
  7711                           
  7712                           ;Config register CONFIG6H @ 0x30000B
  7713                           ;	Configuration Register Write Protection bit
  7714                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7715                           ;	Boot Block Write Protection bit
  7716                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7717                           ;	Data EEPROM Write Protection bit
  7718                           ;	WRTD = OFF, Data EEPROM not write-protected
  7719   30000B                     	org	3145739
  7720   30000B  E0                 	db	224
  7721                           
  7722                           ;Config register CONFIG7L @ 0x30000C
  7723                           ;	Table Read Protection bit
  7724                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7725                           ;	Table Read Protection bit
  7726                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7727                           ;	Table Read Protection bit
  7728                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7729                           ;	Table Read Protection bit
  7730                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7731   30000C                     	org	3145740
  7732   30000C  0F                 	db	15
  7733                           
  7734                           ;Config register CONFIG7H @ 0x30000D
  7735                           ;	Boot Block Table Read Protection bit
  7736                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7737   30000D                     	org	3145741
  7738   30000D  40                 	db	64
  7739                           tosu	equ	0xFFF
  7740                           tosh	equ	0xFFE
  7741                           tosl	equ	0xFFD
  7742                           stkptr	equ	0xFFC
  7743                           pclatu	equ	0xFFB
  7744                           pclath	equ	0xFFA
  7745                           pcl	equ	0xFF9
  7746                           tblptru	equ	0xFF8
  7747                           tblptrh	equ	0xFF7
  7748                           tblptrl	equ	0xFF6
  7749                           tablat	equ	0xFF5
  7750                           prodh	equ	0xFF4
  7751                           prodl	equ	0xFF3
  7752                           indf0	equ	0xFEF
  7753                           postinc0	equ	0xFEE
  7754                           postdec0	equ	0xFED
  7755                           preinc0	equ	0xFEC
  7756                           plusw0	equ	0xFEB
  7757                           fsr0h	equ	0xFEA
  7758                           fsr0l	equ	0xFE9
  7759                           wreg	equ	0xFE8
  7760                           indf1	equ	0xFE7
  7761                           postinc1	equ	0xFE6
  7762                           postdec1	equ	0xFE5
  7763                           preinc1	equ	0xFE4
  7764                           plusw1	equ	0xFE3
  7765                           fsr1h	equ	0xFE2
  7766                           fsr1l	equ	0xFE1
  7767                           bsr	equ	0xFE0
  7768                           indf2	equ	0xFDF
  7769                           postinc2	equ	0xFDE
  7770                           postdec2	equ	0xFDD
  7771                           preinc2	equ	0xFDC
  7772                           plusw2	equ	0xFDB
  7773                           fsr2h	equ	0xFDA
  7774                           fsr2l	equ	0xFD9
  7775                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        66
    BSS         81
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     126
    BANK0           128     10     120
    BANK1           256      3      35
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S882$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S829$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S829$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 10
		 -> buffer(BANK0[10]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _f_interrupt_high in COMRAM

    _f_timers->_read_keyb
    _show_to_LCD->_lcd_dat
    _show_to_LCD->i2_lcd_cmd
    _read_keyboard->_ler_teclado
    _read_keyb->_f_int2
    _f_int2->_sprintf
    _f_int0->_lcd_str
    _Read_AD->_sprintf
    i2_lcd_cmd->i2_lcd_wr
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_str->_lcd_dat
    _lcd_dat->i2_lcd_wr
    ___lwdiv->___lwmod
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _ADC_maq->_select_channel

Critical Paths under _main in BANK0

    None.

Critical Paths under _f_interrupt_high in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_lcd_init
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr

Critical Paths under _f_interrupt_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _f_interrupt_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _f_interrupt_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _f_interrupt_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _f_interrupt_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      62
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      62
                            _AD_init
                 _disable_interrupts
                  _enable_interrupts
                     _interrupt_init
                           _lcd_init
                           _setup_io
                _start_AD_conversion
 ---------------------------------------------------------------------------------
 (2) _start_AD_conversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setup_io                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0      62
                                              2 BANK1      1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0      62
                                              1 BANK1      1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_interrupts                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _f_interrupt_high                                    10    10      0   25960
                                              0 BANK0     10    10      0
                            _ADC_maq
                           _f_timers
 ---------------------------------------------------------------------------------
 (6) _f_timers                                             0     0      0   25938
                            _Read_AD
                        _mux_display
                          _read_keyb
                      _read_keyboard
                        _show_to_LCD
 ---------------------------------------------------------------------------------
 (7) _show_to_LCD                                          0     0      0      88
                            _lcd_dat
                          i2_lcd_cmd
 ---------------------------------------------------------------------------------
 (7) _read_keyboard                                        4     4      0     508
                                              8 COMRAM     4     4      0
                        _ler_teclado
 ---------------------------------------------------------------------------------
 (8) _ler_teclado                                          8     8      0     440
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (7) _read_keyb                                            4     4      0   12725
                                            113 COMRAM     4     4      0
                             _f_int0
                             _f_int1
                             _f_int2
 ---------------------------------------------------------------------------------
 (8) _f_int2                                               6     6      0   11842
                                            107 COMRAM     6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                              _f_pwm
                            _lcd_str
                            _sprintf
                          i2_lcd_cmd
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _f_int1                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _f_int0                                               0     0      0     678
                              _f_pwm
                            _lcd_str
                          i2_lcd_cmd
 ---------------------------------------------------------------------------------
 (7) _mux_display                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Read_AD                                              6     6      0   12617
                                            107 COMRAM     6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                              _f_pwm
                            _lcd_str
                            _sprintf
                          i2_lcd_cmd
 ---------------------------------------------------------------------------------
 (8) i2_lcd_cmd                                            1     1      0      44
                                              1 COMRAM     1     1      0
                           i2_lcd_wr
 ---------------------------------------------------------------------------------
 (9) _sprintf                                             21    15      6    6247
                                             88 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (10) _vfprintf                                            8     2      6    5744
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) _vfpfcnvrt                                          23    17      6    5391
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (12) _dtoa                                               35    25     10    3953
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (13) _pad                                                11     5      6    2303
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (14) _fputs                                               7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (12) _fputc                                               9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (13) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (13) _abs                                                 4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (13) ___aomod                                            18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (13) ___aodiv                                            26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (9) _lcd_str                                              5     3      2     362
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (8) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                           i2_lcd_wr
 ---------------------------------------------------------------------------------
 (9) i2_lcd_wr                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _f_pwm                                                4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fltol                                             10     6      4     381
                                             64 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fldiv                                             25    17      8    1551
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) _ADC_maq                                              2     2      0      22
                                              1 COMRAM     2     2      0
                     _select_channel
              i2_start_AD_conversion
 ---------------------------------------------------------------------------------
 (7) i2_start_AD_conversion                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _select_channel                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup
     _AD_init
     _disable_interrupts
     _enable_interrupts
     _interrupt_init
     _lcd_init
       _lcd_cmd
         _lcd_wr
     _setup_io
     _start_AD_conversion

 _f_interrupt_high (ROOT)
   _ADC_maq
     _select_channel
     i2_start_AD_conversion
   _f_timers
     _Read_AD
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___fltol
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
       ___xxtofl
       _f_pwm
       _lcd_str
         _lcd_dat
           i2_lcd_wr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc
       i2_lcd_cmd
         i2_lcd_wr
     _mux_display
     _read_keyb
       _f_int0
         _f_pwm
         _lcd_str
         i2_lcd_cmd
       _f_int1
       _f_int2
         ___fldiv
         ___flmul
         ___fltol
         ___wmul
         ___xxtofl
         _f_pwm
         _lcd_str
         _sprintf
         i2_lcd_cmd
     _read_keyboard
       _ler_teclado
     _show_to_LCD
       _lcd_dat
       i2_lcd_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3      23       7       13.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      78       5       93.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7E       1      100.0%
BITBIGSFRlhhlhh     1E      0       0      23        0.0%
BITBIGSFRhhhlhl     18      0       0      17        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlhhlhl      6      0       0      24        0.0%
BITBIGSFRlhhll       5      0       0      25        0.0%
BITBIGSFRhhl         5      0       0      20        0.0%
BITBIGSFRllh         4      0       0      27        0.0%
BITBIGSFRhhhllh      4      0       0      18        0.0%
BITBIGSFRhhhlll      4      0       0      19        0.0%
BITBIGSFRlllh        1      0       0      28        0.0%
BITBIGSFRlhhh        1      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      26        0.0%
BITBIGSFRhl          1      0       0      21        0.0%
BITBIGSFRllll        1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     119      30        0.0%
DATA                 0      0     119       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 30 09:01:42 2022

                 ___fldiv@aexp 0040                   ___fldiv@bexp 003F                              _i 007D  
                 ___fldiv@sign 0038                             l15 2816                             l18 2854  
                           _GO 007E11            ___wmul@multiplicand 0003               f_timers@counter0 00B9  
             f_timers@counter1 00B7               f_timers@counter2 00B5               f_timers@counter3 00B3  
       __end_of_interrupt_init 27FA                            l132 2544                            l221 2838  
                          l135 279A                            l224 27F8                            l218 2840  
                          l256 282E                            l361 285A                            l265 23C2  
                          l259 272C                            _GIE 007F97                            _PR2 000FCB  
                          _abs 2668                            _pad 21F6                            prod 000FF3  
                          wreg 000FE8                __end_of_ADC_maq 242A                   ___flmul@aexp 0020  
                 ___flmul@bexp 0021                   ___flmul@sign 001B                   ___flmul@temp 0026  
                 ___flmul@prod 0022                  ADC_maq@estado 00DF                __end_of_AD_init 2818  
                 ___fltol@exp1 004A                           ?_abs 0013                           l3611 2716  
                         l3621 280A                           l3605 282A                           l3613 2718  
                         l3615 2720                           l3607 270C                           l3631 235C  
                         l3623 2852                           l3625 283A                           l3617 2722  
                         l3609 270E                           l3641 2390                           l3633 2360  
                         l3619 272A                           l3651 23B0                           l3643 2398  
                         l3635 2372                           l3627 277A                           l3629 27E0  
                         l3653 23B6                           l3645 239E                           l3637 2374  
                         l3661 24F6                           ?_pad 0011                           l3655 23BC  
                         l3647 23A4                           l3639 237A                           l3671 2508  
                         l3663 24FA                           l3657 2830                           l3649 23AA  
                         l3681 2526                           l3673 250C                           l3665 24FE  
                         l3683 252E                           l3675 250E                           l3667 2502  
                         l3659 24F2                           l3691 27FA                           l3685 2534  
                         l3677 2510                           l3669 2504                           l3693 27FE  
                         l3687 2538                           l3679 2512                           l3689 253C  
                         _ADIE 007CEE                           _ADIF 007CF6                           STR_1 0606  
                         STR_2 0601                           STR_3 0601                           _LATA 000F89  
                         _LATB 000F8A                           _LATD 000F8C                           u3017 2368  
                         u3027 2382                           u3037 2392                           u3047 271A  
                         u3057 2724                           _IPEN 007E87                           _PEIE 007F96  
                         i2l21 2824                           i2l30 2428                           i2l18 2858  
                         i2l27 23C8                           i2l60 20A0                           i2l29 23E2  
                         i2l62 20BC                           i2l63 20D8                           i2l64 20F4  
                         i2l65 214C                           _TMR0 000FD6                           abs@a 0013  
                         _dbuf 0100                           _main 27FA                           _dtoa 0DCE  
                         _loop 285A                           _prec 00CF                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A          i2_start_AD_conversion 2856                           fsr2l 000FD9  
                         btemp 007F          f_int2@duty_normalized 00D1                           prodh 000FF4  
                         prodl 000FF3                           start 000E                ___fldiv@new_exp 0039  
                 ___param_bank 000000                __end_of_Read_AD 1BC4                  _pwm_ventoinha 0076  
                        ??_abs 0015                          ??_pad 0017                   ?_ler_teclado 0001  
                  Read_AD@data 006E                  ___fltol@sign1 0049                __end_of___aodiv 1A48  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 1D28  
              __end_of___fldiv 0DCE                          ?_loop 0001                __end_of___flmul 0A34  
              __end_of___fltol 1E2E                ?_interrupt_init 0001                          _T0CON 000FD5  
                        _T2CON 000FCA                          _LATA2 007C4A                          _LATA3 007C4B  
                        _LATA4 007C4C                          _LATA5 007C4D                __end_of___lwdiv 235C  
              __end_of___lwmod 24F2                          i2l211 1E92                          i2l212 1EB0  
                        i2l213 1ECE                          i2l215 1EF0                          i2l243 209A  
                        i2l404 26DA                          i2l413 18BE                          i2l262 27DE  
                        i2l271 22E6                          i2l407 2848                          i2l431 15CC  
                        i2l256 2850                          i2l432 15EE                          i2l418 1BC2  
                        i2l259 27BC                          i2l443 16C0                          i2l452 2778  
                        i2l444 16E2                          i2l437 1646                          i2l358 2706  
                        i2l438 1668                          i2l382 2752                          i2l449 1736  
                        i2l393 1262                          i2l379 21F4                          i2l395 110A  
                        i2l397 1156                          i2l566 1A46                          i2l398 1192  
                        i2l399 11CE                          i2l579 1D26                          i2l749 1E2C  
                        i2l950 235A                          i2l943 2352                          i2l960 24F0  
                        i2l953 24E8                   vfpfcnvrt@fmt 0041                          _PORTB 000F81  
                        _PORTD 000F83                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
              __end_of_lcd_dat 27E0                __end_of_lcd_cmd 272E                __end_of_lcd_str 22E8  
                        _dado1 007C                          _dado2 007B                          _dado3 007A  
                        _dado4 0079                          _f_pwm 26DC                          _flags 00D5  
                        _fputc 1F1C                          _fputs 25E2             _disable_interrupts 283A  
                        _setup 24F2                          pad@fp 0011                          _width 00CD  
                        _putch 285C                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                          tablat 000FF5                          ttemp5 0080  
                        ttemp6 0083                          ttemp7 0087                          status 000FD8  
                        wtemp8 0080                __end_of_sprintf 2594               __end_ofi2_lcd_wr 2852  
          ?_disable_interrupts 0001               _f_interrupt_high 0008                __initialization 242A  
                 __end_of_main 280A                   __end_of_dtoa 104C                   __end_of_loop 285C  
             ler_teclado@i_390 0003               ler_teclado@i_391 0005               ler_teclado@saida 0007  
                    ??_ADC_maq 0002              read_keyb@dado_RB3 0072              read_keyb@dado_RB4 0073  
            read_keyb@dado_RB5 0074                         ??_main 0123                         ??_dtoa 0026  
                       ??_loop 0120                  __activetblptr 000002           ??_disable_interrupts 0120  
                    ??_AD_init 0120                    i2lcd_wr@val 0001                         ?_f_pwm 0001  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
                       ?_fputc 0001                         ?_fputs 000A                         _ADRESH 000FC4  
                       _CCPR1L 000FBE                         ?_setup 0001                         ?_putch 0001  
                       _INT0IE 007F94                         _INT0IF 007F91                         _INT1IE 007F83  
                       _INT1IF 007F80                         _INT2IE 007F84                         _INT2IF 007F81  
                       i2l1110 1416                         i2l1121 13AE                         i2l1034 0DCC  
                       i2l1114 1352                         i2l1130 2592                         i2l1107 12BA  
                       i2l1036 0C2C                         i2l1045 0C72                         i2l1070 0A32  
                       i2l1047 0CEA                         i2l1039 0BF0                         i2l1048 0CD8  
                       i2l1208 1FE4                         i2l1216 2624                         i2l1152 2218  
                       i2l1073 08C4                         i2l1161 0E5A                         i2l3001 279E  
                       i2l1066 06CE                         i2l1083 09F4                         i2l1075 093C  
                       i2l1219 285C                         i2l1163 0E62                         i2l3011 27B2  
                       i2l3003 27A0                         i2l1076 092A                         i2l1156 226E  
                       i2l1164 0EA8                         i2l3013 27BA                         i2l3005 27A6  
                       i2l3101 163E                         i2l1182 15AE                         i2l1175 104A  
                       i2l3007 27A8                         i2l3031 26B0                         i2l3111 167E  
                       i2l2401 18C4                         i2l1193 269E                         i2l3009 27B0  
                       i2l3201 20C0                         i2l3033 26B6                         i2l3041 2842  
                       i2l3121 16B0                         i2l3113 168C                         i2l3105 1648  
                       i2l2411 1924                         i2l2403 18D2                         i2l3211 2108  
                       i2l3203 20D0                         i2l3035 26C2                         i2l3051 1774  
                       i2l3043 1738                         i2l3131 16C6                         i2l3123 16B4  
                       i2l3115 1690                         i2l3107 164C                         i2l1196 26A6  
                       i2l2421 196E                         i2l2413 1928                         i2l2405 18F2  
                       i2l2501 0E02                         i2l1189 25E0                         i2l3205 20DC  
                       i2l3037 26C8                         i2l3029 26A8                         i2l3061 180E  
                       i2l3045 173E                         i2l3141 1718                         i2l3133 16F4  
                       i2l3125 16B8                         i2l3117 169E                         i2l3109 167A  
                       i2l3301 1196                         i2l3151 22E8                         i2l2431 19DE  
                       i2l2423 197C                         i2l2415 1934                         i2l2407 18F6  
                       i2l2511 0E7A                         i2l2503 0E12                         i2l3207 20EC  
                       i2l3215 2110                         i2l3039 26CE                         i2l3063 181A  
                       i2l3047 1750                         i2l3055 178A                         i2l3143 171C  
                       i2l3135 16F8                         i2l3119 16A2                         i2l3071 15B0  
                       i2l3311 11D2                         i2l3161 2320                         i2l3153 22F0  
                       i2l2601 27DC                         i2l2433 19F0                         i2l2425 198E  
                       i2l2417 1952                         i2l2409 1904                         i2l2521 0EB0  
                       i2l2513 0E80                         i2l2505 0E32                         i2l3401 1BBC  
                       i2l3209 20F8                         i2l3065 1890                         i2l3057 17F4  
                       i2l3049 1762                         i2l3145 172A                         i2l3137 1706  
                       i2l3129 16C2                         i2l3081 15CE                         i2l3073 15BC  
                       i2l3403 2856                         i2l3411 23D8                         i2l3171 234C  
                       i2l3163 2326                         i2l3155 2302                         i2l2427 19BC  
                       i2l2419 195A                         i2l2435 19F6                         i2l2451 1BFA  
                       i2l2443 1BC4                         i2l2531 0F4E                         i2l2523 0EBA  
                       i2l2515 0E90                         i2l2507 0E4E                         i2l2603 2594  
                       i2l3067 1896                         i2l3059 17FC                         i2l3147 172E  
                       i2l3139 170A                         i2l3091 1616                         i2l3083 15D2  
                       i2l3075 15C0                         i2l3323 120A                         i2l3331 125E  
                       i2l3413 23E8                         i2l3421 23FC                         i2l3405 23C4  
                       i2l2701 0B6A                         i2l3165 233C                         i2l3157 230A  
                       i2l3181 24BE                         i2l3173 248E                         i2l2621 22AA  
                       i2l2437 1A06                         i2l2429 19DC                         i2l2461 1C62  
                       i2l2453 1C08                         i2l2445 1BC8                         i2l2381 1F40  
                       i2l2541 1014                         i2l2525 0EC0                         i2l2533 0FB2  
                       i2l2517 0E9C                         i2l2509 0E6A                         i2l2605 25A0  
                       i2l3069 18B2                         i2l3341 2160                         i2l3093 1624  
                       i2l3085 1600                         i2l3325 1244                         i2l3261 1052  
                       i2l3501 1E74                         i2l3415 23EE                         i2l3407 23CE  
                       i2l2711 0BBC                         i2l2703 0B84                         i2l3167 2344  
                       i2l3159 2312                         i2l3183 24D4                         i2l3175 24A0  
                       i2l2623 26DC                         i2l2615 2270                         i2l2439 1A26  
                       i2l2463 1C70                         i2l2471 1CD6                         i2l2455 1C28  
                       i2l2447 1BD6                         i2l2383 1F4A                         i2l2391 25E2  
                       i2l2543 101A                         i2l2535 0FCC                         i2l2527 0F42  
                       i2l2519 0EA4                         i2l2551 143C                         i2l2607 25BC  
                       i2l2631 2566                         i2l3351 2186                         i2l3343 2168  
                       i2l3095 1628                         i2l3087 1604                         i2l3327 1254  
                       i2l3263 1064                         i2l3511 1EBE                         i2l3503 1E82  
                       i2l3193 281A                         i2l3417 23F2                         i2l3409 23D4  
                       i2l2721 0C18                         i2l2713 0BCC                         i2l2705 0B94  
                       i2l2801 0678                         i2l3169 2346                         i2l3185 24DC  
                       i2l3177 24A8                         i2l2617 2278                         i2l2473 1CE6  
                       i2l2465 1C9E                         i2l2457 1C46                         i2l2449 1BF6  
                       i2l2385 1F68                         i2l2377 1F1C                         i2l2393 25EE  
                       i2l2481 2204                         i2l2545 102A                         i2l2537 0FEA  
                       i2l2529 0F48                         i2l2561 1488                         i2l2553 144A  
                       i2l2609 25D8                         i2l2633 2582                         i2l2625 2546  
                       i2l3361 21B8                         i2l3353 2194                         i2l3345 216C  
                       i2l3097 1636                         i2l3089 1612                         i2l3329 125C  
                       i2l3281 110E                         i2l3265 1078                         i2l3257 272E  
                       i2l3513 1ECC                         i2l3505 1E90                         i2l2731 0C58  
                       i2l2723 0C1A                         i2l2715 0BE0                         i2l2707 0BA4  
                       i2l2651 0A60                         i2l2643 0A34                         i2l2811 06B8  
                       i2l2803 0686                         i2l3187 24E2                         i2l3179 24B0  
                       i2l2619 22A8                         i2l2475 1D06                         i2l2467 1CBE  
                       i2l2459 1C4E                         i2l2387 1F9E                         i2l2379 1F2E  
                       i2l2395 2600                         i2l2491 225A                         i2l2483 2210  
                       i2l2539 1004                         i2l2571 154E                         i2l2563 14A4  
                       i2l2555 1458                         i2l2627 2556                         i2l3195 209C  
                       i2l3371 21EC                         i2l3363 21CC                         i2l3355 219C  
                       i2l3347 217A                         i2l3339 214E                         i2l3099 163A  
                       i2l3291 115A                         i2l3283 1142                         i2l3275 10CC  
                       i2l3267 108A                         i2l3259 104C                         i2l3515 1EDC  
                       i2l3507 1EA0                         i2l2741 0C94                         i2l2733 0C62  
                       i2l2725 0C2A                         i2l2717 0BEE                         i2l2709 0BB4  
                       i2l2661 0A9A                         i2l2653 0A70                         i2l2645 0A40  
                       i2l2901 0A16                         i2l2821 0702                         i2l2813 06BE  
                       i2l2805 0688                         i2l2469 1CD0                         i2l2493 2668  
                       i2l2397 2604                         i2l2485 2224                         i2l2573 155C  
                       i2l2565 14FA                         i2l2557 145C                         i2l2581 1586  
                       i2l2549 1418                         i2l2629 255E                         i2l3381 1A6C  
                       i2l3197 20A4                         i2l2637 2754                         i2l3373 21F0  
                       i2l3365 21D0                         i2l3357 21A0                         i2l3349 2182  
                       i2l3285 1146                         i2l3277 10E6                         i2l3269 109C  
                       i2l3461 1FFE                         i2l3517 1EEA                         i2l3509 1EAE  
                       i2l2751 0D06                         i2l2743 0CA2                         i2l2735 0C70  
                       i2l2727 0C3C                         i2l2719 0BFA                         i2l2671 0AC6  
                       i2l2663 0AA0                         i2l2655 0A80                         i2l2647 0A4E  
                       i2l2903 0A18                         i2l2831 0752                         i2l2823 070E  
                       i2l2815 06DE                         i2l2807 0698                         i2l2911 1D28  
                       i2l2591 27C2                         i2l2399 18C0                         i2l2495 2682  
                       i2l2487 2238                         i2l2479 21F6                         i2l2559 146C  
                       i2l3391 1B0C                         i2l3383 1A86                         i2l3375 1A48  
                       i2l3199 20B4                         i2l2639 2770                         i2l3367 21E4  
                       i2l3359 21B4                         i2l3287 114A                         i2l3279 10EA  
                       i2l3471 2032                         i2l3463 2006                         i2l3519 1EEE  
                       i2l2761 0D72                         i2l2753 0D14                         i2l2745 0CD0  
                       i2l2729 0C52                         i2l2737 0C82                         i2l2681 0B00  
                       i2l2673 0AD6                         i2l2665 0AA6                         i2l2657 0A82  
                       i2l2649 0A50                         i2l2905 0A1E                         i2l2841 0794  
                       i2l2833 075E                         i2l2825 0718                         i2l2817 06EE  
                       i2l2809 06A8                         i2l2921 1D7E                         i2l2913 1D3E  
                       i2l2593 27C8                         i2l2489 223C                         i2l2497 0DCE  
                       i2l2577 1574                         i2l2569 152A                         i2l3393 1B82  
                       i2l3385 1AB4                         i2l3377 1A50                         i2l3369 21E8  
                       i2l3289 114E                         i2l3481 2066                         i2l3473 2036  
                       i2l3465 200A                         i2l2771 0DC0                         i2l2763 0D8C  
                       i2l2755 0D3E                         i2l2739 0C90                         i2l2683 0B16  
                       i2l2675 0AE6                         i2l2667 0AB4                         i2l2659 0A8A  
                       i2l2907 0A22                         i2l2851 07F6                         i2l2843 07A0  
                       i2l2835 076A                         i2l2827 072E                         i2l2923 1D8E  
                       i2l2587 284C                         i2l2595 27CA                         i2l2499 0DEE  
                       i2l3395 1B8E                         i2l3387 1AE2                         i2l3379 1A50  
                       i2l3491 2090                         i2l3483 207C                         i2l3475 2040  
                       i2l3467 2014                         i2l3459 1FE6                         i2l2773 0DC2  
                       i2l2765 0DA8                         i2l2749 0CFA                         i2l2757 0D42  
                       i2l2685 0B26                         i2l2693 0B46                         i2l2677 0AE8  
                       i2l2669 0AB6                         i2l2861 088C                         i2l2853 0802  
                       i2l2845 07B0                         i2l2837 0778                         i2l2829 073A  
                       i2l2781 060A                         i2l2933 1DB8                         i2l2925 1D92  
                       i2l2917 1D52                         i2l2597 27D2                         i2l2589 27C0  
                       i2l3397 1B94                         i2l3389 1AFC                         i2l3485 2084  
                       i2l3477 2056                         i2l3469 202A                         i2l3493 1E58  
                       i2l2767 0DAC                         i2l2759 0D5C                         i2l2695 0B56  
                       i2l2687 0B2E                         i2l2679 0AF0                         i2l2871 08E2  
                       i2l2863 08AA                         i2l2855 081E                         i2l2847 07CA  
                       i2l2839 0784                         i2l2791 0646                         i2l2783 0616  
                       i2l2951 1E1C                         i2l2943 1DE0                         i2l2935 1DC2  
                       i2l2927 1DA0                         i2l2919 1D7C                         i2l2599 27D4  
                       i2l3399 1BB0                         i2l3487 2088                         i2l3479 205E  
                       i2l3495 1E66                         i2l2769 0DBA                         i2l2697 0B56  
                       i2l2689 0B32                         i2l2881 094C                         i2l2873 08E6  
                       i2l2865 08B4                         i2l2857 0848                         i2l2849 07DA  
                       i2l2793 0656                         i2l2785 0624                         i2l2945 1DEC  
                       i2l2937 1DCC                         i2l2961 12CA                         i2l3489 208C  
                       i2l3497 1E6E                         i2l2891 09AE                         i2l2883 0958  
                       i2l2875 08F4                         i2l2867 08C2                         i2l2859 087E  
                       i2l2795 065C                         i2l2787 0626                         i2l2947 1DFC  
                       i2l2971 1308                         i2l2963 12E0                         i2l2955 1266  
                       i2l3499 1E72                         i2l2893 09C2                         i2l2885 0966  
                       i2l2877 0922                         i2l2869 08D4                         i2l2797 066C  
                       i2l2789 0636                         i2l2949 1E0C                         i2l2981 1390  
                       i2l2973 133A                         i2l2957 1276                         i2l2895 09DC  
                       i2l2887 0990                         i2l2799 0672                         i2l2991 13E6  
                       i2l2983 139E                         i2l2975 133C                         i2l2967 12F4  
                       i2l2959 1284                         i2l3775 121E                         _INTCON 000FF2  
                       i2l2897 09F8                         i2l2889 0994                         i2l2993 13F6  
                       i2l2985 13BC                         i2l2977 1348                         i2l2969 12FC  
                       i2l3777 2126                         i2l3779 2412                         i2l2899 0A08  
                       i2l2995 1404                         i2l2987 13BE                         i2l2979 1384  
                       i2l2997 1406                         i2l2989 13C2         ?i2_start_AD_conversion 0001  
                       _TMR0IE 007F95                         _TMR0IF 007F92               __end_of___xxtofl 1418  
                    ??_Read_AD 006C               __end_of_f_timers 209C                   vfprintf@cfmt 0057  
             __end_of_lcd_init 23C4                      ??___aodiv 0011                      ??___aomod 0011  
                       ___wmul 2754                      ??___fldiv 0030                         _f_int0 26A8  
                       _f_int1 2842                         _f_int2 1738                      ??___flmul 0017  
                    ??___fltol 0045                      ??___lwdiv 000A                      ??___lwmod 0005  
                       _buffer 00E0                         _lcd_wr 2826                         _linha1 0091  
                       _linha2 0080                         clear_0 2462                         clear_1 246E  
                       clear_2 247A                         isa$std 000001                         pad@buf 0013  
                    ??_lcd_dat 0002                      ??_lcd_cmd 0121                         dtoa@fp 001C  
                    ??_lcd_str 0005                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                   __pdataCOMRAM 007E                         fputs@s 000A  
           _estado_sequencia01 00DA             _estado_sequencia02 00D9                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6               __end_of_setup_io 279C  
                       tblptru 000FF8                         putch@c 0001               __end_of_vfprintf 25E2  
                    ??_sprintf 005F              __end_ofi2_lcd_cmd 27BE                   ?_show_to_LCD 0001  
                 ?_mux_display 0001                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     __accesstop 0080        __end_of__initialization 2480  
               _select_channel 2818            _start_AD_conversion 2852                  ___rparam_used 000001  
                   ___fltol@f1 0041                 __pcstackCOMRAM 0001                   __pidataBANK0 2626  
                __end_of_f_pwm 2708                  __end_of_fputc 1FE6                  __end_of_fputs 2626  
                __end_of_setup 2546                  __end_of_putch 285E           ?_start_AD_conversion 0001  
                    ?i2_lcd_wr 0001                   i2lcd_cmd@val 0002                        ??_f_pwm 0003  
                      ??_fputc 0005                        ??_fputs 000E                        ??_setup 0123  
                      ??_putch 0001         __end_of_select_channel 2826                     __pbssBANK0 00C1  
                   __pbssBANK1 0100                        ?___wmul 0001               ??_interrupt_init 0120  
                      ?_f_int0 0001                        ?_f_int1 0001                        ?_f_int2 0001  
                      ?_lcd_wr 0001                        _CCP1CON 000FBD                  _read_keyboard 104C  
                      _ADC_maq 23C4          ??_start_AD_conversion 0120              read_keyboard@dado 0078  
                      _AD_data 00C9                        _AD_init 280A                     ??i2_lcd_wr 0001  
                      _INTCON2 000FF1                        _INTCON3 000FF0                      ?___xxtofl 0001  
     __end_of_f_interrupt_high 1F1C                      ?_f_timers 0001                      ?_lcd_init 0001  
              ?_select_channel 0001                   ler_teclado@i 0001                        _Read_AD 1A48  
                      __Hparam 0000                        __Lparam 0000                      ?_setup_io 0001  
                      ___aodiv 18C0                        ___aomod 1BC4                        ___fldiv 0A34  
                      ___flmul 060A                        ___fltol 1D28                 ?_read_keyboard 0001  
                      ___lwdiv 22E8                        ___lwmod 248E                      ?_vfprintf 0051  
                 __psmallconst 0600                        __pcinit 242A                        __ramtop 0600  
                      __ptext0 27FA                        __ptext1 24F2                        __ptext2 2852  
                      __ptext3 277A                        __ptext4 235C                        __ptext5 2708  
                      __ptext6 2826                        __ptext7 27E0                        __ptext8 2830  
                      __ptext9 283A                        _lcd_dat 27BE                        _lcd_cmd 2708  
                      _lcd_str 2270                        _duty_AD 00D7                     ??___xxtofl 0005  
            __end_of_read_keyb 21F6                     ??_f_timers 0076        ??i2_start_AD_conversion 0001  
                      _sprintf 2546                     ??_lcd_init 0122                 __pintcode_body 1E2E  
         end_of_initialization 2480                        fputc@fp 0003                  __Lmediumconst 0000  
                      int_func 1E2E                        fputs@fp 000C              __end_of_vfpfcnvrt 15B0  
                      postdec1 000FE5                        postdec2 000FDD                     ??_setup_io 0120  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                      _PORTEbits 000F84  
                ___xxtofl@sign 0009                     lcd_dat@val 0002                     lcd_cmd@val 0121  
                  ___fldiv@grs 003B                    ___fldiv@rem 0034                    ___flmul@grs 001C  
                    i2_lcd_cmd 279C                     lcd_str@str 0003                ??_read_keyboard 0009  
                  vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F  
               __end_of___wmul 277A                 __end_of_f_int0 26DC                 __end_of_f_int1 284A  
               __end_of_f_int2 18C0                  __pidataCOMRAM 285E                 __end_of_lcd_wr 2830  
            _enable_interrupts 2830          select_channel@channel 0001             ?_enable_interrupts 0001  
          start_initialization 242A                    __end_of_abs 26A8                    __end_of_pad 2270  
          ??_enable_interrupts 0120                     ?i2_lcd_cmd 0001             ler_teclado@entrada 0008  
                  vfprintf@fmt 0053                       ??___wmul 0005                       ??_f_int0 0008  
                     ??_f_int1 0001                       ??_f_int2 006C                  ??_ler_teclado 0001  
                     ??_lcd_wr 0120                    __pdataBANK0 0080      __end_of_enable_interrupts 283A  
                     ?_ADC_maq 0001                      ___fldiv@a 002C                      ___fldiv@b 0028  
                     ?_AD_init 0001                      ___flmul@a 0013                      ___flmul@b 000F  
                  __pbssCOMRAM 0076               ??_select_channel 0001                  __pcstackBANK0 00EA  
                __pcstackBANK1 0120               ___aodiv@dividend 0001              ?_f_interrupt_high 0001  
            _duty_LCD1_TECLADO 007E             ??_f_interrupt_high 00EA              _duty_LCD2_TECLADO 00C0  
            _duty_LCD3_TECLADO 00BF              _duty_LCD4_TECLADO 00BE                       ?_Read_AD 0001  
                    __pnvBANK0 00F4                 Read_AD@pwm_aux 0070               ___lwdiv@dividend 0006  
                    __pintcode 0008    __end_of_start_AD_conversion 2856                       ?___aodiv 0001  
          read_keyb@m_dado_RB3 00BD            read_keyb@m_dado_RB4 00BC            read_keyb@m_dado_RB5 00BB  
                     ?___aomod 0001                       ?___fldiv 0028               ___aodiv@quotient 0013  
                     ?___flmul 000F                       ?___fltol 0041                       ?___lwdiv 0006  
                     ?___lwmod 0001                   _memoria_dado 00D6                       ?_lcd_dat 0001  
                     ?_lcd_cmd 0001                       ?_lcd_str 0003                    __smallconst 0600  
          __end_of_ler_teclado 1738               ___lwdiv@quotient 000A                       ?_sprintf 0059  
                    _read_keyb 214E  __end_ofi2_start_AD_conversion 285A                    ??i2_lcd_cmd 0002  
               ___wmul@product 0005                   _duty_teclado 00C1                       i2u200_40 0C18  
                     i2u200_41 0C14                       i2u201_40 0C3C                       i2u201_41 0C38  
                     i2u210_40 0D5C                       i2u202_40 0C52                       i2u210_41 0D58  
                     i2u202_41 0C4E                       i2u211_40 0D8C                       i2u203_40 0C70  
                     i2u211_41 0D88                       i2u203_41 0C6C                       i2u212_40 0DBA  
                     i2u204_40 0C90                       i2u220_40 06EE                       i2u300_40 1EEA  
                     i2u212_41 0DB6                       i2u204_41 0C8C                       i2u220_41 06EA  
                     i2u300_41 1EE6                       i2u205_40 0CA2                       i2u221_40 0868  
                     i2u213_40 0624                       i2u205_41 0C9E                       i2u213_41 0620  
                     i2u221_45 085E                       i2u206_40 0CD0                       i2u230_40 09DC  
                     i2u222_40 08C2                       i2u214_40 0636                       i2u206_41 0CCC  
                     i2u230_41 09D8                       i2u222_41 08BE                       i2u214_41 0632  
                     i2u207_40 0CE6                       i2u231_40 0A16                       i2u223_40 08E2  
                     i2u215_40 0646                       i2u151_40 1F2E                       i2u207_41 0CE2  
                     i2u231_41 0A12                       i2u223_41 08DE                       i2u215_41 0642  
                     i2u151_41 1F2A                       i2u208_40 0CFA                       i2u224_40 08F4  
                     i2u216_40 0686                       i2u232_40 1D3E                       i2u240_40 1284  
                     i2u160_40 197C                       i2u152_40 1F40                       i2u208_41 0CF6  
                     i2u224_41 08F0                       i2u216_41 0682                       i2u232_41 1D3A  
                     i2u240_41 1280                       i2u160_41 1978                       i2u152_41 1F3C  
                     i2u209_40 0D14                       i2u225_40 0922                       i2u217_40 0698  
                     i2u233_40 1D72                       i2u241_40 12E0                       i2u161_40 19BC  
                     i2u153_40 1F68                       i2u209_41 0D10                       i2u225_41 091E  
                     i2u217_41 0694                       i2u241_41 12DC                       i2u161_41 19B8  
                     i2u153_41 1F64                       i2u233_45 1D68                       i2u226_40 0938  
                     i2u218_40 06A8                       i2u234_40 1DA0                       i2u242_40 1336  
                     i2u162_40 1A06                       i2u154_40 1F9E                       i2u170_40 225A  
                     i2u250_40 1762                       i2u226_41 0934                       i2u218_41 06A4  
                     i2u234_41 1D9C                       i2u242_41 1332                       i2u162_41 1A02  
                     i2u154_41 1F9A                       i2u170_41 2256                       i2u250_41 175E  
                    f_pwm@duty 0001                       i2u306_47 27AA                       i2u227_40 094C  
                     i2u219_40 06DE                       i2u235_40 1DB4                       i2u243_40 1380  
                     i2u163_40 1BD6                       i2u171_40 2682                       i2u155_40 2624  
                     i2u251_40 1774                       i2u227_41 0948                       i2u219_41 06DA  
                     i2u235_41 1DB0                       i2u243_41 137C                       i2u163_41 1BD2  
                     i2u171_41 267E                       i2u155_41 2620                       i2u251_41 1770  
                     i2u307_47 27B4                       i2u228_40 0966                       i2u236_40 1DDC  
                     i2u244_40 139E                       i2u156_40 18D2                       i2u164_40 1C08  
                     i2u180_40 1004                       i2u172_40 0DFE                       i2u252_40 1786  
                     i2u260_40 167A                       i2u228_41 0962                       i2u236_41 1DD8  
                     i2u244_41 139A                       i2u156_41 18CE                       i2u164_41 1C04  
                     i2u180_41 1000                       i2u172_41 0DF8                       i2u252_41 1782  
                     i2u260_41 1676                       i2u308_47 27CC                       i2u229_40 09AE  
                     i2u237_40 1DFC                       i2u245_40 13AE                       i2u157_40 1904  
                     i2u165_40 1C46                       i2u181_40 1014                       i2u173_40 0E00  
                     i2u253_40 180E                       i2u261_40 168C                       i2u229_41 09AA  
                     i2u237_41 1DF8                       i2u245_41 13AA                       i2u157_41 1900  
                     i2u165_41 1C42                       i2u181_41 1010                       i2u253_41 180A  
                     i2u261_41 1688                       i2u309_47 27D6                       i2u190_40 0A4E  
                     i2u238_40 1E0C                       i2u270_40 2320                       i2u246_40 13BC  
                     i2u166_40 1C70                       i2u174_40 0E12                       i2u182_40 143C  
                     i2u262_40 169E                       i2u254_40 15EE                       i2u190_41 0A4A  
                     i2u238_41 1E08                       i2u270_41 231C                       i2u246_41 13B8  
                     i2u158_41 192E                       i2u166_41 1C6C                       i2u174_41 0E0E  
                     i2u182_41 1438                       i2u262_41 169A                       i2u254_41 15EA  
                     i2u191_40 0A60                       i2u271_40 233C                       i2u247_40 13F6  
                     i2u239_40 1276                       i2u159_40 1952                       i2u167_40 1C9E  
                     i2u175_40 0E4E                       i2u183_40 1488                       i2u263_40 16B0  
                     i2u255_40 1600                       i2u191_41 0A5C                       i2u271_41 2338  
                     i2u247_41 13F2                       i2u239_41 1272                       i2u159_41 194E  
                     i2u167_41 1C9A                       i2u175_41 0E4A                       i2u183_41 1484  
                     i2u263_41 16AC                       i2u255_41 15FC                       i2u192_40 0A70  
                     i2u272_40 24A0                       i2u248_40 1404                       i2u168_40 1CE6  
                     i2u176_40 0E7A                       i2u184_40 14A4                       i2u264_40 16E2  
                     i2u256_40 1612                       i2u280_40 1254                       i2u192_41 0A6C  
                     i2u272_41 249C                       i2u248_41 1400                       i2u168_41 1CE2  
                     i2u176_41 0E76                       i2u184_41 14A0                       i2u264_41 16DE  
                     i2u256_41 160E                       i2u280_41 1250                       i2u193_40 0AB4  
                     i2u273_40 24BE                       i2u169_40 2204                       i2u177_40 0E90  
                     i2u185_40 154E                       i2u249_40 1750                       i2u281_40 2160  
                     i2u265_40 16F4                       i2u257_40 1624                       i2u193_41 0AB0  
                     i2u273_41 24BA                       i2u169_41 2200                       i2u177_41 0E8C  
                     i2u185_41 154A                       i2u249_41 174C                       i2u281_41 215C  
                     i2u265_41 16F0                       i2u257_41 1620                       i2u194_40 0AC6  
                     i2u274_40 24D4                       i2u178_40 0FCC                       i2u186_40 25D8  
                     i2u282_40 217A                       i2u266_40 1706                       i2u258_40 1636  
                     i2u290_40 2056                       i2u194_41 0AC2                       i2u274_41 24D0  
                     i2u178_41 0FC8                       i2u186_41 25D4                       i2u282_41 2176  
                     i2u266_41 1702                       i2u258_41 1632                       i2u290_41 2052  
                     i2u195_40 0AD6                       i2u187_40 22A4                       i2u179_40 0FEA  
                     i2u283_40 2194                       i2u267_40 1718                       i2u259_40 1668  
                     i2u275_40 1064                       i2u291_40 207C                       i2u195_41 0AD2  
                     i2u179_41 0FE6                       i2u283_41 2190                       i2u267_41 1714  
                     i2u259_41 1664                       i2u275_41 1060                       i2u291_41 2078  
                     i2u187_47 229A                       i2u196_40 0B16                       i2u188_40 22D6  
                     i2u284_40 21B4                       i2u268_40 172A                       i2u276_40 1078  
                     i2u292_40 1E66                       i2u196_41 0B12                       i2u284_41 21B0  
                     i2u268_41 1726                       i2u276_41 1074                       i2u292_41 1E62  
                     i2u188_47 22CC                       i2u197_40 0B56                       i2u269_40 2302  
                     i2u189_40 22E6                       i2u285_40 21CC                       i2u277_40 108A  
                     i2u293_40 1E82                       i2u197_41 0B52                       i2u269_41 22FE  
                     i2u189_41 22E2                       i2u285_41 21C8                       i2u277_41 1086  
                     i2u293_41 1E7E                       i2u198_40 0BCC                       i2u286_40 21E4  
                     i2u278_40 109C                       i2u294_40 1E90                       i2u198_41 0BC8  
                     i2u286_41 21E0                       i2u278_41 1098                       i2u294_41 1E8C  
                     i2u199_40 0BEE                       i2u287_40 1B0C                       i2u279_40 1106  
                     i2u295_40 1EA0                       i2u199_41 0BEA                       i2u287_41 1B08  
                     i2u279_41 1102                       i2u295_41 1E9C                       i2u288_40 1FFE  
                     i2u296_40 1EAE                       i2u288_41 1FFA                       i2u296_41 1EAA  
                     i2u289_40 202A                       i2u297_40 1EBE                       i2u289_41 2026  
                     i2u297_41 1EBA                       i2u298_40 1ECC                       i2u298_41 1EC8  
                     i2u299_40 1EDC                       i2u299_41 1ED8                      _vfpfcnvrt 1418  
            ___wmul@multiplier 0001                       i2_lcd_wr 284A                      lcd_wr@val 0120  
                   ?_read_keyb 0001                      copy_data0 243E                  ??_show_to_LCD 0003  
                ??_mux_display 0001                       __Hrparam 0000                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051                    _ler_teclado 15B0  
                   ?_vfpfcnvrt 003F     __end_of_disable_interrupts 2842                ___aodiv@divisor 0009  
              ___aodiv@counter 0011                     sprintf@fmt 005B                       ___xxtofl 1264  
                     _dtoa$910 002E                ___lwdiv@divisor 0008                       _f_timers 1FE6  
              ___lwdiv@counter 000C                       __ptext10 280A                       __ptext11 285A  
                     __ptext20 2842                       __ptext21 26A8                       __ptext13 1FE6  
                     __ptext30 25E2                       __ptext22 209C                       __ptext14 272E  
                     __ptext31 1F1C                       __ptext23 1A48                       __ptext15 104C  
                     __ptext40 1264                       __ptext32 285C                       __ptext24 279C  
                     __ptext16 15B0                       __ptext41 248E                       __ptext33 2668  
                     __ptext25 2546                       __ptext17 214E                       __ptext42 22E8  
                     __ptext34 1BC4                       __ptext26 2594                       __ptext18 1738  
                     __ptext43 1D28                       __ptext35 18C0                       __ptext27 1418  
                     __ptext19 2754                       __ptext44 060A                       __ptext36 2270  
                     __ptext28 0DCE                       __ptext45 0A34                       __ptext37 27BE  
                     __ptext29 21F6                       __ptext46 23C4                       __ptext38 284A  
                     __ptext47 2856                       __ptext39 26DC                       __ptext48 2818  
                     _conv7seg 00A2                       _lcd_init 235C                       _display1 00DE  
                     _display2 00DD                       _display3 00DC                       _display4 00DB  
            mux_display@estado 00D8            __end_of_show_to_LCD 2754            __end_of_mux_display 214E  
                     isa$xinst 000000                  _temporizador1 00F6                  _temporizador2 00F4  
                     _setup_io 277A                       int$flags 007F          __end_of_read_keyboard 1264  
                     _vfprintf 2594                       lcd_str@i 0007               ___aomod@dividend 0001  
                  ??_read_keyb 0072                       intlevel2 0000                      sprintf@ap 005F  
             ___lwmod@dividend 0001                 read_keyboard@i 000B                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                  read_keyb@dado 0075                ___aomod@counter 0011  
                     sprintf@f 0061                       sprintf@s 0059                ___lwmod@divisor 0003  
               _interrupt_init 27E0                ___lwmod@counter 0005                    _porcentagem 00D3  
                  _show_to_LCD 272E                   ___aodiv@sign 0012                    _mux_display 209C  
                 ___aomod@sign 0012  
